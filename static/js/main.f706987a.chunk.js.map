{"version":3,"sources":["layouts/viz.js","stores/AlignmentStore.js","components/Sankey.js","utils/index.js","components/MatchingGraph.js","components/LUMatchingGraph.js","components/SynsetGraph.js","components/FEMatchingGraph.js","stores/UiState.js","components/ChartPanel.js","components/FormLabel.js","components/CheckBox.js","components/NumericInput.js","components/CheckBoxEnabledInput.js","components/JsonFileInput.js","components/Slider.js","components/Sidebar.js","App.js","serviceWorker.js","index.js"],"names":["viz","version","keyPrimary","keySecondary","value","width","height","orient","barSize","min","pad","data","fill","g","edgeOpacity","duration","sortPrimary","sortSecondary","edgeMode","bP","_","each","d3","this","bars","s","selectAll","subBars","enter","append","attr","d","x","y","fx","fy","fw","fh","style","e","edges","path","mainBars","arguments","length","mb","primary","secondary","key","_or","calculateMainBars","calculateSubBars","m","forEach","floorMainBars","concat","map","index","eMode","get","edgeVert","edgeHoriz","percent","x1","y1","x2","y2","x3","y3","x4","y4","join","mx1","mx3","my1","my3","calculateEdges","isSelKey","part","v","ps","sortKeys","rollup","entries","bpmap","bsize","i","push","p","values","t","a","r","ln","lp","o","b","ret","update","_data","b1","dur","transition","select","mouseover","newbars","filter","mouseout","DEFAULT_PARAMS","attr_matching","threshold","displayOnlyFrameSet","sankeyMaxEdges","limitSankeyEdges","lu_wordnet","lu_muse","neighborhoodSize","similarityThreshold","lu_mean_muse","FE_SCORING_TYPES","Set","LU_SCORING_TYPES","AlignmentStore","uiState","indices","frames","framesByName","synsetsByLU","synsetData","vectorIdsByLU","wordsByVectorId","frameVectorCache","previousParams","createNode","name","inDegree","outDegree","load","action","fndb","db","language","lang","alignments","row","j","id","Object","prototype","hasOwnProperty","call","frame","scoringOptions","desc","type","params","resources","lu_to_syn","syn_data","lu_vec_nn","id2word","setSelectedFramePair","scoring","sankeyFrames","frameSet","prevParams","recompute","size","every","has","computeEdges","frameId","LUs","gid","LUVectorMatchingScore","bfnFrame","l2Frame","flatMap","slice","nodes","getNodes","inter","getConnectionObjects","links","l","target","hasLeftSource","n","source","swap","isReferenceNode","isIntersection","isMatchingNode","computeDegrees","isReferenceFn","hasRightSource","left","right","frameAttr","nodeNameFn","selectedFrames","LUNodes","relationMap","Array","isArray","isDirected","intermediateMap","node","sort","counts","state","filterFn","filtered","getEdges","pruneEdges","f","options","flat","label","disabled","FEs","LUWordNetGraph","synsetGraph","LUMuseGraph","FEMatchingGraph","decorate","observable","lexicalIndices","computed","sankeyData","frameOptions","scoreFormatter","format","colors","Sankey","observer","props","svg","selection","bPg","renderSankey","bar","shrink","expand","edge","store","onEdgeClick","text","max","fontSize","fontFace","canvas","document","createElement","context","getContext","font","replace","measureText","getRenderedTextSize","colorGen","reduce","res","current","next","labelSize","getLabelSize","colorMap","getColorMap","remove","Math","vMargin","hMargin","on","onNodeClick","className","minWidth","ref","React","Component","MatchingGraph","root","renderGraph","datum","direction","ccoef","abs","framePair","margin","matching","reference","html","bbox","getBBox","onMouseOverNode","onMouseOutNode","computePath","includeFooter","linked","add","markerWidth","markerHeight","refX","refY","points","LUMatchingGraph","graphData","scalePoint","domain","range","padding","yLU1","yLU2","yInter","frm1LUX","frm2LUX","interX","getRenderingData","SynsetGraph","posRegex","synset","highlighted","definition","lemmaHtml","tooltip","getBoundingClientRect","top","window","innerHeight","lemma","isHighlighted","yLeft","yRight","xLeft","xRight","UiState","isSidebarOpen","isAlignmentDetailVisible","find","scoringSelectOptions","ChartPanel","selectableTypes","indexOf","onClick","onBackClick","renderMatchingGraph","FormLabel","children","CheckBox","checked","onChange","marginLeft","NumericInput","step","placeholder","renderLabel","Number","CheckBoxEnabledInput","onCheckedChange","onValueChange","JsonFileInput","onFileChange","event","file","files","reader","FileReader","addEventListener","error","JSON","parse","result","exception","setState","readAsBinaryString","renderError","Slider","Sidebar","onScoringChange","option","setScoring","onFrameSelectionChange","selected","updateParam","param","onThresholdChange","onLimitSankeyEdgesChange","onSankeyEdgesMaxChange","onDisplayOnlyFrameSetChange","onNeighborhoodSizeChange","onSimilarityThresholdChange","sidebarWidth","contentDisplay","display","color","marginTop","renderVectorFields","items","selectedItems","responsiveHeight","itemHeight","wrapperClassName","onResize","App","handleWidth","handleHeight","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f706987a.chunk.js","sourcesContent":["import * as d3 from 'd3';\n\nvar viz = { version: \"1.1.8\" };\n\nviz.bP = function(){\n\tvar keyPrimary, keySecondary, value\n\t,width, height, orient, barSize, min, pad\n\t,data, fill, g, edgeOpacity, duration\n\t,sortPrimary, sortSecondary, edgeMode\n\t;\n\tfunction bP(_){\n\tg=_;\n\t\t\t_.each(function() {\n\t\t\t\tvar g = d3.select(this);\n\t\tvar bars = bP.bars();\n\t\n\t\tvar s = g.selectAll(\".subBars\")\n\t\t\t\t.data(bars.subBars)\n\t\t\t\t.enter()\n\t\t.append(\"g\")\n\t\t.attr(\"transform\", function(d){ return \"translate(\"+d.x+\",\"+d.y+\")\";})\n\t\t\t\t.attr(\"class\",\"subBars\")\n\t\t\t\t.append(\"rect\")\n\t\t\t\t.attr(\"x\",fx).attr(\"y\",fy).attr(\"width\",fw).attr(\"height\",fh);\n\t\t\n\t\t\t\tif(typeof fill !==\"undefined\") s.style(\"fill\", function(d){ return fill(d); });\n\t\t\t\n\t\t\t\tvar e = g.selectAll(\".edges\")\n\t\t\t\t.data(bars.edges)\n\t\t\t\t.enter()\n\t\t\t\t.append(\"path\")\n\t\t\t\t.attr(\"class\",\"edges\")\n\t\t\t\t.attr(\"d\",function(d){ return d.path; })\n\t\t.style(\"fill-opacity\",bP.edgeOpacity());\n\t\t\t\t\n\t\t\t\tif(typeof fill !==\"undefined\") e.style(\"fill\", function(d){ return fill(d); });\n\t\t\n\t\t\t\tg.selectAll(\".mainBars\")\n\t\t\t\t.data(bars.mainBars)\n\t\t\t\t.enter()\n\t\t.append(\"g\")\n\t\t.attr(\"transform\", function(d){ return \"translate(\"+d.x+\",\"+d.y+\")\";})\n\t\t\t\t.attr(\"class\",\"mainBars\")\n\t\t\t\t.append(\"rect\")\n\t\t\t\t.attr(\"x\",fx).attr(\"y\",fy).attr(\"width\",fw).attr(\"height\",fh)\n\t\t.style(\"fill-opacity\",0)\n\t\t// .on(\"mouseover\",bP.mouseover)\n\t\t// .on(\"mouseout\",bP.mouseout);\n\t});\n\t}\n\tbP.data = function(_){\n\tif(!arguments.length) return data;\n\tdata = _;\n\treturn bP;\n\t}\n\tbP.fill = function(_){\n\tif(!arguments.length) return fill;\n\tfill = _;\n\treturn bP;\n\t}\n\tbP.keyPrimary = function(_){ \n\tif(!arguments.length) return typeof keyPrimary !== \"undefined\" ? keyPrimary : function(d){ return d[0]; } ;\n\tkeyPrimary = _;\n\treturn bP;\t\t\n\t}\n\tbP.sortPrimary = function(_){ \n\tif(!arguments.length) return typeof sortPrimary !== \"undefined\" ? sortPrimary : d3.ascending ;\n\tsortPrimary = _;\n\treturn bP;\t\t\n\t}\n\tbP.keySecondary = function(_){ \n\tif(!arguments.length) return typeof keySecondary !== \"undefined\" ? keySecondary : function(d){ return d[1]; };\n\tkeySecondary = _;\n\treturn bP;\t\t\n\t}\n\tbP.sortSecondary = function(_){ \n\tif(!arguments.length) return typeof sortSecondary !== \"undefined\" ? sortSecondary : d3.ascending;\n\tsortSecondary = _;\n\treturn bP;\t\t\n\t}\t  \n\tbP.value = function(_){ \n\tif(!arguments.length) return typeof value !== \"undefined\" ? value : function(d){ return d[2]; };\n\tvalue = _;\n\treturn bP;\t\t\n\t}\t  \n\tbP.width = function(_){\n\tif(!arguments.length) return typeof width !== \"undefined\" ? width : 400;\n\twidth = _;\n\treturn bP;\n\t}\n\tbP.height = function(_){\n\tif(!arguments.length) return typeof height !== \"undefined\" ? height : 600;\n\theight = _;\n\treturn bP;\n\t}\n\tbP.barSize = function(_){\n\tif(!arguments.length) return typeof barSize !== \"undefined\" ? barSize : 35;\n\tbarSize = _;\n\treturn bP;\n\t}\n\tbP.min = function(_){\n\tif(!arguments.length) return typeof min !== \"undefined\" ? min : 0;\n\tmin = _;\n\treturn bP;\n\t}\n\tbP.orient = function(_){\n\tif(!arguments.length) return typeof orient !== \"undefined\" ? orient : \"vertical\";\n\torient = _;\n\treturn bP;\n\t}\n\tbP.pad = function(_){\n\tif(!arguments.length) return typeof pad !== \"undefined\" ? pad : 0;\n\tpad = _;\n\treturn bP;\n\t}\n\tbP.duration = function(_){\n\tif(!arguments.length) return typeof duration !== \"undefined\" ? duration : 500;\n\tduration = _;\n\treturn bP;\n\t}\n\tbP.edgeOpacity = function(_){\n\tif(!arguments.length) return typeof edgeOpacity !== \"undefined\" ? edgeOpacity : .4;\n\tedgeOpacity = _;\n\treturn bP;\n\t}\n\tbP.edgeMode = function(_){\n\tif(!arguments.length) return typeof edgeMode !== \"undefined\" ? edgeMode : \"curved\";\n\tedgeMode = _;\n\treturn bP;\n\t}\n\tbP.bars = function(mb){\n\tvar mainBars={primary:[], secondary:[]};\n\tvar subBars= {primary:[], secondary:[]};\n\tvar key ={primary:bP.keyPrimary(), secondary:bP.keySecondary() };\n\tvar _or = bP.orient();\n\t\n\tcalculateMainBars(\"primary\");\n\tcalculateMainBars(\"secondary\");\t\n\tcalculateSubBars(\"primary\");\t\n\tcalculateSubBars(\"secondary\");\n\tfloorMainBars(); // ensure that main bars is atleast of size mi.n\n\t\n\treturn {\n\t\t\tmainBars:mainBars.primary.concat(mainBars.secondary)\n\t\t,subBars:subBars.primary.concat(subBars.secondary)\n\t\t,edges:calculateEdges()\n\t};\n\n\tfunction isSelKey(d, part){ \n\t\treturn (typeof mb === \"undefined\" || mb.part === part) || (key[mb.part](d) === mb.key);\n\t}\n\tfunction floorMainBars(){\n\t\tvar m =bP.min()/2;\n\t\t\n\t\tmainBars.primary.forEach(function(d){\n\t\t\tif(d.height<m) d.height=m;\n\t\t});\n\t\tmainBars.secondary.forEach(function(d){\n\t\t\tif(d.height<m) d.height=m;\n\t\t});\n\t}\n\tfunction calculateMainBars(part){\n\t\t\t;\n\t\tfunction v(d){ return isSelKey(d, part) ? bP.value()(d): 0;};\n\n\t\tvar ps = d3.nest()\n\t\t\t.key(part===\"primary\"? bP.keyPrimary():bP.keySecondary())\n\t\t\t.sortKeys(part===\"primary\"? bP.sortPrimary():bP.sortSecondary())\n\t\t\t.rollup(function(d){ return d3.sum(d,v); })\n\t\t\t.entries(bP.data())\n\t\t;\n\t\t\n\t\tvar bars = bpmap(ps, bP.pad(), bP.min(), 0, _or===\"vertical\" ? bP.height() : bP.width());\n\t\tvar bsize = bP.barSize();\n\t\tps.forEach(function(d,i){ \n\t\t\tmainBars[part].push({\n\t\t\t\t\tx:_or===\"horizontal\"? (bars[i].s+bars[i].e)/2 : (part===\"primary\" ? bsize/2 : bP.width()-bsize/2)\n\t\t\t\t,y:_or===\"vertical\"? (bars[i].s+bars[i].e)/2 : (part===\"primary\" ? bsize/2 : bP.height()-bsize/2)\n\t\t\t\t,height:_or===\"vertical\"? (bars[i].e - bars[i].s)/2 : bsize/2\n\t\t\t\t,width: _or===\"horizontal\"? (bars[i].e - bars[i].s)/2 : bsize/2\n\t\t\t\t,part:part\n\t\t\t\t,key:d.key\n\t\t\t\t,value:d.value\n\t\t\t\t,percent:bars[i].p\n\t\t\t});\n\t\t});\n\t}\n\tfunction calculateSubBars(part){\n\t\tfunction v(d){ return isSelKey(d, part) ? bP.value()(d): 0;};\n\t\t\t\t\n\t\tvar map = d3.map(mainBars[part], function(d){ return d.key});\n\t\t\n\t\tvar ps = d3.nest()\n\t\t\t.key(part===\"primary\"? bP.keyPrimary():bP.keySecondary())\n\t\t\t.sortKeys(part===\"primary\"? bP.sortPrimary():bP.sortSecondary())\n\t\t\t.key(part===\"secondary\"? bP.keyPrimary():bP.keySecondary())\n\t\t\t.sortKeys(part===\"secondary\"? bP.sortPrimary():bP.sortSecondary())\n\t\t\t.rollup(function(d){ return d3.sum(d,v); })\n\t\t\t.entries(bP.data());\n\n\t\tps.forEach(function(d){ \n\t\t\tvar g= map.get(d.key); \n\t\t\tvar bars = bpmap(d.values, 0, 0\n\t\t\t\t\t,_or===\"vertical\" ? g.y-g.height : g.x-g.width\n\t\t\t\t\t,_or===\"vertical\" ? g.y+g.height : g.x+g.width);\n\n\t\t\tvar bsize = bP.barSize();\t\t\t\n\t\t\td.values.forEach(function(t,i){ \n\t\t\t\tsubBars[part].push({\n\t\t\t\t\t\tx:_or===\"vertical\"? part===\"primary\" ? bsize/2 : bP.width()-bsize/2 : (bars[i].s+bars[i].e)/2\n\t\t\t\t\t,y:_or===\"horizontal\"? part===\"primary\" ? bsize/2 : bP.height()-bsize/2 : (bars[i].s+bars[i].e)/2\n\t\t\t\t\t,height:(_or===\"vertical\"? bars[i].e - bars[i].s : bsize)/2\n\t\t\t\t\t,width: (_or===\"horizontal\"? bars[i].e - bars[i].s : bsize)/2\n\t\t\t\t\t,part:part\n\t\t\t\t\t,primary:part===\"primary\"? d.key : t.key\n\t\t\t\t\t,secondary:part===\"primary\"? t.key : d.key\t\n\t\t\t\t\t,value:t.value\n\t\t\t\t\t,percent:bars[i].p*g.percent\n\t\t\t\t\t,index: part===\"primary\"? d.key+\"|\"+t.key : t.key+\"|\"+d.key //index \n\t\t\t\t});\n\t\t\t});\t\t  \n\t\t});\n\t}\n\tfunction calculateEdges(){\t\n\t\tvar map=d3.map(subBars.secondary,function(d){ return d.index;});\n\t\tvar eMode= bP.edgeMode();\n\t\t\n\t\treturn subBars.primary.map(function(d){\n\t\t\tvar g=map.get(d.index);\n\t\t\treturn {\n\t\t\t\t\tpath:_or === \"vertical\" \n\t\t\t\t\t? edgeVert(d.x+d.width,d.y+d.height,g.x-g.width,g.y+g.height,g.x-g.width,g.y-g.height,d.x+d.width,d.y-d.height)\n\t\t\t\t\t: edgeHoriz(d.x-d.width,d.y+d.height,g.x-g.width,g.y-g.height,g.x+g.width,g.y-g.height,d.x+d.width,d.y+d.height)\n\t\t\t\t,primary:d.primary\n\t\t\t\t,secondary:d.secondary\n\t\t\t\t,value:d.value\n\t\t\t\t,percent:d.percent\n\t\t\t}\n\t\t});\n\t\tfunction edgeVert(x1,y1,x2,y2,x3,y3,x4,y4){\n\t\t\tif(eMode===\"straight\") return [\"M\",x1,\",\",y1,\"L\",x2,\",\",y2,\"L\",x3,\",\",y3,\"L\",x4,\",\",y4,\"z\"].join(\"\")\n\t\t\tvar mx1=(x1+x2)/2,mx3=(x3+x4)/2;\n\t\t\treturn [\"M\",x1,\",\",y1,\"C\",mx1,\",\",y1,\" \",mx1,\",\",y2,\",\",x2,\",\",y2,\"L\"\n\t\t\t\t\t,x3,\",\",y3,\"C\",mx3,\",\",y3,\" \",mx3,\",\",y4,\",\",x4,\",\",y4,\"z\"].join(\"\");\n\t\t}\n\t\tfunction edgeHoriz(x1,y1,x2,y2,x3,y3,x4,y4){\n\t\t\tif(eMode===\"straight\") return [\"M\",x1,\",\",y1,\"L\",x2,\",\",y2,\"L\",x3,\",\",y3,\"L\",x4,\",\",y4,\"z\"].join(\"\")\n\t\t\tvar my1=(y1+y2)/2,my3=(y3+y4)/2;\n\t\t\treturn [\"M\",x1,\",\",y1,\"C\",x1,\",\",my1,\" \",x2,\",\",my1,\",\",x2,\",\",y2,\"L\"\n\t\t\t\t\t,x3,\",\",y3,\"C\",x3,\",\",my3,\" \",x4,\",\",my3,\",\",x4,\",\",y4,\"z\"].join(\"\");\n\t\t}\n\t}\n\tfunction bpmap(a/*array*/, p/*pad*/, m/*min*/, s/*start*/, e/*end*/){\n\t\tvar r = m/(e-s-2*a.length*p); // cut-off for ratios\n\t\tvar ln =0, lp=0, t=d3.sum(a,function(d){ return d.value;}); // left over count and percent.\n\t\ta.forEach(function(d){ if(d.value < r*t ){ ln+=1; lp+=d.value; }})\n\t\tvar o= t < 1e-5 ? 0:(e-s-2*a.length*p-ln*m)/(t-lp); // scaling factor for percent.\n\t\tvar b=s, ret=[];\n\t\ta.forEach(function(d){ \n\t\t\tvar v =d.value*o; \n\t\t\tret.push({\n\t\t\t\t\ts:b+p+(v<m?.5*(m-v): 0)\n\t\t\t\t,e:b+p+(v<m? .5*(m+v):v)\n\t\t\t\t,p:t < 1e-5? 0:d.value/t\n\t\t\t}); \n\t\t\tb+=2*p+(v<m? m:v); \n\t\t});\n\t\t\n\t\treturn ret;\n\t}\t  \n\t}\t  \n\tbP.update = function(_data){\n\t\tdata = _data;\n\tvar b1 = bP.bars();\n\tvar dur = bP.duration();\n\t\n\tg.selectAll(\".subBars\").data(b1.subBars).transition().duration(dur)\n\t\t.attr(\"transform\", function(d){ return \"translate(\"+d.x+\",\"+d.y+\")\";})\n\t\t\t\t.select(\"rect\")\n\t\t\t\t.attr(\"x\",fx).attr(\"y\",fy).attr(\"width\",fw).attr(\"height\",fh);\n\t\t\t\t\t\t\n\t\t\tg.selectAll(\".edges\").data(b1.edges).transition().duration(dur)\n\t\t\t\t.attr(\"d\",function(d){ return d.path; })\n\t\t.style(\"fill-opacity\",bP.edgeOpacity())\n\t\t.style(\"visibility\", \"visible\")\n\t\t\t\t\t\n\t\t\tg.selectAll(\".mainBars\").data(b1.mainBars).transition().duration(dur)\n\t\t.attr(\"transform\", function(d){ return \"translate(\"+d.x+\",\"+d.y+\")\";})\n\t\t\t\t.select(\"rect\")\n\t\t\t\t.attr(\"x\",fx).attr(\"y\",fy).attr(\"width\",fw).attr(\"height\",fh)\n\t\t// .style(\"fill-opacity\",0)\n\t\t.style(\"visibility\", \"hidden\")\n\t}\n\tbP.mouseover = function(d){\n\t\tvar newbars = bP.bars(d);\n\t\tg.selectAll(\".mainBars\").filter(function(r){ return r.part===d.part && r.key === d.key})\n\t\t.select(\"rect\").style(\"stroke-opacity\", 1);\n\t\t\n\t\tg.selectAll(\".subBars\").data(newbars.subBars)\n\t\t.transition().duration(bP.duration())\n\t\t.attr(\"transform\", function(d){ return \"translate(\"+d.x+\",\"+d.y+\")\";})\n\t\t.select(\"rect\").attr(\"x\",fx).attr(\"y\",fy).attr(\"width\",fw).attr(\"height\",fh);\n\t\t\n\t\tvar e = g.selectAll(\".edges\")\n\t\t.data(newbars.edges);\n\t\t\n\t\te.filter(function(t){ return t[d.part] === d.key;})\n\t\t.transition().duration(bP.duration())\n\t\t.style(\"fill-opacity\",bP.edgeOpacity())\n\t\t.style(\"visibility\", \"visible\")\n\n\t\t.attr(\"d\",function(d){ return d.path});\t\n\t\t\n\t\te.filter(function(t){ return t[d.part] !== d.key;})\n\t\t.transition().duration(bP.duration())\n\t\t// .style(\"fill-opacity\",0)\n\t\t.style(\"visibility\", \"hidden\")\n\t\t.attr(\"d\",function(d){ return d.path});\t\n\t\t\n\t\tg.selectAll(\".mainBars\").data(newbars.mainBars)\n\t\t.transition().duration(bP.duration())\n\t\t.attr(\"transform\", function(d){ return \"translate(\"+d.x+\",\"+d.y+\")\";})\n\t\t.select(\"rect\").attr(\"x\",fx).attr(\"y\",fy).attr(\"width\",fw).attr(\"height\",fh)\n\t}\n\tbP.mouseout = function(d){\n\t\tvar newbars = bP.bars();\n\t\t\t\t\t\n\t\tg.selectAll(\".mainBars\").filter(function(r){ return r.part===d.part && r.key === d.key})\n\t\t.select(\"rect\").style(\"stroke-opacity\", 0);\n\t\t\n\t\tg.selectAll(\".subBars\").data(newbars.subBars)\n\t\t.transition().duration(bP.duration())\n\t\t.attr(\"transform\", function(d){ return \"translate(\"+d.x+\",\"+d.y+\")\";})\n\t\t.select(\"rect\").attr(\"x\",fx).attr(\"y\",fy).attr(\"width\",fw).attr(\"height\",fh);\n\t\t\n\t\tg.selectAll(\".edges\").data(newbars.edges)\n\t\t.transition().duration(bP.duration())\n\t\t.style(\"fill-opacity\",bP.edgeOpacity())\n\t\t.style(\"visibility\", \"visible\")\n\t\t.attr(\"d\",function(d){ return d.path});\t\n\t\t\n\t\tg.selectAll(\".mainBars\").data(newbars.mainBars)\n\t\t.transition().duration(bP.duration())\n\t\t.attr(\"transform\", function(d){ return \"translate(\"+d.x+\",\"+d.y+\")\";})\n\t\t.select(\"rect\").attr(\"x\",fx).attr(\"y\",fy).attr(\"width\",fw).attr(\"height\",fh);\n\t}\n\tfunction fx(d){ return -d.width}\n\tfunction fy(d){ return -d.height}\n\t\tfunction fw(d){ return 2*d.width}\n\t\tfunction fh(d){ return 2*d.height}\n\t\n\treturn bP;\n}\t\n\nexport default viz;\n","import { action, computed, decorate, observable } from 'mobx';\n\n// Default params of some scoring types\nconst DEFAULT_PARAMS = {\n\tattr_matching: {\n\t\tthreshold: 0,\n\t\tdisplayOnlyFrameSet: true,\n\t\tsankeyMaxEdges: null,\n\t\tlimitSankeyEdges: false,\n\t},\n\tlu_wordnet: {\n\t\tthreshold: 0.4,\n\t\tdisplayOnlyFrameSet: false,\n\t\tsankeyMaxEdges: null,\n\t\tlimitSankeyEdges: false,\n\t},\n\tlu_muse: {\n\t\tthreshold: 0.75,\n\t\tdisplayOnlyFrameSet: false,\n\t\tsankeyMaxEdges: 5,\n\t\tlimitSankeyEdges: true,\n\t\tneighborhoodSize: 5,\n\t\tsimilarityThreshold: 0.3,\n\t},\n\tlu_mean_muse: {\n\t\tthreshold: 0.85,\n\t\tdisplayOnlyFrameSet: false,\n\t\tsankeyMaxEdges: 5,\n\t\tlimitSankeyEdges: true,\n\t}\n};\n\nconst FE_SCORING_TYPES = new Set([\n\t\"fe_matching\",\n\t\"muse_fe_matching\",\n])\n\nconst LU_SCORING_TYPES = new Set([\n\t\"lu_wordnet\",\n\t\"synset\",\n\t\"synset_inv\",\n\t\"lu_muse\",\n\t\"lu_mean_muse\",\n])\n\n/**\n * Check if two sets are equal in the sense that they have a matching set of\n * values.\n *\n * @param {Set} a \n * @param {Set} b\n * @returns {Boolean} \n */\nconst areSetsEqual = (a, b) => (\n\t(a.size === b.size) ? \n\t[...a].every( value => b.has(value) ) : false\n);\n\n/**\n * MobX store for alignment data of a specific FrameNet database against\n * Berkeley FrameNet.\n */\nclass AlignmentStore {\n\n\t/**\n\t * Name of the FrameNet database of loaded alignemnt.\n\t */\n\tfndb\n\n\t/**\n\t * Language of this.fndb, aka, L2.\n\t */\n\tlanguage\n\n\t/**\n\t * Dictionary to hold multiple lists of non-zero alignment score between two\n\t * frames, the key for each list is a string representing a scoring technique.\n\t */\n\tedges = {}\n\n\t/**\n\t * String indices of the scoring matrix of shape (M, N) where M is the number\n\t * of english frames e N the number of L2 frames.\n\t */\n\tindices = []\n\n\t/**\n\t * Frame data dictionary with global ids as keys.\n\t */\n\tframes = {}\n\n\t/**\n\t * Frame data dictionary with frame names + language as keys.\n\t */\n\tframesByName = {}\n\n\t/**\n\t * Mapping of LU names to a list of relevant synsets.\n\t */\n\tsynsetsByLU = {}\n\n\t/**\n\t * Synset data dictionary with synset ids as keys.\n\t */\n\tsynsetData = {}\n\n\t/**\n\t * Mapping of english LU names to word vectors ids in L2 space.\n\t */\n\tvectorIdsByLU = []\n\n\t/**\n\t * Dictionary of words with vector ids as keys.\n\t */\n\twordsByVectorId = []\n\n\t/**\n\t * Dictionary used for caching the vectors of frames.\n\t */\n\tframeVectorCache = {}\n\n\t/**\n\t * Object used to store the values of the parameters used in the most recent\n\t * visualization.\n\t */\n\tpreviousParams = {}\n\n\tconstructor(uiState) {\n\t\tthis.uiState = uiState;\n\t}\n\n\t/**\n\t * Returns the edges of a sankey diagram of the stored alignment respecting\n\t * UI params. \n\t * \n\t * @public\n\t * @method\n\t * @returns {Array} edges of the sankey diagram with source, target and size.\n\t */\n\tget sankeyData() {\n\t\tconst state = this.uiState;\n\t\tconst {scoring} = state;\n\t\t\n\t\tif (scoring) {\n\t\t\tconst {params} = scoring;\n\t\t\tconst frameSet = new Set(state.sankeyFrames.map(x => x.id));\n\t\t\tconst filterFn = params.displayOnlyFrameSet\n\t\t\t\t? x => frameSet.has(x[0]) && frameSet.has(x[1]) && x[2] >= params.threshold\n\t\t\t\t: x => (frameSet.has(x[0]) || frameSet.has(x[1])) && x[2] >= params.threshold;\n\t\t\tconst edges = this.getEdges(frameSet);\n\t\t\tconst filtered = edges.filter(filterFn);\n\n\t\t\treturn this.pruneEdges(filtered)\n\t\t\t\t.map(x => [\n\t\t\t\t\tthis.frames[x[0]].name + '.' + this.frames[x[0]].language,\n\t\t\t\t\tthis.frames[x[1]].name + '.' + this.frames[x[1]].language,\n\t\t\t\t\tx[2],\n\t\t\t\t]);\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Returns indices of lexical frames derived from this.indices.\n\t * \n\t * @public\n\t * @method\n\t * @returns {Array[Array[string]]} 2-dimension array of index ids.\n\t */\n\tget lexicalIndices() {\n\t\treturn this.indices.map(i => i.filter(f => this.frames[f].LUs.length > 0));\n\t}\n\n\t/**\n\t * Returns a sorted list of frames present in this alignment indicating if\n\t * they can be selected for visualization. This method sets the \"disabled\"\n\t * attribute for all options based on the selected scoring technique. For\n\t * example: If the selected scoring depends on LUs but the Frame has none, it\n\t * will be disabled in the selection widget.\n\t * \n\t * @public\n\t * @method\n\t * @returns {Array} english + L2 frames in \"Select\" components option format.\n\t */\n\tget frameOptions() {\n\t\tconst {scoring} = this.uiState;\n\t\tconst options = this.indices\n\t\t\t.flat()\n\t\t\t.map(x => ({\n\t\t\t\tid: x,\n\t\t\t\tlabel: this.frames[x].name + '.' + this.frames[x].language,\n\t\t\t\tdisabled: false,\n\t\t\t}))\n\t\t\t.sort((a, b) => (a.label < b.label) ? -1 : (a.label > b.label) ? 1 : 0);\n\n\t\tif (!scoring)\n\t\t\treturn options.map(x => ({ ...x, disabled: true }));\n\t\t\n\t\tif (FE_SCORING_TYPES.has(scoring.type))\n\t\t\treturn options.map(x => ({ ...x, disabled: this.frames[x.id].FEs.length === 0 }))\n\n\t\tif (LU_SCORING_TYPES.has(scoring.type))\n\t\t\treturn options.map(x => ({ ...x, disabled: this.frames[x.id].LUs.length === 0 }))\n\n\t\treturn options;\n\t}\n\n\t/**\n\t * Returns the LU matching graph definition of the selected alignemnt. When\n\t * no alignment is selected, i.e., the UI state doesn't have a pair of\n\t * selected frames, this method should return an empty list for both node and\n\t * link definitions. The same applies with the method has no mapping between\n\t * LUs (e.g. The alignment is score is the similarity of the average LU\n\t * vector of each frame).\n\t * \n\t * @public\n\t * @method\n\t * @returns {Object} Graph definition with a node list and a link list.\n\t */\n\tget graphData() {\n\t\tconst {scoring} = this.uiState;\n\t\t\n\t\tif (!scoring)\n\t\t\treturn { nodes: [], links: [] };\n\n\t\tswitch(scoring.type) {\n\t\t\tcase 'lu_wordnet':\n\t\t\t\treturn this.LUWordNetGraph();\n\t\t\tcase 'synset':\n\t\t\tcase 'synset_inv':\n\t\t\t\treturn this.synsetGraph();\n\t\t\tcase 'lu_muse':\n\t\t\t\treturn this.LUMuseGraph();\n\t\t\tcase 'fe_matching':\n\t\t\t\treturn this.FEMatchingGraph();\n\t\t\tdefault:\n\t\t\t\treturn { nodes: [], links: [] };\n\t\t}\n\t}\n\n\t/**\n\t * Gets the edges of the Sankey diagram for the selected scoring method. This\n\t * function will recomputed edges if necessary, else it will return data from\n\t * this.edges.\n\t * \n\t * @public\n\t * @method\n\t * @param {Set} frameSet set of frames of interest.\n\t * @returns {Array[Array]} edges of the sankey diagram in the format\n\t * \t[source id, target id, score value].\n\t */\n\tgetEdges(frameSet) {\n\t\tconst {scoring} = this.uiState;\n\t\tconst {params} = scoring;\n\t\tconst prevParams = this.previousParams[scoring.id] || {};\n\t\tlet edges;\n\n\t\tif (scoring.type === 'lu_muse' || !this.edges[scoring.id]) {\n\t\t\tlet recompute = false;\n\n\t\t\tfor (let key of ['neighborhoodSize', 'similarityThreshold']) {\n\t\t\t\tif (prevParams[key] !== params[key]) {\n\t\t\t\t\trecompute = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!recompute) {\n\t\t\t\trecompute = !areSetsEqual(prevParams['frameSet'], frameSet);\n\t\t\t}\n\n\t\t\tif (recompute) {\n\t\t\t\tedges = this.computeEdges(frameSet);\n\t\t\t\tthis.edges[scoring.id] = edges;\n\t\t\t} else {\n\t\t\t\tedges = this.edges[scoring.id];\n\t\t\t}\n\t\t} else {\n\t\t\tedges = this.edges[scoring.id];\n\t\t}\n\n\t\tthis.previousParams[scoring.id] = {...params};\n\t\tthis.previousParams[scoring.id]['frameSet'] = frameSet;\n\n\t\treturn edges;\n\t}\n\n\t/**\n\t * Computes Sankey diagram edges of the given frame set. Each frame in this\n\t * set will have its alignment score with all frames in the other language\n\t * computed.\n\t * \n\t * @public\n\t * @method\n\t * @param {Set} frameSet set of frames that edges will be computed.\n\t * @returns {Array[Array]} edges of the sankey diagram in the format\n\t * \t[source id, target id, score value].\n\t */\n\tcomputeEdges(frameSet) {\n\t\tconst edges = [];\n\t\t/**\n\t\t * Indices are filtered to prevent duplicate edges when \"frameSet\" has\n\t\t * english and L2 frames. For example, if \"A\" is an english frame and \"B\"\n\t\t * is a L2 frame, \"A\" would first be scored against all L2 frames\n\t\t * (including \"B\"). Later, \"B\" would be scored against all english frames;\n\t\t * the alignment of the pair (\"A\", \"B\") would end up being calculated\n\t\t * again. Of course, we could always check if the other frame is in the\n\t\t * frame set before calculating the pair score, but filtering the indices\n\t\t * yields the same results with less checks.\n\t\t */\n\t\tconst indices = [\n\t\t\tthis.indices[0].filter(x => !frameSet.has(x)),\n\t\t\tthis.indices[1],\n\t\t];\n\t\n\t\n\t\tfor (let frameId of frameSet) {\n\t\t\tconst frame = this.frames[frameId];\n\t\n\t\t\tif (frame.LUs.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t} \n\t\n\t\t\tif (frame.language === 'en') {\n\t\t\t\tedges.push(\n\t\t\t\t\t...indices[1].map(i => [frame.gid, i, this.LUVectorMatchingScore(frame, this.frames[i])])\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tedges.push(\n\t\t\t\t\t...indices[0].map(i => [i, frame.gid, this.LUVectorMatchingScore(this.frames[i], frame)])\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tthis.frameVectorCache = {};\n\t\treturn edges.filter(x => x[2] > 0);\n\t}\n\n\t/**\n\t * Computes the alignment score between the given frames using multilingual\n\t * space vectors to match LUs.\n\t * \n\t * @public\n\t * @method\n\t * @param {Object} bfnFrame the english frame data object.\n\t * @param {Object} l2Frame the L2 frame data object.\n\t */\n\tLUVectorMatchingScore(bfnFrame, l2Frame) {\n\t\tconst {params} = this.uiState.scoring;\n\n\t\tif (!this.frameVectorCache[bfnFrame.gid]) {\n\t\t\tthis.frameVectorCache[bfnFrame.gid] = \n\t\t\t\tbfnFrame.LUs\n\t\t\t\t\t.map(x => this.vectorIdsByLU[x])\n\t\t\t\t\t.filter(x => x)\n\t\t\t\t\t.flatMap(x => x.slice(0, params.neighborhoodSize))\n\t\t\t\t\t.filter(x => x[0] >= params.similarityThreshold);\n\t\t}\n\n\t\tif (!this.frameVectorCache[l2Frame.gid]) {\n\t\t\tthis.frameVectorCache[l2Frame.gid] = new Set(\n\t\t\t\tl2Frame.LUs\n\t\t\t\t\t.flatMap(x => this.vectorIdsByLU[x])\n\t\t\t\t\t.filter(x => x)\n\t\t\t\t\t.map(x => x[1])\n\t\t\t);\n\t\t}\n\t\n\t\tconst matches = this.frameVectorCache[bfnFrame.gid]\n\t\t\t\t.filter(x => x && this.frameVectorCache[l2Frame.gid].has(x[1]));\n\t\t\n\t\treturn matches.length / bfnFrame.LUs.length;\n\t}\n\n\t/**\n\t * Returns the LU matching graph definition for lu_wordnet scoring, where\n\t * two LUs are matched when both are in the same synset.\n\t * \n\t * @public\n\t * @method\n\t * @returns {Object} Graph definition with a node list and a link list.\n\t */\n\tLUWordNetGraph() {\n\t\tconst nodes = this.getNodes();\n\t\tconst inter = this.getConnectionObjects(nodes, this.synsetsByLU);\n\t\tconst links = inter.links.filter(l => l.target.hasLeftSource);\n\n\t\tnodes.push(...inter.nodes.filter(n => n.hasLeftSource));\n\t\tlinks.filter(l => l.source.type === 'right').forEach(l => {\n\t\t\tlet swap = l.source;\n\t\t\tl.source = l.target;\n\t\t\tl.target = swap;\n\t\t})\n\t\tnodes.forEach(n => n.isReferenceNode = n.type === 'left');\n\t\tlinks\n\t\t\t.filter(l => (l.source.type === 'left' && l.target.isIntersection))\n\t\t\t.forEach(l => {\n\t\t\t\tl.source.isMatchingNode = true;\n\t\t\t});\n\t\tthis.computeDegrees(links);\n\n\t\treturn { nodes, links };\n\t}\n\n\t/**\n\t * Returns the LU matching graph definition for synset/synset_inv scoring,\n\t * where a set of synsets is defined for each frame (based on their LUs) and\n\t * the intersection between two sets is the base of the alignment between two\n\t * frames.\n\t * \n\t * @public\n\t * @method\n\t * @returns {Object} Graph definition with a node list and a link list.\n\t */\n\tsynsetGraph() {\n\t\tconst type = this.uiState.scoring.type;\n\t\tconst nodes = this.getNodes();\n\t\tconst inter = this.getConnectionObjects(nodes, this.synsetsByLU);\n\t\tconst links = inter.links;\n\n\t\tnodes.push(...inter.nodes);\n\t\tconst isReferenceFn = type === 'synset' ? n => n.hasLeftSource : n => n.hasRightSource;\n\t\tnodes.forEach(n => {\n\t\t\tn.isReferenceNode = isReferenceFn(n);\n\t\t\tn.isMatchingNode = n.isIntersection;\n\t\t})\n\t\tthis.computeDegrees(links);\n\n\t\treturn { nodes, links };\n\t}\n\n\t/**\n\t * Returns the LU matching graph definition for lu_muse scoring, where a\n\t * match between two LUs happen when the cosine similarity of their vectors\n\t * is more than a given threshold.\n\t * \n\t * @public\n\t * @method\n\t * @returns {Object} Graph definition with a node list and a link list.\n\t */\n\tLUMuseGraph() {\n\t\tconst nodes = this.getNodes();\n\t\tconst inter = this.getConnectionObjects(nodes, this.vectorIdsByLU, x => this.wordsByVectorId[x]);\n\t\tconst links = inter.links.filter(l => l.target.hasLeftSource);\n\n\t\tnodes.push(...inter.nodes.filter(n => n.hasLeftSource));\n\t\tlinks.filter(l => l.source.type === 'right').forEach(l => {\n\t\t\tlet swap = l.source;\n\t\t\tl.source = l.target;\n\t\t\tl.target = swap;\n\t\t})\n\t\tnodes.forEach(n => n.isReferenceNode = n.type === 'left');\n\t\tlinks\n\t\t\t.filter(l => (l.source.type === 'left' && l.target.isIntersection))\n\t\t\t.forEach(l => l.source.isMatchingNode = true);\n\t\tthis.computeDegrees(links);\n\n\t\treturn { nodes, links };\n\t}\n\n\t/**\n\t * Returns the FE matching graph definition where a match between two FEs\n\t * happens when both have the same name.\n\t * \n\t * @public\n\t * @method\n\t * @returns {Object} Graph definition with a node list and a link list.\n\t */\n\tFEMatchingGraph() {\n\t\tconst nodes = this.getNodes(\"FEs\", x => x.name);\n\t\tconst links = [];\n\n\t\tnodes.forEach(x => x.isReferenceNode = true);\n\t\tconst left = nodes.filter(x => x.type === \"left\");\n\t\tconst right = nodes.filter(x => x.type === \"right\");\n\n\t\tfor (let a of left) {\n\t\t\tfor (let b of right) {\n\t\t\t\tif (a.type !== b.type && a.name === b.name) {\n\t\t\t\t\tlinks.push({ \n\t\t\t\t\t\tsource: a,\n\t\t\t\t\t\ttarget: b, \n\t\t\t\t\t})\n\t\t\t\t\ta.isMatchingNode = true;\n\t\t\t\t\tb.isMatchingNode = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { nodes, links };\n\t}\n\n\t/**\n\t * Creates an object containing basic information of a graph node for\n\t * visualization based on the node name.\n\t * \n\t * @public\n\t * @method\n\t * @param {string} name the name of the node.\n\t * @returns {Object} graph node object.\n\t */\n\tcreateNode = name => ({ name: name, inDegree: 0, outDegree: 0, });\n\n\t/**\n\t * Returns the list of nodes of the selected frames distinguishing the source\n\t * frame of the node between \"left\" and \"right\".\n\t * \n\t * @public\n\t * @method\n\t * @param {string} frameAttr frame attribute that holds nodes base objects.\n\t * @param {Func} nodeNameFn name getter for a graph node.\n\t * @returns {Array} list of LU nodes.\n\t */\n\tgetNodes(frameAttr = \"LUs\", nodeNameFn = x => x) {\n\t\tconst {selectedFrames} = this.uiState;\n\n\t\tif (selectedFrames[0] && selectedFrames[1]) {\n\t\t\treturn this.frames[selectedFrames[0]][frameAttr]\n\t\t\t\t.map(x => ({\n\t\t\t\t\ttype: 'left',\n\t\t\t\t\t...this.createNode(nodeNameFn(x)),\n\t\t\t\t\t...(typeof x === \"object\" ? x : null),\n\t\t\t\t}))\n\t\t\t\t.concat(\n\t\t\t\t\tthis.frames[selectedFrames[1]][frameAttr]\n\t\t\t\t\t.map(x => ({\n\t\t\t\t\t\ttype: 'right',\n\t\t\t\t\t\t...this.createNode(nodeNameFn(x)),\n\t\t\t\t\t\t...(typeof x === \"object\" ? x : null),\n\t\t\t\t\t}))\n\t\t\t\t);\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Generates intermediate node objects for a graph based on the mapping of\n\t * LUs to these nodes. An intermediate node can be, for example, a synset\n\t * node that was used as  \"translator\". The method returns those nodes and\n\t * their links to LU nodes.\n\t * \n\t * @public\n\t * @method\n\t * @param {Array} LUNodes list of LU nodes.\n\t * @param {Object} relationMap mapping of LUs to intermediate node ids.\n\t * @param {function} nodeNameFn function to get the name of a node using id.\n\t * @returns {Object} A object containing the intermediate nodes of the graph\n\t * and their links to LU nodes.\n\t */\n\tgetConnectionObjects(LUNodes, relationMap, nodeNameFn=x=>x) {\n\t\tconst {params} = this.uiState.scoring;\n\n\t\tconst links = LUNodes\n\t\t\t.flatMap(s =>\n\t\t\t\t(relationMap[s.name] || [])\n\t\t\t\t\t.slice(0, params.neighborhoodSize)\n\t\t\t\t\t.filter(t => !Array.isArray(t) || t[0] > params.similarityThreshold)\n\t\t\t\t\t.map(t => ({\n\t\t\t\t\t\tsource: s,\n\t\t\t\t\t\ttarget: Array.isArray(t) ? t[1] : t,\n\t\t\t\t\t\tisDirected: true,\n\t\t\t\t\t}))\n\t\t\t)\n\t\t// Creating node objects for intermediate Nodes\n\t\tconst intermediateMap = {}\n\t\tconst nodes = [...new Set(links.map(l => l.target))]\n\t\t\t\t.map(t => {\n\t\t\t\t\tconst node = {\n\t\t\t\t\t\ttype: 'intermediate',\n\t\t\t\t\t\t...this.createNode(nodeNameFn(t))\n\t\t\t\t\t};\n\t\t\t\t\tintermediateMap[t] = node;\n\t\t\t\t\treturn node;\n\t\t\t\t});\n\t\t// Including references to objects in links\n\t\tlinks.forEach(l => {\n\t\t\tl.target = intermediateMap[l.target];\n\t\t\tl.target[l.source.type === 'left' ? 'hasLeftSource' : 'hasRightSource'] = true;\n\t\t});\n\t\tnodes.forEach(n => n.isIntersection = n.hasLeftSource && n.hasRightSource);\n\n\t\treturn { nodes, links };\n\t}\n\n\t/**\n\t * Computes the degrees of each node in a graph based on its link Array.\n\t * \n\t * @public\n\t * @method\n\t * @param {Array} links link list of a graph.\n\t */\n\tcomputeDegrees(links) {\n\t\tlinks.forEach(l => {\n\t\t\t++l.source.outDegree;\n\t\t\t++l.target.inDegree;\n\t\t});\n\t}\n\n\t/**\n\t * Filters the Sankey diagram edge list based on the UI visualization params.\n\t * The list is returned unchanged when limitation of edges on the Sankey\n\t * diagram is disabled.\n\t * \n\t * @public\n\t * @method\n\t * @param {Array} edges Sankey diagram edges.\n\t * @returns {Array} filtered array of edges.\n\t */\n\tpruneEdges(edges) {\n\t\tconst {params} = this.uiState.scoring;\n\n\t\tif (!params.limitSankeyEdges)\n\t\t\treturn edges;\n\n\t\tedges.sort((a, b) => {\n\t\t\tif (a[0] > b[0]) {\n\t\t\t\treturn -1;\n\t\t\t} else if (a[0] < b[0]) {\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\treturn a[2] > b[2] ? -1 : a[2] < b[2] ? 1 : 0;\n\t\t\t}\n\t\t});\n\n\t\tconst counts = {};\n\n\t\tedges.forEach(x => counts[x[0]] = 0);\n\n\t\treturn edges.filter(x => {\n\t\t\t++counts[x[0]];\n\t\t\treturn counts[x[0]] <= params.sankeyMaxEdges;\n\t\t});\n\t}\n\n\t/**\n\t * Loads a JSON alignment file into the store.\n\t * \n\t * @public\n\t * @method\n\t * @param {Object} data parsed alignment JSON file.\n\t */\n\tload = action(data => {\n\t\tthis.fndb = data.db[1];\n\t\tthis.language = data.lang[1];\n\n\t\tthis.edges = {}\n\t\tdata.alignments.forEach(x => {\n\t\t\tconst edges = [];\n\n\t\t\tif (x.data) {\n\t\t\t\tx.data.forEach((row, i) => {\n\t\t\t\t\trow.forEach((value, j) => {\n\t\t\t\t\t\tif (value > 0)\n\t\t\t\t\t\t\tedges.push([data.indices[0][i], data.indices[1][j], value])\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tthis.edges[x.id] = edges;\n\t\t\t}\n\t\t});\n\n\t\tthis.framesByName = {};\n\t\tfor (let key in data.frames) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(data.frames, key)) {\n\t\t\t\tlet frame = data.frames[key];\n\t\t\t\tthis.framesByName[frame.name + '.' + frame.language] = frame;\n\t\t\t}\n\t\t}\n\n\t\tthis.uiState.scoringOptions =\n\t\t\tdata.alignments.map(x => ({\n\t\t\t\tid: x.id,\n\t\t\t\tdesc: x.desc,\n\t\t\t\ttype: x.type,\n\t\t\t\tparams: DEFAULT_PARAMS[x.type] || {\n\t\t\t\t\tthreshold: 0.1,\n\t\t\t\t\tdisplayOnlyFrameSet: false,\n\t\t\t\t\tsankeyMaxEdges: null,\n\t\t\t\t\tlimitSankeyEdges: false,\n\t\t\t\t}\n\t\t\t}));\n\n\t\tthis.indices = data.indices;\n\t\tthis.frames = data.frames;\n\t\tthis.synsetsByLU = data.resources.lu_to_syn;\n\t\tthis.synsetData = data.resources.syn_data;\n\t\tthis.vectorIdsByLU = data.resources.lu_vec_nn;\n\t\tthis.wordsByVectorId = data.resources.id2word;\n\n\t\t// Resets\n\t\tthis.uiState.setSelectedFramePair(null, null);\n\t\tthis.uiState.scoring = null;\n\t\tthis.uiState.sankeyFrames = [];\n\t})\n\n}\n\ndecorate(AlignmentStore, {\n\tfndb: observable,\n\tlanguage: observable,\n\tindices: observable,\n\tframes: observable,\n\tsynsetsByLU: observable,\n\tsynsetData: observable,\n\tvectorIdsByLU: observable,\n\twordsByVectorId: observable,\n\tlexicalIndices: computed,\n\tsankeyData: computed,\n\tframeOptions: computed,\n});\n\nexport default AlignmentStore;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { format } from 'd3-format';\nimport { select } from 'd3-selection';\nimport { observer } from 'mobx-react';\n// TODO: Should redo this d3 layout\nimport viz from '../layouts/viz.js';\n\nimport './Sankey.css';\n\nimport AlignmentStore from '../stores/AlignmentStore';\nimport { getRenderedTextSize } from '../utils';\n\n// A 3-decimal precision formatter.\nconst scoreFormatter = format(\".3f\");\n\n/**\n * Infinitely yields hex colors strings. Since the amount of hex color strings\n * is finite, the same list is yielded through a circular iteration.\n * \n * @generator\n * @function colors\n * @yields {string} a hex color string\n */\nconst colors = function*() {\n\tconst colors = [\n\t\t\"#3366CC\",\n\t\t\"#DC3912\",\n\t\t\"#FF9900\",\n\t\t\"#109618\",\n\t\t\"#990099\",\n\t\t\"#0099C6\"\n\t];\n\tlet index = 0;\n\n\twhile(true) {\n\t\tyield colors[index];\n\t\tindex = ++index % colors.length;\n\t}\n};\n\n/**\n * \n * A Sankey diagram component that uses D3.js to render the visualization as a\n * svg image. This diagram supports click events on Sankey labels and flow\n * connections.\n *\n */\nconst Sankey = observer(\n\tclass Sankey extends React.Component {\n\n\t\tstatic propTypes = {\n\t\t\t/**\n\t\t\t * A mobx store of frame alignments.\n\t\t\t */\n\t\t\tstore: PropTypes.instanceOf(AlignmentStore),\n\t\t\t/**\n\t\t\t * A callback called a edge of the diagram is clicked.\n\t\t\t * \n\t\t\t * @param {Array} edge A 2-position array containing the source and target of the edge.\n\t\t\t */\n\t\t\tonEdgeClick: PropTypes.func,\n\t\t}\n\n\t\tconstructor(props) {\n\t\t\tsuper(props);\n\n\t\t\t// Reference to svg element\n\t\t\tthis.svg = null;\n\t\t\t// Expanded diagram node\n\t\t\tthis.selection = null;\n\t\t\t// Reference to D3.js layout of the diagram\n\t\t\tthis.bP = null;\n\t\t\t// Reference to diagram root \"g\" svg element\n\t\t\tthis.bPg = null;\n\t\t\t// Container dimensions for next render\n\t\t\tthis.height = null;\n\t\t\tthis.width = null;\n\t\t}\n\n\t\t/**\n\t\t * Manually invokes D3.js rendering function when the component is mounted.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t */\n\t\tcomponentDidMount() {\n\t\t\tthis.renderSankey();\n\t\t}\n\n\t\t/**\n\t\t * Manually invokes D3.js rendering function when the component is updated.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t */\n\t\tcomponentDidUpdate() {\n\t\t\tthis.renderSankey();\n\t\t}\n\n\t\t/**\n\t\t * Handles click on a bar/node/label of the Sankey diagram. The clicked\n\t\t * item will be expanded or shrink depending of the current state of the\n\t\t * digram.\n\t\t * \n\t\t * @public\n\t\t * @model\n\t\t * @param {Object} bar data object of the clicked bar/label.\n\t\t */\n\t\tonNodeClick(bar) {\n\t\t\tif (this.selection && this.selection.key === bar.key) {\n\t\t\t\tthis.shrink(this.selection);\n\t\t\t\tthis.selection = null;\n\t\t\t} else {\n\t\t\t\tif (this.selection) {\n\t\t\t\t\tthis.shrink(this.selection);\n\t\t\t\t}\n\t\t\t\tthis.selection = bar;\n\t\t\t\tthis.expand(bar);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Handles click on a edge/connection of the diagram calling parent\n\t\t * component's handler.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {Object} edge data object of the clicked edge.\n\t\t */\n\t\tonEdgeClick(edge) {\n\t\t\tconst {store, onEdgeClick} = this.props;\n\t\t\t\n\t\t\tonEdgeClick(\n\t\t\t\tstore.framesByName[edge.primary],\n\t\t\t\tstore.framesByName[edge.secondary],\n\t\t\t);\n\t\t}\n\n\t\t/**\n\t\t * Expands one of the diagram nodes. This will hide all diagram connections\n\t\t * except the ones where the parameter node is source or target. The score\n\t\t * of these connections is also displayed.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {Object} node data object of the node being expanded.\n\t\t */\n\t\texpand(node) {\n\t\t\tconst filterFn =\n\t\t\t\tnode.part === \"primary\"\n\t\t\t\t\t? (d => node.key === d.primary)\n\t\t\t\t\t: (d => node.key === d.secondary);\n\n\t\t\tthis.bP.mouseover(node);\n\t\t\tthis.bPg.selectAll(\".score\")\n\t\t\t\t.filter(filterFn)\n\t\t\t\t.text(d => scoreFormatter(d.value))\n\t\t}\n\n\t\t/**\n\t\t * Shrinks all diagram node expansions, showing all edges and hiding score\n\t\t * numbers.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {Object} node data object of the node being shrinked.\n\t\t */\n\t\tshrink(node) {\n\t\t\tthis.bP.mouseout(node);\n\t\t\tthis.bPg.selectAll(\".score\").text(\"\");\n\t\t}\n\n\t\t/**\n\t\t * Gets the width of the text boxes for the diagram frame labels. The size\n\t\t * is always defined based on the length of longest frame name.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @returns {number} width to be used for text boxes\n\t\t */\n\t\tgetLabelSize() {\n\t\t\tconst {store} = this.props;\n\t\t\tlet max = store.sankeyData[0];\n\n\t\t\tfor (let edge of store.sankeyData) {\n\t\t\t\tif (edge[0].length > max.length) {\n\t\t\t\t\tmax = edge[0];\n\t\t\t\t}\n\t\t\t\tif (edge[1].length > max.length) {\n\t\t\t\t\tmax = edge[1];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn getRenderedTextSize(max, 14);\n\t\t}\n\n\t\t/**\n\t\t * Returns a mapping of each left side frame name to a color.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @returns {Object}\n\t\t */\n\t\tgetColorMap() {\n\t\t\tconst {store} = this.props;\n\t\t\tconst colorGen = colors();\n\n\t\t\treturn [...new Set(store.sankeyData.map(x => x[0]))]\n\t\t\t\t.reduce((res, current) => {\n\t\t\t\t\tres[current] = colorGen.next().value;\n\t\t\t\t\treturn res;\n\t\t\t\t}, {});\n\t\t}\n\n\t\t/**\n\t\t * Renders the svg Sankey diagram using D3.js and sets up DOM events for its\n\t\t * elements. This rendering should be controlled by D3.js and not ReactJS.\n\t\t * This guarantees that the diagram will not be part of React's virtual\n\t\t * DOM, thus preventing the framework from interfering with elements\n\t\t * created by the library (D3.js).\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t */\n\t\trenderSankey() {\n\t\t\tconst {store} = this.props;\n\t\t\tconst labelSize = this.getLabelSize();\n\t\t\tconst colorMap = this.getColorMap();\n\t\t\tconst svg = select(this.svg);\n\n\t\t\tsvg.select(\"*\").remove();\n\t\t\tsvg.attr(\"width\", this.width).attr(\"height\", this.height);\n\n\t\t\t// Sankey dimensions\n\t\t\tconst height = Math.max(this.height - 160, 400);\n\t\t\tconst vMargin = Math.max((this.height - height) / 2, 0);\n\t\t\tconst width = Math.min(600, Math.max(this.width - (2 * labelSize) - 160, 200));\n\t\t\tconst hMargin = Math.max((this.width - width) / 2, 0);\n\n\t\t\tconst g = svg.append(\"g\").attr(\"transform\", `translate(${hMargin}, ${vMargin})`);\n\t\t\t\n\t\t\t// Create layout for sankey (AKA bipartite graph)\n\t\t\tthis.bP =\n\t\t\t\tviz.bP()\n\t\t\t\t\t.data(store.sankeyData)\n\t\t\t\t\t.min(12)\n\t\t\t\t\t.pad(1)\n\t\t\t\t\t.height(height)\n\t\t\t\t\t.width(width)\n\t\t\t\t\t.fill(d => colorMap[d.primary])\n\t\t\t\n\t\t\tthis.bPg = g.call(this.bP);\n\n\t\t\t// Setting up events\n\t\t\tthis.bPg.selectAll(\".mainBars\")\n\t\t\t\t.on(\"click\", d => this.onNodeClick(d));\n\t\t\t\n\t\t\tthis.bPg.selectAll(\".edges\")\n\t\t\t\t.on(\"click\", d => this.onEdgeClick(d));\n\n\t\t\t// Appending score text elements\n\t\t\tthis.bPg.selectAll(\".subBars\")\n\t\t\t\t.filter(d => d.part === \"secondary\")\n\t\t\t\t.append(\"text\")\n\t\t\t\t\t.attr(\"class\", \"score\")\n\t\t\t\t\t.attr(\"x\", -58)\n\t\t\t\t\t.attr(\"y\", 6)\n\t\t\t\n\t\t\t// Appending node name text elements\n\t\t\tthis.bPg.selectAll(\".mainBars\")\n\t\t\t\t.append(\"text\")\n\t\t\t\t\t.attr(\"class\",\"label\")\n\t\t\t\t\t.attr(\"x\", d => (d.part === \"primary\" ? -30 : 30))\n\t\t\t\t\t.attr(\"y\", () => 6)\n\t\t\t\t\t.text(d => d.key)\n\t\t\t\t\t.attr(\"text-anchor\", d => (d.part === \"primary\" ? \"end\": \"start\"));\n\t\t}\n\n\t\trender() {\n\t\t\tconst {store, uiState} = this.props;\n\t\t\tconst data = store.sankeyData;\n\t\t\tthis.height = uiState.height;\n\t\t\tthis.width = uiState.width;\n\n\t\t\treturn (\n\t\t\t\t<div className=\"visualization-container\" style={{ minWidth: uiState.width }}>\n\t\t\t\t\t{\n\t\t\t\t\t\tdata.length > 0\n\t\t\t\t\t\t? <svg ref={node => this.svg = node}></svg>\n\t\t\t\t\t\t: <h3 className=\"no-data-text\">No data to show.</h3>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t}\n);\n\nexport default Sankey;","/**\n * Measures the rendered width of arbitrary text given the font size and font\n * face.\n * \n * @param {string} text The text to measure.\n * @param {number} fontSize The font size in pixels.\n * @param {string} fontFace The font face (\"Arial\", \"Helvetica\", etc.).\n * @returns {number} The width of the text.\n */\nfunction getRenderedTextSize(text, fontSize, fontFace = null) {\n\tconst canvas = document.createElement('canvas');\n\tconst context = canvas.getContext('2d');\n\n\tif (fontFace) {\n\t\tcontext.font = `${fontSize}px ${fontFace}`;\n\t} else {\n\t\tcontext.font = context.font.replace(/\\d+px/, `${fontSize}px`);\n\t}\n\n\treturn context.measureText(text).width;\n}\n\nexport {\n\tgetRenderedTextSize,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {format} from 'd3-format';\nimport {select} from 'd3-selection';\n\nimport './MatchingGraph.css';\n\nconst scoreFormatter = format(\".3f\");\n\n/**\n * A component for lexical unit matching graphs.\n */\nclass MatchingGraph extends React.Component {\n\tstatic propTypes = {\n\t\t/**\n\t\t * An object containing the graph definition: an array of nodes under\n\t\t * \"nodes\" and an array of edges under \"links\".s\n\t\t */\n\t\tdata: PropTypes.object,\n\t\t/**\n\t\t * The frame pair of the FEs/LUs used for rendering the graph.\n\t\t */\n\t\tframePair: PropTypes.array,\n\t\t/**\n\t\t * A callback called when mouse is placed over of the nodes.\n\t\t */\n\t\tonMouseOverNode: PropTypes.func,\n\t\t/**\n\t\t * A callback called when mouse is leaves of the nodes.\n\t\t */\n\t\tonMouseOutNode: PropTypes.func,\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.root = null;\n\t\tthis.links = null;\n\t\tthis.nodes = null;\n\t}\n\n\t/**\n\t * Manually invokes D3.js rendering function when the component is mounted.\n\t * \n\t * @public\n\t * @method\n\t */\n\tcomponentDidMount() {\n\t\tthis.renderGraph();\n\t}\n\n\t/**\n\t * Manually invokes D3.js rendering function when the component is updated.\n\t * \n\t * @public\n\t * @method\n\t */\n\tcomponentDidUpdate() {\n\t\tthis.renderGraph();\n\t}\n\n\t/**\n\t * Computes the path string for the path element of the given link data.\n\t * \n\t * @public\n\t * @method\n\t * @param {Object} datum Link data object.\n\t * @returns {string} A string of path commands.\n\t */\n\tcomputePath(datum) {\n\t\tlet direction;\n\t\tlet x1 = datum.source.x;\n\t\tlet y1 = datum.source.y - (datum.source.height/4);\n\t\tlet x2 = datum.target.x;\n\t\tlet y2 = datum.target.y - (datum.target.height/4);\n\n\t\tif (datum.source.type === 'left') {\n\t\t\tx1 += datum.source.width + 12;\n\t\t\tx2 -= datum.target.width/2 + 16;\n\t\t\tdirection = 1;\n\t\t} else if (datum.source.type === 'intermediate') {\n\t\t\tx1 += (datum.source.width/2) + 12;\n\t\t\tx2 -= datum.target.width + 16;\n\t\t\tdirection = 1;\n\t\t} else {\n\t\t\tx1 -= datum.source.width + 12;\n\t\t\tx2 += (datum.target.width/2) + 18;\n\t\t\tdirection = -1;\n\t\t}\n\n\t\tconst offset = 15;\n\t\tconst ccoef = (Math.abs(x1 - x2)-2*offset)/2.25;\n\n\t\treturn `\n\t\t\tM ${x1}                 ${y1}\n\t\t\tL ${x1 + 3*direction}   ${y1}\n\t\t\tC ${x1+ccoef*direction} ${y1}, ${x2-ccoef*direction} ${y2}, ${x2+offset*-direction} ${y2}\n\t\t\tL ${x2}                 ${y2}\n\t\t`;\n\t}\n\n\t/**\n\t * Renders the graph footer that shows the frame names and the alignment\n\t * score of the pair.\n\t * \n\t * @public\n\t * @method\n\t * @param {Object} data Graph data object as returned by getRenderingData.\n\t */\n\tincludeFooter(data) {\n\t\tconst { framePair, height, width, margin } = this.props;\n\t\tconst svg = select(this.root).select(\"svg\");\n\t\tconst matching = data.nodes.filter(d => d.isMatchingNode).length;\n\t\tconst reference = data.nodes.filter(d => d.isReferenceNode && !d.isMatchingNode).length;\n\t\t\n\t\tif (framePair[0] && framePair[1]) {\n\t\t\tconst right = framePair[0];\n\t\t\tconst left = framePair[1];\n\n\t\t\tsvg.select(\"#title\")\n\t\t\t.attr(\"x\", margin)\n\t\t\t.attr(\"y\", height-margin/2)\n\t\t\t.attr(\"class\", \"graph-info\")\n\t\t\t.text(`Frames: ${right.name} (${right.gid}), ${left.name} (${left.gid})`)\n\n\t\t\tsvg.select(\"#stats\")\n\t\t\t\t.attr(\"x\", width-margin)\n\t\t\t\t.attr(\"y\", height-margin/2)\n\t\t\t\t.attr(\"class\", \"graph-info graph-score\")\n\t\t\t\t.html(`\n\t\t\t\t\tAlignment score:\n\t\t\t\t\t<tspan class=\"match\">${matching}</tspan>\n\t\t\t\t\t÷\n\t\t\t\t\t(\n\t\t\t\t\t<tspan class=\"match\">${matching}</tspan>\n\t\t\t\t\t+\n\t\t\t\t\t<tspan class=\"reference\">${reference}</tspan>\n\t\t\t\t\t)\n\t\t\t\t\t= ${scoreFormatter(matching/(matching + reference))}`)\n\t\t}\n\t}\n\n\t/**\n\t * Renders the matching graph using D3.js and sets up DOM events for its\n\t * elements. This rendering should be controlled by D3.js and not ReactJS.\n\t * This guarantees that the diagram will not be part of React's virtual\n\t * DOM, thus preventing the framework from interfering with elements\n\t * created by the library (D3.js).\n\t * \n\t * @public\n\t * @method\n\t */\n\trenderGraph() {\n\t\tconst { data, height, width } = this.props;\n\t\tconst svg = select(this.root).select(\"svg\");\n\n\t\tsvg\n\t\t\t.attr(\"height\", height)\n\t\t\t.attr(\"width\", width);\n\n\t\tthis.nodes = svg.select(\"#nodes\")\n\t\t\t.selectAll(\"text\")\n\t\t\t.data(data.nodes)\n\t\t\t.join(\"text\")\n\t\t\t\t.text(d => d.name)\n\t\t\t\t.each(function(d) {\n\t\t\t\t\tconst bbox = this.getBBox();\n\t\t\t\t\td.width = bbox.width;\n\t\t\t\t\td.height = bbox.height + 2;\n\t\t\t\t})\n\t\t\t\t.attr(\"x\", d => d.x)\n\t\t\t\t.attr(\"y\", d => d.y)\n\t\t\t\t.attr(\"text-anchor\", d => d.type === 'left' ? 'start' : d.type === 'right' ? 'end' : 'middle')\n\t\t\t\t.attr(\"class\", d => {\n\t\t\t\t\tlet name = \"node\";\n\t\t\t\t\tif (d.isMatchingNode) {\n\t\t\t\t\t\tname += \" match\";\n\t\t\t\t\t} else if (d.isReferenceNode) {\n\t\t\t\t\t\tname += \" ref\";\n\t\t\t\t\t}\n\t\t\t\t\treturn name;\n\t\t\t\t})\n\t\t\t\t.attr(\"opacity\", 0.75)\n\t\t\t\t.on(\"mouseover\", d => this.onMouseOverNode(d))\n\t\t\t\t.on(\"mouseout\", d => this.onMouseOutNode(d))\n\n\t\tthis.links = svg.select(\"#links\")\n\t\t\t.selectAll(\"path\")\n\t\t\t.data(data.links)\n\t\t\t.join(\"path\")\n\t\t\t\t.attr(\"d\", this.computePath)\n\t\t\t\t.attr(\"marker-end\", d => d.isDirected ? \"url(#arrowhead)\" : null)\n\t\t\t\t.attr(\"stroke\", \"#555\")\n\t\t\t\t.attr(\"fill-opacity\", 0)\n\t\t\t\t.attr(\"opacity\", 0.1)\n\n\t\tthis.includeFooter(data);\n\t}\n\n\t/**\n\t * Handles mouse over node event highlighting the element and its links. It\n\t * also invokes the handler of the parent component when it is passed via\n\t * props.\n\t * \n\t * @public\n\t * @method\n\t * @param {Object} datum Node data object.\n\t */\n\tonMouseOverNode(datum) {\n\t\tconst linked = new Set();\n\n\t\tthis.links\n\t\t\t.filter(d => d.source === datum || d.target === datum)\n\t\t\t.each(d => {\n\t\t\t\tlinked.add(d.source);\n\t\t\t\tlinked.add(d.target);\n\t\t\t})\n\t\t\t.attr(\"opacity\", 1);\n\n\t\tthis.nodes.filter(d => linked.has(d))\n\t\t\t.style(\"font-weight\", \"bold\")\n\t\t\t.attr(\"opacity\", 1);\n\n\t\tif (this.props.onMouseOverNode)\n\t\t\tthis.props.onMouseOverNode(datum, this.nodes, this.links);\n\t}\n\n\t/**\n\t * Handles mouse out of node event, removing any highlight that was applied\n\t * before and invoking the parent component's handler when it is passed via\n\t * props.\n\t * \n\t * @public\n\t * @method\n\t */\n\tonMouseOutNode() {\n\t\tthis.links.attr(\"opacity\", 0.1);\n\t\tthis.nodes\n\t\t\t.style(\"font-weight\", \"normal\")\n\t\t\t.attr(\"opacity\", 0.75);\n\n\t\tselect(\"#synset-tooltip\").style(\"display\", \"none\");\n\n\t\tif (this.props.onMouseOutNode)\n\t\t\tthis.props.onMouseOutNode();\n\t}\n\n\trender() {\n\t\tconst {data, width} = this.props;\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName=\"visualization-container\"\n\t\t\t\tstyle={{ minWidth: width }}\n\t\t\t\tref={node => this.root = node}\n\t\t\t>\n\t\t\t\t{\n\t\t\t\t\tdata.nodes.length > 0\n\t\t\t\t\t?\n\t\t\t\t\t\t<svg>\n\t\t\t\t\t\t\t<defs>\n\t\t\t\t\t\t\t\t<marker id=\"arrowhead\"\n\t\t\t\t\t\t\t\t\tmarkerWidth=\"10\" markerHeight=\"7\" \n\t\t\t\t\t\t\t\t\trefX=\"0\" refY=\"3.5\" orient=\"auto\">\n\t\t\t\t\t\t\t\t\t<polygon points=\"0 0, 10 3.5, 0 7\" fill=\"#555\" />\n\t\t\t\t\t\t\t\t</marker>\n\t\t\t\t\t\t\t</defs>\n\t\t\t\t\t\t\t<g id=\"nodes\" />\n\t\t\t\t\t\t\t<g id=\"links\" />\n\t\t\t\t\t\t\t<text id=\"title\" />\n\t\t\t\t\t\t\t<text id=\"stats\" />\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t: <h3 className=\"no-data-text\">No data to show.</h3>\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n\n}\n\nexport default MatchingGraph;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {observer} from 'mobx-react';\nimport {scalePoint} from 'd3-scale';\n\nimport MatchingGraph from './MatchingGraph';\nimport AlignmentStore from '../stores/AlignmentStore';\n\n/**\n * A component for lexical unit matching graphs.\n */\nconst LUMatchingGraph = observer(\n\tclass LUMatchingGraph extends React.Component {\n\t\tstatic propTypes = {\n\t\t/**\n\t\t * The frame pair of the LUs used for rendering the graph.\n\t\t */\n\t\tframePair: PropTypes.array,\n\t\t\t/**\n\t\t\t * A mobx store of frame alignments.\n\t\t\t */\n\t\t\tstore: PropTypes.instanceOf(AlignmentStore),\n\t\t\t/**\n\t\t\t * A callback called when mouse is placed over of the nodes.\n\t\t\t */\n\t\t\tonMouseOverNode: PropTypes.func,\n\t\t\t/**\n\t\t\t * A callback called when mouse is leaves of the nodes.\n\t\t\t */\n\t\t\tonMouseOutNode: PropTypes.func,\n\t\t}\n\n\t\t/**\n\t\t * Gets all required data for rendering. Basic node and link data comes\n\t\t * from the store received from props, this method computes the coordinates\n\t\t * where each element should be rendered.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @returns {Object} Graph definition with a node list and a link list.\n\t\t */\n\t\tgetRenderingData() {\n\t\t\tconst { store, uiState } = this.props;\n\t\t\tconst data = store.graphData;\n\n\t\t\tconst height = uiState.height-10;\n\t\t\tconst width = Math.max(uiState.width, 400);\n\t\t\tconst margin = 60;\n\t\t\t\n\t\t\tconst x =\n\t\t\t\tscalePoint()\n\t\t\t\t\t.domain(['left', 'intermediate', 'right'])\n\t\t\t\t\t.range([0, width])\n\t\t\t\t\t.padding(.3)\n\n\t\t\tconst yLU1 = scalePoint()\n\t\t\t\t.domain(data.nodes\n\t\t\t\t\t.filter(d => d.type === 'left')\n\t\t\t\t\t.sort((a, b) => b.outDegree - a.outDegree)\n\t\t\t\t\t.map(d => d.name))\n\t\t\t\t.range([margin*2, height-(margin*2)]);\n\n\t\t\tconst yLU2 = scalePoint()\n\t\t\t\t.domain(data.nodes\n\t\t\t\t\t\t.filter(d => d.type === 'right')\n\t\t\t\t\t\t.sort((a,b) => b.outDegree - a.outDegree)\n\t\t\t\t\t\t.map(d => d.name))\n\t\t\t\t.range([margin*2, height-(margin*2)]);\n\n\t\t\tconst yInter = scalePoint()\n\t\t\t\t.domain(data.nodes\n\t\t\t\t\t.filter(d => d.type === 'intermediate')\n\t\t\t\t\t.sort((a, b) => b.inDegree - a.inDegree)\n\t\t\t\t\t.map(d => d.name))\n\t\t\t\t.range([margin, height-margin]);\n\n\t\t\tconst frm1LUX = x('left');\n\t\t\tconst frm2LUX = x('right');\n\t\t\tconst interX = x('intermediate');\n\n\t\t\tdata.nodes.forEach(d => {\n\t\t\t\tif (d.type === 'left') {\n\t\t\t\t\td.x = frm1LUX;\n\t\t\t\t\td.y = yLU1(d.name);\n\t\t\t\t} else if (d.type === 'right') {\n\t\t\t\t\td.x = frm2LUX;\n\t\t\t\t\td.y = yLU2(d.name);\n\t\t\t\t} else {\n\t\t\t\t\td.x = interX;\n\t\t\t\t\td.y = yInter(d.name);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\treturn {\n\t\t\t\tnodes: data.nodes,\n\t\t\t\tlinks: data.links\n\t\t\t}\n\t\t}\n\n\t\trender() {\n\t\t\tconst {uiState} = this.props;\n\n\t\t\treturn (\n\t\t\t\t<MatchingGraph\n\t\t\t\t\tdata={this.getRenderingData()}\n\t\t\t\t\tframePair={this.props.framePair}\n\t\t\t\t\theight={uiState.height}\n\t\t\t\t\twidth={uiState.width}\n\t\t\t\t\tmargin={60}\n\t\t\t\t\tonMouseOverNode={this.props.onMouseOverNode}\n\t\t\t\t\tonMouseOutNode={this.props.onMouseOutNode}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t}\n);\n\nexport default LUMatchingGraph;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {observer} from 'mobx-react';\nimport {select} from 'd3-selection';\n\nimport './SynsetGraph.css';\n\nimport LUMatchingGraph from './LUMatchingGraph';\nimport AlignmentStore from '../stores/AlignmentStore';\n\n/**\n * A component based on LUMatchingGraph with specific functionalities for\n * Synset matching visualization.\n */\nconst SynsetGraph = observer(\n\tclass SynsetGraph extends React.Component {\n\t\tstatic propTypes = {\n\t\t\t/**\n\t\t\t * A mobx store of frame alignments.\n\t\t\t */\n\t\t\tstore: PropTypes.instanceOf(AlignmentStore),\n\t\t}\n\n\t\tposRegex = /\\.\\w{1,4}$/gi\n\n\t\t/**\n\t\t * Returns the HTML string to be used when rendering a lemma.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {string} lemma the lemma strin\n\t\t * @param {boolean} isHighlighted whether the lemma should be highlighted.\n\t\t * @returns {string} HTML string for the lemma.\n\t\t */\n\t\tlemmaHtml(lemma, isHighlighted) {\n\t\t\tif(isHighlighted)\n\t\t\t\treturn `<span class=\"synset-lemma highlighted\">${lemma}</span>`;\n\t\t\telse\n\t\t\t\treturn `<span class=\"synset-lemma\">${lemma}</span>`;\n\t\t}\n\n\t\t/**\n\t\t * Handles mouse over node event. If the hovered node represents a synset\n\t\t * the synset tooltip will be rendered next to it by this method.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t */\n\t\tonMouseOverNode = (datum, nodes, links) => {\n\t\t\tif (datum.type !== 'intermediate')\n\t\t\t\treturn;\n\n\t\t\tconst {store} = this.props;\n\t\t\tconst synset = store.synsetData[datum.name];\n\t\t\tconst language = store.language;\n\t\t\tconst highlighted = new Set();\n\n\t\t\tlinks.each(d => {\n\t\t\t\thighlighted.add(d.source.name.replace(this.posRegex, ''))\n\t\t\t\thighlighted.add(d.target.name.replace(this.posRegex, ''))\n\t\t\t});\n\n\t\t\t// Updating tooltip box\n\t\t\tselect(\"#synset-name\").html(datum.name);\n\t\t\tselect(\"#synset-desc\").html(synset.definition);\n\t\t\tselect(\"#synset-eng-lemmas\")\n\t\t\t\t.html(synset[\"en\"].map(l => this.lemmaHtml(l, highlighted.has(l))).join(\", \"))\n\t\t\tselect(\"#synset-l2-title\").html(`${language}:`)\n\t\t\tselect(\"#synset-l2-lemmas\")\n\t\t\t\t.html(synset[language].map(l => this.lemmaHtml(l, highlighted.has(l))).join(\", \"))\n\n\t\t\t// Rendering tooltip with the right coordinates\n\t\t\tconst tooltip = select(\"#synset-tooltip\");\n\t\t\ttooltip.style(\"display\", \"block\");\n\t\t\tconst bbox = tooltip.node().getBoundingClientRect();\n\t\t\tlet top = datum.y + datum.height/2;\n\n\t\t\tif (datum.y + bbox.height > window.innerHeight) {\n\t\t\t\ttop = datum.y - datum.height - bbox.height;\n\t\t\t} else {\n\t\t\t\ttop = datum.y + datum.height/2;\n\t\t\t}\n\n\t\t\ttooltip\n\t\t\t\t.style(\"top\", `${top}px`)\n\t\t\t\t.style(\"left\", `${datum.x+12}px`)\n\t\t}\n\n\t\t/**\n\t\t * Handles mouse out of node event. The synset tooltip is hidden.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t */\n\t\tonMouseOutNode() {\n\t\t\tselect(\"#synset-tooltip\").style(\"display\", \"none\");\n\t\t}\n\n\t\trender() {\n\t\t\tconst {store, uiState, framePair} = this.props;\n\n\t\t\treturn (\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"visualization-container\"\n\t\t\t\t\tstyle={{ minWidth: uiState.width }}\n\t\t\t\t\tref={node => this.root = node}\n\t\t\t\t>\n\t\t\t\t\t<div id=\"synset-graph-content\">\n\t\t\t\t\t\t<div id=\"synset-tooltip\">\n\t\t\t\t\t\t\t<div className=\"synset-lang-title large\" id=\"synset-name\"></div>\n\t\t\t\t\t\t\t<div id=\"synset-desc\"></div>\n\t\t\t\t\t\t\t<div className=\"synset-lang-title\">eng:</div>\n\t\t\t\t\t\t\t<div id=\"synset-eng-lemmas\"></div>\n\t\t\t\t\t\t\t<div className=\"synset-lang-title\" id=\"synset-l2-title\" />\n\t\t\t\t\t\t\t<div id=\"synset-l2-lemmas\"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<LUMatchingGraph\n\t\t\t\t\t\t\tstore={store}\n\t\t\t\t\t\t\tuiState={uiState}\n\t\t\t\t\t\t\tframePair={framePair}\n\t\t\t\t\t\t\tonMouseOverNode={this.onMouseOverNode}\n\t\t\t\t\t\t\tonMouseOutNode={this.onMouseOutNode}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n)\n\nexport default SynsetGraph;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {observer} from 'mobx-react';\nimport {scalePoint} from 'd3-scale';\n\nimport MatchingGraph from './MatchingGraph';\nimport AlignmentStore from '../stores/AlignmentStore';\n\n/**\n * A component for frame element matching graphs.\n */\nconst FEMatchingGraph = observer(\n\tclass FEMatchingGraph extends React.Component {\n\t\tstatic propTypes = {\n\t\t\t/**\n\t\t\t * The frame pair of the FEs used for rendering the graph.\n\t\t\t */\n\t\t\tframePair: PropTypes.array,\n\t\t\t/**\n\t\t\t * A mobx store of frame alignments.\n\t\t\t */\n\t\t\tstore: PropTypes.instanceOf(AlignmentStore),\n\t\t\t/**\n\t\t\t * A callback called when mouse is placed over of the nodes.\n\t\t\t */\n\t\t\tonMouseOverNode: PropTypes.func,\n\t\t\t/**\n\t\t\t * A callback called when mouse is leaves of the nodes.\n\t\t\t */\n\t\t\tonMouseOutNode: PropTypes.func,\n\t\t}\n\n\t\t/**\n\t\t * Gets all required data for rendering. Basic node and link data comes\n\t\t * from the store received from props, this method computes the coordinates\n\t\t * where each element should be rendered.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @returns {Object} Graph definition with a node list and a link list.\n\t\t */\n\t\tgetRenderingData() {\n\t\t\tconst {store, uiState} = this.props;\n\t\t\tconst data = store.graphData;\n\n\t\t\tconst height = uiState.height-10;\n\t\t\tconst width = Math.max(uiState.width, 400);\n\t\t\tconst margin = 60;\n\t\t\t\n\t\t\tconst x =\n\t\t\t\tscalePoint()\n\t\t\t\t\t.domain(['left', 'right'])\n\t\t\t\t\t.range([0, width])\n\t\t\t\t\t.padding(.3)\n\n\t\t\tconst yLeft = scalePoint()\n\t\t\t\t.domain(data.nodes\n\t\t\t\t\t.filter(d => d.type === 'left')\n\t\t\t\t\t.sort((a, b) => b.outDegree - a.outDegree)\n\t\t\t\t\t.map(d => d.name))\n\t\t\t\t.range([margin*4, height-(margin*4)]);\n\n\t\t\tconst yRight = scalePoint()\n\t\t\t\t.domain(data.nodes\n\t\t\t\t\t\t.filter(d => d.type === 'right')\n\t\t\t\t\t\t.sort((a,b) => b.outDegree - a.outDegree)\n\t\t\t\t\t\t.map(d => d.name))\n\t\t\t\t.range([margin*4, height-(margin*4)]);\n\n\t\t\tconst xLeft = x('left');\n\t\t\tconst xRight = x('right');\n\n\t\t\tdata.nodes.forEach(d => {\n\t\t\t\tif (d.type === 'left') {\n\t\t\t\t\td.x = xLeft;\n\t\t\t\t\td.y = yLeft(d.name);\n\t\t\t\t} else {\n\t\t\t\t\td.x = xRight;\n\t\t\t\t\td.y = yRight(d.name);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\treturn {\n\t\t\t\tnodes: data.nodes,\n\t\t\t\tlinks: data.links\n\t\t\t}\n\t\t}\n\n\t\trender() {\n\t\t\tconst {uiState} = this.props;\n\n\t\t\treturn (\n\t\t\t\t<MatchingGraph\n\t\t\t\t\tdata={this.getRenderingData()}\n\t\t\t\t\tframePair={this.props.framePair}\n\t\t\t\t\theight={uiState.height}\n\t\t\t\t\twidth={uiState.width}\n\t\t\t\t\tmargin={60}\n\t\t\t\t\tonMouseOverNode={this.props.onMouseOutNode}\n\t\t\t\t\tonMouseOutNode={this.props.onMouseOutNode}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t}\n);\n\nexport default FEMatchingGraph;","import { action, computed, \tdecorate, observable } from \"mobx\"\n\n/**\n * MobX store for global UI state.\n */\nclass UiState {\n\n\t/**\n\t * If the application sidebar is open.\n\t */\n\tisSidebarOpen = true\n\n\t/**\n\t * If the selected alignment (this.selectedFrames) visualization must be\n\t * visible.\n\t */\n\tisAlignmentDetailVisible = false\n\n\t/**\n\t * Selected alignment scoring method.\n\t */\n\tscoring = null\n\n\t/**\n\t * Existing alignment scoring options.\n\t */\n\tscoringOptions = []\n\n\t/**\n\t * Selected frames for Sankey diagram.\n\t */\n\tsankeyFrames = []\n\n\t/**\n\t * Selected frame pair for alignment detailed visualization.\n\t */\n\tselectedFrames = [null, null]\n\n\theight = null\n\n\twidth = null\n\n\t/**\n\t * Gets available scoring options.\n\t * \n\t * @public\n\t * @method\n\t * @returns {Array} list of scoring options.\n\t */\n\tget scoringSelectOptions() {\n\t\treturn this.scoringOptions.map(x => ({ value: x.id, label: x.desc }));\n\t}\n\n\t/**\n\t * Sets the active scoring method of the visualizer.\n\t * \n\t * @public\n\t * @method\n\t * @param {string} id scoring option id.\n\t */\n\tsetScoring(id) {\n\t\tthis.scoring = this.scoringOptions.find(x => x.id === id);\n\t}\n\n\t/**\n\t * Sets the selected frame pair.\n\t * \n\t * @public\n\t * @method\n\t * @param {string} source source frame id/\n\t * @param {string} target target frame id.\n\t */\n\tsetSelectedFramePair = action((source, target) => {\n\t\tthis.selectedFrames[0] = source;\n\t\tthis.selectedFrames[1] = target;\n\t})\n\n}\n\ndecorate(UiState, {\n\tisSidebarOpen: observable,\n\tisAlignmentDetailVisible: observable,\n\tscoring: observable,\n\tscoringOptions: observable,\n\tsankeyFrames: observable,\n\tselectedFrames: observable,\n\theight: observable,\n\twidth: observable,\n\tscoringSelectOptions: computed,\n});\n\nexport default UiState;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {observer} from 'mobx-react';\nimport {FaArrowLeft} from 'react-icons/fa';\n\nimport './ChartPanel.css';\n\nimport Sankey from './Sankey';\nimport SynsetGraph from './SynsetGraph';\nimport LUMatchingGraph from './LUMatchingGraph';\nimport FEMatchingGraph from './FEMatchingGraph';\nimport AlignmentStore from '../stores/AlignmentStore';\nimport UiState from '../stores/UiState';\n\n/**\n * A component for the primary viewport of the application. It is responsible\n * for controlling which visualization will be rendered based on the UI state.\n */\nconst ChartPanel = observer(\n\tclass ChartPanel extends React.Component {\n\t\tstatic propTypes = {\n\t\t\t/**\n\t\t\t * A mobx store of frame alignments.\n\t\t\t */\n\t\t\tstore: PropTypes.instanceOf(AlignmentStore),\n\t\t\t/**\n\t\t\t * A mobx store for the application's UI state.\n\t\t\t */\n\t\t\tuiState: PropTypes.instanceOf(UiState),\n\t\t}\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.selectableTypes = [\n\t\t\t\t\"lu_wordnet\",\n\t\t\t\t\"synset\",\n\t\t\t\t\"synset_inv\",\n\t\t\t\t\"lu_muse\",\n\t\t\t\t\"fe_matching\",\n\t\t\t]\n\t\t}\n\n\t\t/**\n\t\t * Handles click on \"Back\" button/arrow.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t */\n\t\tonBackClick() {\n\t\t\tthis.props.uiState.isAlignmentDetailVisible = false;\n\t\t}\n\n\t\t/**\n\t\t * Handles click on a edge/link of the Sankey diagram.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {Object} source edge's source frame object.\n\t\t * @param {Object} target edge's target frame object.\n\t\t */\n\t\tonEdgeClick(source, target) {\n\t\t\tconst {uiState} = this.props;\n\t\t\t\n\t\t\tif (this.selectableTypes.indexOf(uiState.scoring.type) > -1) {\n\t\t\t\tuiState.isAlignmentDetailVisible = true;\n\t\t\t\tuiState.setSelectedFramePair(source.gid, target.gid);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Renders the appropriate detail/matching graph for the selected frame\n\t\t * pair and scoring technique.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @returns {JSX}\n\t\t */\n\t\trenderMatchingGraph() {\n\t\t\tconst {store, uiState} = this.props;\n\n\t\t\tif (uiState.scoring) {\n\t\t\t\tconst framePair = uiState.selectedFrames.map(x => store.frames[x]);\n\n\t\t\t\tswitch(uiState.scoring.type) {\n\t\t\t\t\tcase 'lu_muse':\n\t\t\t\t\t\treturn <LUMatchingGraph store={store} uiState={uiState} framePair={framePair} />;\n\t\t\t\t\tcase 'fe_matching':\n\t\t\t\t\t\treturn <FEMatchingGraph store={store} uiState={uiState} framePair={framePair} />;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn <SynsetGraph store={store} uiState={uiState} framePair={framePair} />;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\trender() {\n\t\t\tconst {store, uiState} = this.props;\n\t\t\tlet className = \"\";\n\n\t\t\t// Determining the tranformation that must be done to show the correct chart.\n\t\t\tclassName += uiState.isAlignmentDetailVisible ? \"shift\" : \"no-shift\";\n\t\t\n\t\t\treturn (\n\t\t\t\t<div\n\t\t\t\t\tid=\"chart-panel-container\"\n\t\t\t\t\tclassName={className}\n\t\t\t\t>\n\t\t\t\t\t{\n\t\t\t\t\t\tuiState.isAlignmentDetailVisible &&\n\t\t\t\t\t\t<div id=\"back-button-container\" onClick={() => this.onBackClick()} >\n\t\t\t\t\t\t\t<FaArrowLeft size=\"1.75em\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\t<Sankey\n\t\t\t\t\t\tstore={store}\n\t\t\t\t\t\tuiState={uiState}\n\t\t\t\t\t\tonEdgeClick={(s, t) => this.onEdgeClick(s, t)}\n\t\t\t\t\t/>\n\t\t\t\t\t{this.renderMatchingGraph()}\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t}\n)\n\nexport default ChartPanel;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './FormLabel.css';\n\n/**\n * \n * A component for styled form labels.\n * \n */\nexport default class FormLabel extends React.Component {\n\tstatic propTypes = {\n\t\t/**\n\t\t * The label string.\n\t\t */\n\t\ttext: PropTypes.string,\n\t}\n\n\trender() {\n\t\tconst {children, style} = this.props;\n\n\t\treturn (\n\t\t\t<div className=\"form-label\" style={style}>\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t);\n\t}\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './CheckBox.css';\n\nimport FormLabel from './FormLabel';\n\n/**\n * \n * A checkbox component with label and state change event support.\n * \n */\nexport default class CheckBox extends React.Component {\n\tstatic propTypes = {\n\t\t/**\n\t\t * The checkbox current state (checked or not).\n\t\t */\n\t\tchecked: PropTypes.bool,\n\t\t/**\n\t\t * The checkbox label string.\n\t\t */\n\t\tlabel: PropTypes.string,\n\t\t/**\n\t\t * A callback called when the checkbox state changes.\n\t\t * \n\t\t * @param {boolean} checked the new \"checked\" state.\n\t\t */\n\t\tonChange: PropTypes.func,\n\t}\n\n\trender() {\n\t\tconst { checked, label, onChange } = this.props;\n\n\t\treturn (\n\t\t\t<div className=\"checkbox-wrapper\">\n\t\t\t\t<input type=\"checkbox\" checked={checked || false} onChange={e => onChange(e.target.checked)} />\n\t\t\t\t<FormLabel style={{ marginLeft: 6 }}>{label}</FormLabel>\n\t\t\t</div>\n\t\t);\n\t}\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './NumericInput.css';\nimport FormLabel from './FormLabel';\n\n/**\n * \n * A numeric input field component.\n * \n */\nexport default class NumericInput extends React.Component {\n\tstatic propTypes = {\n\t\t/**\n\t\t * Optional label for this field.\n\t\t */\n\t\tlabel: PropTypes.string,\n\t\t/**\n\t\t * The minimum value for the input element. \n\t\t */\n\t\tmin: PropTypes.number,\n\t\t/**\n\t\t * The maximum value for the input element. \n\t\t */\n\t\tmax: PropTypes.number,\n\t\t/**\n\t\t * The step of the input field. Use 1 for integer only.\n\t\t */\n\t\tstep: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\t\t/**\n\t\t * Placeholder string of the input field.\n\t\t */\n\t\tplaceholder: PropTypes.string,\n\t\t/**\n\t\t * The numeric input field value.\n\t\t */\n\t\tvalue: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\t\t/**\n\t\t * Whether the input field is disabled or not.\n\t\t */\n\t\tdisabled: PropTypes.bool,\n\t\t/**\n\t\t * A callback called when the input field value changes.\n\t\t * \n\t\t * @param {number} value the new value of the input field.\n\t\t */\n\t\tonChange: PropTypes.func,\n\t}\n\n\t/**\n\t * Renders the input label if it was passed via props.\n\t * \n\t * @public\n\t * @method\n\t * @returns {JSX} \n\t */\n\trenderLabel() {\n\t\tconst {label} = this.props;\n\n\t\tif (label) {\n\t\t\treturn <FormLabel>{label}</FormLabel>;\n\t\t}\n\t}\n\n\trender() {\n\t\tconst {min, max, step, placeholder, value, disabled, onChange} = this.props;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{this.renderLabel()}\n\t\t\t\t<div className=\"numeric-input-wrapper\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tmin={min}\n\t\t\t\t\t\tmax={max}\n\t\t\t\t\t\tstep={step}\n\t\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\t\tvalue={value || ''}\n\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\tonChange={e => onChange(Number(e.target.value))}\n\t\t\t\t\t/>\n\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './CheckBoxEnabledInput.css';\n\nimport CheckBox from './CheckBox';\nimport NumericInput from './NumericInput';\n\n/**\n * \n * A component for a numeric input field that can be enabled or disabled\n * depending ina checkbox.\n * \n */\nexport default class CheckBoxEnabledInput extends React.Component {\n\tstatic propTypes = {\n\t\t/**\n\t\t * The checkbox current state (checked or not).\n\t\t */\n\t\tchecked: PropTypes.bool,\n\t\t/**\n\t\t * The numeric input field value.\n\t\t */\n\t\tvalue: PropTypes.number,\n\t\t/**\n\t\t * The checkbox label string.\n\t\t */\n\t\tlabel: PropTypes.string,\n\t\t/**\n\t\t * The input field placeholder string.\n\t\t */\n\t\tplaceholder: PropTypes.string,\n\t\t/**\n\t\t * The minimum value for the input element. \n\t\t */\n\t\tmin: PropTypes.number,\n\t\t/**\n\t\t * A callback called when the checkbox state changes.\n\t\t * \n\t\t * @param {boolean} checked the new \"checked\" state.\n\t\t */\n\t\tonCheckedChange: PropTypes.func,\n\t\t/**\n\t\t * A callback called when the input field value changes.\n\t\t * \n\t\t * @param {number} value the new value of the input field.\n\t\t */\n\t\tonValueChange: PropTypes.func,\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tchecked,\n\t\t\tvalue,\n\t\t\tlabel,\n\t\t\tplaceholder,\n\t\t\tmin,\n\t\t\tonCheckedChange,\n\t\t\tonValueChange,\n\t\t} = this.props;\n\t\t\t\n\t\treturn (\n\t\t\t<div className=\"checkbox-enable-input-wrapper\">\n\t\t\t\t<CheckBox\n\t\t\t\t\tchecked={checked}\n\t\t\t\t\tonChange={onCheckedChange}\n\t\t\t\t\tlabel={label}\n\t\t\t\t/>\n\t\t\t\t<div className=\"checkbox-enabled-input-input-wrapper\">\n\t\t\t\t\t<NumericInput\n\t\t\t\t\t\tmin={min}\n\t\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tdisabled={!checked}\n\t\t\t\t\t\tonChange={onValueChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './JsonFileInput.css';\n\n/**\n * \n * A file input component used to load local json files.\n * \n */\nclass JsonFileInput extends React.Component {\n\n\tstatic propTypes = {\n\t\t/**\n\t\t * A callback called when a valid json file is read and parsed.\n\t\t * \n\t\t * @param {Object} data the parsed json file.\n\t\t */\n\t\tonFileChange: PropTypes.func,\n\t}\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\terror: false,\n\t\t}\n\t}\n\n\t/**\n\t * Parses the file of the input field and sends its contents to the parent\n\t * component. When parsing fails, this method will be update this component\n\t * state.\n\t * \n\t * @todo Move parsing to a service worker.\n\t * @public\n\t * @param {Event} event the file change event.\n\t */\n\tonFileChange = event => {\n\t\tconst file = event.target.files[0];\n\n\t\tif (file) {\n\t\t\tconst reader = new FileReader();\n\n\t\t\treader.addEventListener('load', e => {\n\t\t\t\tlet error = false;\n\t\t\t\ttry {\n\t\t\t\t\tconst data = JSON.parse(e.target.result);\n\t\t\t\t\tthis.props.onFileChange(data);\n\t\t\t\t} catch (exception) {\n\t\t\t\t\terror = true;\n\t\t\t\t}\n\t\t\t\tthis.setState({ error });\n\t\t\t});\n\n\t\t\treader.readAsBinaryString(file);\n\t\t}\n\t}\n\n\t/**\n\t * Renders an error message.\n\t * \n\t * @public\n\t * @method\n\t * @returns {JSX}\n\t */\n\trenderError() {\n\t\tconst {error} = this.state;\n\t\treturn error ? <p className=\"upload-error\">Error reading input file.</p> : null;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<input type=\"file\" onChange={this.onFileChange} />\n\t\t\t\t{this.renderError()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default JsonFileInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\n\nimport './Slider.css';\n\nimport FormLabel from './FormLabel';\n\n/**\n * \n * A slider component that also allows textual input in [0,1] interval.\n * \n */\nconst Slider = observer(\n\tclass Slider extends React.Component {\n\t\tstatic propTypes = {\n\t\t\t/**\n\t\t\t * The current value of the slider.\n\t\t\t */\n\t\t\tvalue: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\t\t\t/**\n\t\t\t * A callback called when the slider value changes.\n\t\t\t * \n\t\t\t * @param {string} value the new value.\n\t\t\t */\n\t\t\tonChange: PropTypes.func,\n\t\t}\n\n\t\trender(){\n\t\t\tconst {value, onChange, label} = this.props;\n\n\t\t\treturn (\n\t\t\t\t<div className=\"slider-container\">\n\t\t\t\t\t<FormLabel>{label}</FormLabel>\n\t\t\t\t\t<div className=\"slider-input-container\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"range\"\n\t\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\t\tmax={1}\n\t\t\t\t\t\t\tstep={0.001}\n\t\t\t\t\t\t\tvalue={value || \"\"}\n\t\t\t\t\t\t\tonChange={e => onChange(e.target.value)}\n\t\t\t\t\t\t\tclassName=\"slider\" />\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\t\tmax={1}\n\t\t\t\t\t\t\tstep=\"any\"\n\t\t\t\t\t\t\tvalue={value || \"\"}\n\t\t\t\t\t\t\tonChange={e => onChange(e.target.value)}\n\t\t\t\t\t\t\tclassName=\"slider-text\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n);\n\nexport default Slider;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Select from 'react-select';\nimport MultiSelect from \"@kenshooui/react-multi-select\";\nimport { FaBars } from 'react-icons/fa';\nimport { observer } from 'mobx-react';\n\nimport './Sidebar.css';\n\nimport CheckBox from './CheckBox';\nimport CheckBoxEnabledInput from './CheckBoxEnabledInput';\nimport FormLabel from './FormLabel';\nimport JsonFileInput from './JsonFileInput';\nimport NumericInput from './NumericInput';\nimport Slider from './Slider';\n\nimport AlignmentStore from '../stores/AlignmentStore';\nimport UiState from '../stores/UiState';\n\n/**\n * \n * A Sidebar component for the alignment visualization tool. This sidebar\n * renders the components necessary to input alignment json files and change\n * visualization parameters.\n * \n */\nconst Sidebar = observer(\n\tclass Sidebar extends React.Component {\n\t\tstatic propTypes = {\n\t\t\t/**\n\t\t\t * A mobx store of frame alignments.\n\t\t\t */\n\t\t\tstore: PropTypes.instanceOf(AlignmentStore),\n\t\t\t/**\n\t\t\t * A mobx store for the application's UI state.\n\t\t\t */\n\t\t\tuiState: PropTypes.instanceOf(UiState),\n\t\t}\n\n\t\t/**\n\t\t * Handles an alignment file. All parsed data is loaded to the\n\t\t * AlignmentStore instance.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {Object} data parsed data from an alignment file.\n\t\t */\n\t\tonFileChange = data => this.props.store.load(data)\n\n\t\t/**\n\t\t * Handles the selection of a scoring option.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {Object} option the selected scoring option.\n\t\t */\n\t\tonScoringChange = option => this.props.uiState.setScoring(option.value)\n\n\t\t/**\n\t\t * Handles changes in frame selection for the visualization.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {Array} selected list of selected frames.\n\t\t */\n\t\tonFrameSelectionChange = selected => this.props.uiState.sankeyFrames = selected\n\n\t\t/**\n\t\t * Updates a property in the params object of the current scoring of the\n\t\t * UiState instance.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {string} param the parameter propery name\n\t\t * @param {*} value the new value for the parameter.\n\t\t */\n\t\tupdateParam = (param, value) => {\n\t\t\tconst {uiState} = this.props;\n\t\t\tif (uiState.scoring) {\n\t\t\t\tuiState.scoring.params[param] = value;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Handles change in visualization score threshold.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {number} value the new threshold value.\n\t\t */\n\t\tonThresholdChange = value => this.updateParam(\"threshold\", value)\n\n\t\t/**\n\t\t * Handles change in checkbox \"Restrict number of connections of each frame\".\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {boolean} checked whether the checkbox is checked. \n\t\t */\n\t\tonLimitSankeyEdgesChange = checked => this.updateParam(\"limitSankeyEdges\", checked)\n\n\t\t/**\n\t\t * Handles change in maximum number of edges displayed in the Sankey diagram.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {number} value an integer edge limit for each frame.\n\t\t */\n\t\tonSankeyEdgesMaxChange = value => this.updateParam(\"sankeyMaxEdges\", value)\n\n\t\t/**\n\t\t * Handles change on checkbox \"Show ONLY selected frames\".\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {boolean} checked whether the checkbox is checked. \n\t\t */\n\t\tonDisplayOnlyFrameSetChange = checked => this.updateParam(\"displayOnlyFrameSet\", checked)\n\n\t\t/**\n\t\t * Handles change in vector neighborhood size parameter.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {number} value an integer neighborhood size.\n\t\t */\n\t\tonNeighborhoodSizeChange = value => this.updateParam(\"neighborhoodSize\", value)\n\n\t\t/**\n\t\t * Handles change in cosine similarity threshold.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {number} value the new cosine similarity threshold value.\n\t\t */\n\t\tonSimilarityThresholdChange = value => this.updateParam(\"similarityThreshold\", value)\n\n\t\t/**\n\t\t * Renders parameters that are exclusive for scoring matching LUs through\n\t\t * vectors.\n\t\t * \n\t\t * @public \n\t\t * @method\n\t\t * @returns {JSX} \n\t\t */\n\t\trenderVectorFields() {\n\t\t\tconst {uiState} = this.props;\n\n\t\t\tif (uiState.scoring && uiState.scoring.type === 'lu_muse') {\n\t\t\t\tconst {params} = uiState.scoring;\n\n\t\t\t\treturn (\n\t\t\t\t\t<div className=\"sidebar-row\">\n\t\t\t\t\t\t<NumericInput\n\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\tstep={1}\n\t\t\t\t\t\t\tvalue={params.neighborhoodSize}\n\t\t\t\t\t\t\tonChange={this.onNeighborhoodSizeChange}\n\t\t\t\t\t\t\tlabel=\"Vector neighborhood size\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Slider\n\t\t\t\t\t\t\tlabel=\"Cosine similarity threshold\"\n\t\t\t\t\t\t\tvalue={params.similarityThreshold}\n\t\t\t\t\t\t\tonChange={this.onSimilarityThresholdChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\t\n\t\trender() {\n\t\t\tconst {store, uiState} = this.props;\n\t\t\tconst sidebarWidth = { width: uiState.isSidebarOpen ? '500px' : '60px' };\n\t\t\tconst contentDisplay = { display: uiState.isSidebarOpen ? 'block' : 'none' };\n\t\t\tconst params = uiState.scoring ? uiState.scoring.params : {};\n\t\t\n\t\t\treturn (\n\t\t\t\t<div className=\"sidebar-container\" style={sidebarWidth} >\n\t\t\t\t\t<div className=\"sidebar-icon-container\">\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tonClick={() => uiState.isSidebarOpen = !uiState.isSidebarOpen}\n\t\t\t\t\t\t\tclassName=\"siderbar-icon-click-wrapper\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<FaBars size=\"1.75em\" color=\"#3F51B5\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style={contentDisplay} >\n\t\t\t\t\t\t<FormLabel style={{ marginTop: 0 }}>Alignment file</FormLabel>\n\t\t\t\t\t\t<JsonFileInput onFileChange={this.onFileChange} />\n\t\t\t\t\t\t<div className=\"sidebar-row\">\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<FormLabel>Scoring technique</FormLabel>\n\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\toptions={uiState.scoringSelectOptions}\n\t\t\t\t\t\t\t\t\tonChange={this.onScoringChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<Slider\n\t\t\t\t\t\t\t\tvalue={params.threshold}\n\t\t\t\t\t\t\t\tonChange={this.onThresholdChange}\n\t\t\t\t\t\t\t\tlabel=\"Score threshold\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{this.renderVectorFields()}\n\t\t\t\t\t\t<div className=\"sidebar-row\">\n\t\t\t\t\t\t\t<CheckBoxEnabledInput\n\t\t\t\t\t\t\t\tchecked={params.limitSankeyEdges}\n\t\t\t\t\t\t\t\tvalue={params.sankeyMaxEdges}\n\t\t\t\t\t\t\t\tonCheckedChange={this.onLimitSankeyEdgesChange}\n\t\t\t\t\t\t\t\tonValueChange={this.onSankeyEdgesMaxChange}\n\t\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\t\tlabel=\"Restrict number of connections of each frame:\"\n\t\t\t\t\t\t\t\tplaceholder=\"Max # of edges for frame\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<CheckBox\n\t\t\t\t\t\t\t\tchecked={params.displayOnlyFrameSet}\n\t\t\t\t\t\t\t\tonChange={this.onDisplayOnlyFrameSetChange}\n\t\t\t\t\t\t\t\tlabel=\"Show ONLY selected frames\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<FormLabel>Frame selection</FormLabel>\n\t\t\t\t\t\t<MultiSelect\n\t\t\t\t\t\t\titems={store.frameOptions}\t\n\t\t\t\t\t\t\tselectedItems={uiState.sankeyFrames}\n\t\t\t\t\t\t\tonChange={this.onFrameSelectionChange}\n\t\t\t\t\t\t\tresponsiveHeight=\"350px\"\n\t\t\t\t\t\t\titemHeight={30}\n\t\t\t\t\t\t\twrapperClassName=\"multi-select-wrapper\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n);\n\nexport default Sidebar;","import React from 'react';\nimport ReactResizeDetector from 'react-resize-detector';\n\nimport \"@kenshooui/react-multi-select/dist/style.css\";\nimport './App.css';\n\nimport ChartPanel from './components/ChartPanel';\nimport Sidebar from './components/Sidebar';\nimport AlignmentStore from './stores/AlignmentStore';\nimport UiState from './stores/UiState';\n\nconst uiState = new UiState();\nconst store = new AlignmentStore(uiState);\n\nfunction onResize (width, height) {\n\tuiState.width = width;\n\tuiState.height = height;\n}\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Sidebar store={store} uiState={uiState} />\n\t\t\t<div className=\"app-body\">\n\t\t\t\t<ChartPanel store={store} uiState={uiState} />\n\t\t\t\t<ReactResizeDetector handleWidth handleHeight onResize={onResize} />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}