{"version":3,"sources":["layouts/viz.js","stores/AlignmentStore.js","components/Sankey.js","utils/index.js","components/MatchingGraph.js","components/LUMatchingGraph.js","components/SynsetGraph.js","components/FEMatchingGraph.js","stores/UiState.js","components/ChartPanel.js","components/CheckBox.js","components/FormLabel.js","components/NumericInput.js","components/CheckBoxEnabledInput.js","components/JsonFileInput.js","components/Slider.js","components/Sidebar.js","App.js","serviceWorker.js","index.js","workers/parser.js"],"names":["viz","version","keyPrimary","keySecondary","value","width","height","orient","barSize","min","pad","data","fill","g","edgeOpacity","duration","sortPrimary","sortSecondary","edgeMode","bP","_","each","d3","this","bars","s","selectAll","subBars","enter","append","attr","d","x","y","fx","fy","fw","fh","style","e","edges","path","mainBars","arguments","length","mb","primary","secondary","key","_or","calculateMainBars","calculateSubBars","m","forEach","floorMainBars","concat","map","index","eMode","get","edgeVert","edgeHoriz","percent","x1","y1","x2","y2","x3","y3","x4","y4","join","mx1","mx3","my1","my3","calculateEdges","isSelKey","part","v","ps","sortKeys","rollup","entries","bpmap","bsize","i","push","p","values","t","a","r","ln","lp","o","b","ret","update","_data","b1","dur","transition","select","mouseover","newbars","filter","mouseout","DEFAULT_PARAMS","attr_matching","threshold","displayOnlyFrameSet","sankeyMaxEdges","limitSankeyEdges","lu_wordnet","lu_muse","neighborhoodSize","similarityThreshold","lu_mean_muse","lu_bert","FE_SCORING_TYPES","Set","LU_SCORING_TYPES","oneMoment","Promise","resolve","setTimeout","loadEdges","iter","then","performance","now","ai","alignments","scores","edgeArray","j","indices","id","areSetsEqual","size","every","has","AlignmentStore","uiState","frames","framesByName","synsetsByLU","synsetData","museVectorIdsByLU","museWordsByVectorId","bertVectorIdsByLU","bertWordsByVectorId","frameVectorCache","previousParams","isLoading","asyncSankeyData","asyncComputed","state","scoring","sankeyFrames","params","frameSet","filterFn","getEdges","filtered","pruned","pruneEdges","name","language","createNode","inDegree","outDegree","load","flow","fndb","db","lang","Object","prototype","hasOwnProperty","call","frame","scoringOptions","desc","type","resources","lu_to_syn","syn_data","lu_vec_nn_muse","id2word_muse","lu_vec_nn_bert","id2word_bert","setSelectedFramePair","prevParams","recompute","computeEdges","frameId","LUs","gid","LUVectorMatchingScore","bfnFrame","l2Frame","flatMap","slice","nodes","getNodes","inter","getConnectionObjects","links","l","target","hasLeftSource","n","source","swap","isReferenceNode","isIntersection","isMatchingNode","computeDegrees","isReferenceFn","hasRightSource","console","log","left","right","neighborhood","Array","isArray","replace","indexOf","frameAttr","nodeNameFn","selectedFrames","LUNodes","relationMap","isDirected","intermediateMap","node","sort","counts","busy","f","options","flat","label","disabled","FEs","LUWordNetGraph","synsetGraph","LUMuseGraph","LUBertGraph","FEMatchingGraph","decorate","observable","lexicalIndices","computed","sankeyData","isComputingSankey","frameOptions","scoreFormatter","format","colors","Sankey","observer","props","svg","selection","bPg","renderSankey","bar","shrink","expand","edge","store","onEdgeClick","text","max","fontSize","fontFace","canvas","document","createElement","context","getContext","font","measureText","getRenderedTextSize","colorGen","reduce","res","current","next","labelSize","getLabelSize","colorMap","getColorMap","remove","Math","vMargin","hMargin","on","onNodeClick","className","minWidth","ref","color","React","Component","MatchingGraph","root","renderGraph","datum","direction","ccoef","abs","framePair","margin","matching","reference","html","bbox","getBBox","onMouseOverNode","onMouseOutNode","computePath","includeFooter","linked","add","markerWidth","markerHeight","refX","refY","points","LUMatchingGraph","graphData","scalePoint","domain","range","padding","yLU1","yLU2","yInter","frm1LUX","frm2LUX","interX","getRenderingData","SynsetGraph","posRegex","synset","highlighted","definition","lemmaHtml","tooltip","getBoundingClientRect","top","window","innerHeight","lemma","isHighlighted","yLeft","yRight","xLeft","xRight","UiState","isSidebarOpen","isAlignmentDetailVisible","action","find","scoringSelectOptions","ChartPanel","selectableTypes","onClick","onBackClick","renderMatchingGraph","CheckBox","checked","onChange","htmlFor","marginLeft","FormLabel","children","NumericInput","step","placeholder","renderLabel","Number","CheckBoxEnabledInput","onCheckedChange","onValueChange","worker","Worker","parserScript","JsonFileInput","onFileChange","event","file","files","postMessage","onmessage","message","Error","setState","error","onFileParse","renderError","Slider","Sidebar","onScoringChange","option","setScoring","onFrameSelectionChange","selected","updateParam","param","onThresholdChange","onLimitSankeyEdgesChange","onSankeyEdgesMaxChange","onDisplayOnlyFrameSetChange","onNeighborhoodSizeChange","onSimilarityThresholdChange","sidebarWidth","contentDisplay","display","marginTop","css","renderVectorFields","items","selectedItems","responsiveHeight","itemHeight","wrapperClassName","onResize","App","handleWidth","handleHeight","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","code","self","reader","FileReader","addEventListener","JSON","parse","result","exception","readAsBinaryString","toString","substring","lastIndexOf","blob","Blob","workerScript","URL","createObjectURL","module","exports"],"mappings":"6hBAEIA,EAAM,CAAEC,QAAS,QAErBD,GAAS,WACR,IAAIE,EAAYC,EAAcC,EAC7BC,EAAOC,EAAQC,EAAQC,EAASC,EAAKC,EACrCC,EAAMC,EAAMC,EAAGC,EAAaC,EAC5BC,EAAaC,EAAeC,EAE7B,SAASC,EAAGC,GACZP,EAAEO,EACAA,EAAEC,MAAK,WACN,IAAIR,EAAIS,IAAUC,MAChBC,EAAOL,EAAGK,OAEVC,EAAIZ,EAAEa,UAAU,YACjBf,KAAKa,EAAKG,SACVC,QACFC,OAAO,KACPC,KAAK,aAAa,SAASC,GAAI,MAAO,aAAaA,EAAEC,EAAE,IAAID,EAAEE,EAAE,OAC7DH,KAAK,QAAQ,WACbD,OAAO,QACPC,KAAK,IAAII,GAAIJ,KAAK,IAAIK,GAAIL,KAAK,QAAQM,GAAIN,KAAK,SAASO,GAExC,qBAARzB,GAAqBa,EAAEa,MAAM,QAAQ,SAASP,GAAI,OAAOnB,EAAKmB,MAExE,IAAIQ,EAAI1B,EAAEa,UAAU,UACnBf,KAAKa,EAAKgB,OACVZ,QACAC,OAAO,QACPC,KAAK,QAAQ,SACbA,KAAK,KAAI,SAASC,GAAI,OAAOA,EAAEU,QACjCH,MAAM,eAAenB,EAAGL,eAEL,qBAARF,GAAqB2B,EAAED,MAAM,QAAQ,SAASP,GAAI,OAAOnB,EAAKmB,MAExElB,EAAEa,UAAU,aACXf,KAAKa,EAAKkB,UACVd,QACFC,OAAO,KACPC,KAAK,aAAa,SAASC,GAAI,MAAO,aAAaA,EAAEC,EAAE,IAAID,EAAEE,EAAE,OAC7DH,KAAK,QAAQ,YACbD,OAAO,QACPC,KAAK,IAAII,GAAIJ,KAAK,IAAIK,GAAIL,KAAK,QAAQM,GAAIN,KAAK,SAASO,GAC3DC,MAAM,eAAe,MA6SvB,SAASJ,EAAGH,GAAI,OAAQA,EAAE1B,MAC1B,SAAS8B,EAAGJ,GAAI,OAAQA,EAAEzB,OACzB,SAAS8B,EAAGL,GAAI,OAAO,EAAEA,EAAE1B,MAC3B,SAASgC,EAAGN,GAAI,OAAO,EAAEA,EAAEzB,OAE5B,OA7SAa,EAAGR,KAAO,SAASS,GACnB,OAAIuB,UAAUC,QACdjC,EAAOS,EACAD,GAFsBR,GAI7BQ,EAAGP,KAAO,SAASQ,GACnB,OAAIuB,UAAUC,QACdhC,EAAOQ,EACAD,GAFsBP,GAI7BO,EAAGjB,WAAa,SAASkB,GACzB,OAAIuB,UAAUC,QACd1C,EAAakB,EACND,GAF4C,qBAAfjB,EAA6BA,EAAa,SAAS6B,GAAI,OAAOA,EAAE,KAIpGZ,EAAGH,YAAc,SAASI,GAC1B,OAAIuB,UAAUC,QACd5B,EAAcI,EACPD,GAF6C,qBAAhBH,EAA8BA,EAAcM,KAIhFH,EAAGhB,aAAe,SAASiB,GAC3B,OAAIuB,UAAUC,QACdzC,EAAeiB,EACRD,GAF8C,qBAAjBhB,EAA+BA,EAAe,SAAS4B,GAAI,OAAOA,EAAE,KAIxGZ,EAAGF,cAAgB,SAASG,GAC5B,OAAIuB,UAAUC,QACd3B,EAAgBG,EACTD,GAF+C,qBAAlBF,EAAgCA,EAAgBK,KAIpFH,EAAGf,MAAQ,SAASgB,GACpB,OAAIuB,UAAUC,QACdxC,EAAQgB,EACDD,GAFuC,qBAAVf,EAAwBA,EAAQ,SAAS2B,GAAI,OAAOA,EAAE,KAI1FZ,EAAGd,MAAQ,SAASe,GACpB,OAAIuB,UAAUC,QACdvC,EAAQe,EACDD,GAFuC,qBAAVd,EAAwBA,EAAQ,KAIpEc,EAAGb,OAAS,SAASc,GACrB,OAAIuB,UAAUC,QACdtC,EAASc,EACFD,GAFwC,qBAAXb,EAAyBA,EAAS,KAItEa,EAAGX,QAAU,SAASY,GACtB,OAAIuB,UAAUC,QACdpC,EAAUY,EACHD,GAFyC,qBAAZX,EAA0BA,EAAU,IAIxEW,EAAGV,IAAM,SAASW,GAClB,OAAIuB,UAAUC,QACdnC,EAAMW,EACCD,GAFqC,qBAARV,EAAsBA,EAAM,GAIhEU,EAAGZ,OAAS,SAASa,GACrB,OAAIuB,UAAUC,QACdrC,EAASa,EACFD,GAFwC,qBAAXZ,EAAyBA,EAAS,YAItEY,EAAGT,IAAM,SAASU,GAClB,OAAIuB,UAAUC,QACdlC,EAAMU,EACCD,GAFqC,qBAART,EAAsBA,EAAM,GAIhES,EAAGJ,SAAW,SAASK,GACvB,OAAIuB,UAAUC,QACd7B,EAAWK,EACJD,GAF0C,qBAAbJ,EAA2BA,EAAW,KAI1EI,EAAGL,YAAc,SAASM,GAC1B,OAAIuB,UAAUC,QACd9B,EAAcM,EACPD,GAF6C,qBAAhBL,EAA8BA,EAAc,IAIhFK,EAAGD,SAAW,SAASE,GACvB,OAAIuB,UAAUC,QACd1B,EAAWE,EACJD,GAF0C,qBAAbD,EAA2BA,EAAW,UAI1EC,EAAGK,KAAO,SAASqB,GACnB,IAAIH,EAAS,CAACI,QAAQ,GAAIC,UAAU,IAChCpB,EAAS,CAACmB,QAAQ,GAAIC,UAAU,IAChCC,EAAK,CAACF,QAAQ3B,EAAGjB,aAAc6C,UAAU5B,EAAGhB,gBAC5C8C,EAAM9B,EAAGZ,SAQb,OANA2C,EAAkB,WAClBA,EAAkB,aAClBC,EAAiB,WACjBA,EAAiB,aAYjB,WACC,IAAIC,EAAGjC,EAAGV,MAAM,EAEhBiC,EAASI,QAAQO,SAAQ,SAAStB,GAC9BA,EAAEzB,OAAO8C,IAAGrB,EAAEzB,OAAO8C,MAEzBV,EAASK,UAAUM,SAAQ,SAAStB,GAChCA,EAAEzB,OAAO8C,IAAGrB,EAAEzB,OAAO8C,MAlB1BE,GAEO,CACLZ,SAASA,EAASI,QAAQS,OAAOb,EAASK,WAC1CpB,QAAQA,EAAQmB,QAAQS,OAAO5B,EAAQoB,WACvCP,MA8EF,WACC,IAAIgB,EAAIlC,IAAOK,EAAQoB,WAAU,SAAShB,GAAI,OAAOA,EAAE0B,SACnDC,EAAOvC,EAAGD,WAEd,OAAOS,EAAQmB,QAAQU,KAAI,SAASzB,GACnC,IAAIlB,EAAE2C,EAAIG,IAAI5B,EAAE0B,OAChB,MAAO,CACLhB,KAAa,aAARQ,EACHW,EAAS7B,EAAEC,EAAED,EAAE1B,MAAM0B,EAAEE,EAAEF,EAAEzB,OAAOO,EAAEmB,EAAEnB,EAAER,MAAMQ,EAAEoB,EAAEpB,EAAEP,OAAOO,EAAEmB,EAAEnB,EAAER,MAAMQ,EAAEoB,EAAEpB,EAAEP,OAAOyB,EAAEC,EAAED,EAAE1B,MAAM0B,EAAEE,EAAEF,EAAEzB,QACtGuD,EAAU9B,EAAEC,EAAED,EAAE1B,MAAM0B,EAAEE,EAAEF,EAAEzB,OAAOO,EAAEmB,EAAEnB,EAAER,MAAMQ,EAAEoB,EAAEpB,EAAEP,OAAOO,EAAEmB,EAAEnB,EAAER,MAAMQ,EAAEoB,EAAEpB,EAAEP,OAAOyB,EAAEC,EAAED,EAAE1B,MAAM0B,EAAEE,EAAEF,EAAEzB,QACzGwC,QAAQf,EAAEe,QACVC,UAAUhB,EAAEgB,UACZ3C,MAAM2B,EAAE3B,MACR0D,QAAQ/B,EAAE+B,YAGb,SAASF,EAASG,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,GACtC,GAAW,aAARZ,EAAoB,MAAO,CAAC,IAAIK,EAAG,IAAIC,EAAG,IAAIC,EAAG,IAAIC,EAAG,IAAIC,EAAG,IAAIC,EAAG,IAAIC,EAAG,IAAIC,EAAG,KAAKC,KAAK,IACjG,IAAIC,GAAKT,EAAGE,GAAI,EAAEQ,GAAKN,EAAGE,GAAI,EAC9B,MAAO,CAAC,IAAIN,EAAG,IAAIC,EAAG,IAAIQ,EAAI,IAAIR,EAAG,IAAIQ,EAAI,IAAIN,EAAG,IAAID,EAAG,IAAIC,EAAG,IAC/DC,EAAG,IAAIC,EAAG,IAAIK,EAAI,IAAIL,EAAG,IAAIK,EAAI,IAAIH,EAAG,IAAID,EAAG,IAAIC,EAAG,KAAKC,KAAK,IAEpE,SAASV,EAAUE,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,GACvC,GAAW,aAARZ,EAAoB,MAAO,CAAC,IAAIK,EAAG,IAAIC,EAAG,IAAIC,EAAG,IAAIC,EAAG,IAAIC,EAAG,IAAIC,EAAG,IAAIC,EAAG,IAAIC,EAAG,KAAKC,KAAK,IACjG,IAAIG,GAAKV,EAAGE,GAAI,EAAES,GAAKP,EAAGE,GAAI,EAC9B,MAAO,CAAC,IAAIP,EAAG,IAAIC,EAAG,IAAID,EAAG,IAAIW,EAAI,IAAIT,EAAG,IAAIS,EAAI,IAAIT,EAAG,IAAIC,EAAG,IAC/DC,EAAG,IAAIC,EAAG,IAAID,EAAG,IAAIQ,EAAI,IAAIN,EAAG,IAAIM,EAAI,IAAIN,EAAG,IAAIC,EAAG,KAAKC,KAAK,KAxG7DK,IAGR,SAASC,EAAS9C,EAAG+C,GACpB,MAAsB,qBAAPjC,GAAsBA,EAAGiC,OAASA,GAAU9B,EAAIH,EAAGiC,MAAM/C,KAAOc,EAAGG,IAYnF,SAASE,EAAkB4B,GAE1B,SAASC,EAAEhD,GAAI,OAAO8C,EAAS9C,EAAG+C,GAAQ3D,EAAGf,OAAHe,CAAWY,GAAI,EAEzD,IAAIiD,EAAK1D,MACP0B,IAAW,YAAP8B,EAAkB3D,EAAGjB,aAAaiB,EAAGhB,gBACzC8E,SAAgB,YAAPH,EAAkB3D,EAAGH,cAAcG,EAAGF,iBAC/CiE,QAAO,SAASnD,GAAI,OAAOT,IAAOS,EAAEgD,MACpCI,QAAQhE,EAAGR,QAGTa,EAAO4D,EAAMJ,EAAI7D,EAAGT,MAAOS,EAAGV,MAAO,EAAS,aAANwC,EAAmB9B,EAAGb,SAAWa,EAAGd,SAC5EgF,EAAQlE,EAAGX,UACfwE,EAAG3B,SAAQ,SAAStB,EAAEuD,GACrB5C,EAASoC,GAAMS,KAAK,CAClBvD,EAAQ,eAANiB,GAAqBzB,EAAK8D,GAAG7D,EAAED,EAAK8D,GAAG/C,GAAG,EAAY,YAAPuC,EAAmBO,EAAM,EAAIlE,EAAGd,QAAQgF,EAAM,EAC/FpD,EAAQ,aAANgB,GAAmBzB,EAAK8D,GAAG7D,EAAED,EAAK8D,GAAG/C,GAAG,EAAY,YAAPuC,EAAmBO,EAAM,EAAIlE,EAAGb,SAAS+E,EAAM,EAC9F/E,OAAa,aAAN2C,GAAmBzB,EAAK8D,GAAG/C,EAAIf,EAAK8D,GAAG7D,GAAG,EAAI4D,EAAM,EAC3DhF,MAAa,eAAN4C,GAAqBzB,EAAK8D,GAAG/C,EAAIf,EAAK8D,GAAG7D,GAAG,EAAI4D,EAAM,EAC7DP,KAAKA,EACL9B,IAAIjB,EAAEiB,IACN5C,MAAM2B,EAAE3B,MACR0D,QAAQtC,EAAK8D,GAAGE,OAIpB,SAASrC,EAAiB2B,GACzB,SAASC,EAAEhD,GAAI,OAAO8C,EAAS9C,EAAG+C,GAAQ3D,EAAGf,OAAHe,CAAWY,GAAI,EAEzD,IAAIyB,EAAMlC,IAAOoB,EAASoC,IAAO,SAAS/C,GAAI,OAAOA,EAAEiB,OAE9C1B,MACP0B,IAAW,YAAP8B,EAAkB3D,EAAGjB,aAAaiB,EAAGhB,gBACzC8E,SAAgB,YAAPH,EAAkB3D,EAAGH,cAAcG,EAAGF,iBAC/C+B,IAAW,cAAP8B,EAAoB3D,EAAGjB,aAAaiB,EAAGhB,gBAC3C8E,SAAgB,cAAPH,EAAoB3D,EAAGH,cAAcG,EAAGF,iBACjDiE,QAAO,SAASnD,GAAI,OAAOT,IAAOS,EAAEgD,MACpCI,QAAQhE,EAAGR,QAEV0C,SAAQ,SAAStB,GACnB,IAAIlB,EAAG2C,EAAIG,IAAI5B,EAAEiB,KACbxB,EAAO4D,EAAMrD,EAAE0D,OAAQ,EAAG,EACrB,aAANxC,EAAmBpC,EAAEoB,EAAEpB,EAAEP,OAASO,EAAEmB,EAAEnB,EAAER,MAClC,aAAN4C,EAAmBpC,EAAEoB,EAAEpB,EAAEP,OAASO,EAAEmB,EAAEnB,EAAER,OAEvCgF,EAAQlE,EAAGX,UACfuB,EAAE0D,OAAOpC,SAAQ,SAASqC,EAAEJ,GAC3B3D,EAAQmD,GAAMS,KAAK,CACjBvD,EAAQ,aAANiB,EAAyB,YAAP6B,EAAmBO,EAAM,EAAIlE,EAAGd,QAAQgF,EAAM,GAAK7D,EAAK8D,GAAG7D,EAAED,EAAK8D,GAAG/C,GAAG,EAC5FN,EAAQ,eAANgB,EAA2B,YAAP6B,EAAmBO,EAAM,EAAIlE,EAAGb,SAAS+E,EAAM,GAAK7D,EAAK8D,GAAG7D,EAAED,EAAK8D,GAAG/C,GAAG,EAC/FjC,QAAc,aAAN2C,EAAkBzB,EAAK8D,GAAG/C,EAAIf,EAAK8D,GAAG7D,EAAI4D,GAAO,EACzDhF,OAAc,eAAN4C,EAAoBzB,EAAK8D,GAAG/C,EAAIf,EAAK8D,GAAG7D,EAAI4D,GAAO,EAC3DP,KAAKA,EACLhC,QAAe,YAAPgC,EAAkB/C,EAAEiB,IAAM0C,EAAE1C,IACpCD,UAAiB,YAAP+B,EAAkBY,EAAE1C,IAAMjB,EAAEiB,IACtC5C,MAAMsF,EAAEtF,MACR0D,QAAQtC,EAAK8D,GAAGE,EAAE3E,EAAEiD,QACpBL,MAAc,YAAPqB,EAAkB/C,EAAEiB,IAAI,IAAI0C,EAAE1C,IAAM0C,EAAE1C,IAAI,IAAIjB,EAAEiB,YAkC5D,SAASoC,EAAMO,EAAYH,EAAUpC,EAAU3B,EAAYc,GAC1D,IAAIqD,EAAIxC,GAAGb,EAAEd,EAAE,EAAEkE,EAAE/C,OAAO4C,GACtBK,EAAI,EAAGC,EAAG,EAAGJ,EAAEpE,IAAOqE,GAAE,SAAS5D,GAAI,OAAOA,EAAE3B,SAClDuF,EAAEtC,SAAQ,SAAStB,GAAOA,EAAE3B,MAAQwF,EAAEF,IAAKG,GAAI,EAAGC,GAAI/D,EAAE3B,UACxD,IAAI2F,EAAGL,EAAI,KAAO,GAAGnD,EAAEd,EAAE,EAAEkE,EAAE/C,OAAO4C,EAAEK,EAAGzC,IAAIsC,EAAEI,GAC3CE,EAAEvE,EAAGwE,EAAI,GAWb,OAVAN,EAAEtC,SAAQ,SAAStB,GAClB,IAAIgD,EAAGhD,EAAE3B,MAAM2F,EACfE,EAAIV,KAAK,CACP9D,EAAEuE,EAAER,GAAGT,EAAE3B,EAAE,IAAIA,EAAE2B,GAAI,GACrBxC,EAAEyD,EAAER,GAAGT,EAAE3B,EAAG,IAAIA,EAAE2B,GAAGA,GACrBS,EAAEE,EAAI,KAAM,EAAE3D,EAAE3B,MAAMsF,IAExBM,GAAG,EAAER,GAAGT,EAAE3B,EAAGA,EAAE2B,MAGTkB,IAGR9E,EAAG+E,OAAS,SAASC,GACpBxF,EAAOwF,EACR,IAAIC,EAAKjF,EAAGK,OACR6E,EAAMlF,EAAGJ,WAEbF,EAAEa,UAAU,YAAYf,KAAKyF,EAAGzE,SAAS2E,aAAavF,SAASsF,GAC7DvE,KAAK,aAAa,SAASC,GAAI,MAAO,aAAaA,EAAEC,EAAE,IAAID,EAAEE,EAAE,OAC7DsE,OAAO,QACPzE,KAAK,IAAII,GAAIJ,KAAK,IAAIK,GAAIL,KAAK,QAAQM,GAAIN,KAAK,SAASO,GAE3DxB,EAAEa,UAAU,UAAUf,KAAKyF,EAAG5D,OAAO8D,aAAavF,SAASsF,GACzDvE,KAAK,KAAI,SAASC,GAAI,OAAOA,EAAEU,QACjCH,MAAM,eAAenB,EAAGL,eACxBwB,MAAM,aAAc,WAEpBzB,EAAEa,UAAU,aAAaf,KAAKyF,EAAG1D,UAAU4D,aAAavF,SAASsF,GACjEvE,KAAK,aAAa,SAASC,GAAI,MAAO,aAAaA,EAAEC,EAAE,IAAID,EAAEE,EAAE,OAC7DsE,OAAO,QACPzE,KAAK,IAAII,GAAIJ,KAAK,IAAIK,GAAIL,KAAK,QAAQM,GAAIN,KAAK,SAASO,GAE3DC,MAAM,aAAc,WAEtBnB,EAAGqF,UAAY,SAASzE,GACvB,IAAI0E,EAAUtF,EAAGK,KAAKO,GACtBlB,EAAEa,UAAU,aAAagF,QAAO,SAASd,GAAI,OAAOA,EAAEd,OAAO/C,EAAE+C,MAAQc,EAAE5C,MAAQjB,EAAEiB,OAClFuD,OAAO,QAAQjE,MAAM,iBAAkB,GAExCzB,EAAEa,UAAU,YAAYf,KAAK8F,EAAQ9E,SACpC2E,aAAavF,SAASI,EAAGJ,YACzBe,KAAK,aAAa,SAASC,GAAI,MAAO,aAAaA,EAAEC,EAAE,IAAID,EAAEE,EAAE,OAC/DsE,OAAO,QAAQzE,KAAK,IAAII,GAAIJ,KAAK,IAAIK,GAAIL,KAAK,QAAQM,GAAIN,KAAK,SAASO,GAEzE,IAAIE,EAAI1B,EAAEa,UAAU,UACnBf,KAAK8F,EAAQjE,OAEdD,EAAEmE,QAAO,SAAShB,GAAI,OAAOA,EAAE3D,EAAE+C,QAAU/C,EAAEiB,OAC5CsD,aAAavF,SAASI,EAAGJ,YACzBuB,MAAM,eAAenB,EAAGL,eACxBwB,MAAM,aAAc,WAEpBR,KAAK,KAAI,SAASC,GAAI,OAAOA,EAAEU,QAEhCF,EAAEmE,QAAO,SAAShB,GAAI,OAAOA,EAAE3D,EAAE+C,QAAU/C,EAAEiB,OAC5CsD,aAAavF,SAASI,EAAGJ,YAEzBuB,MAAM,aAAc,UACpBR,KAAK,KAAI,SAASC,GAAI,OAAOA,EAAEU,QAEhC5B,EAAEa,UAAU,aAAaf,KAAK8F,EAAQ/D,UACrC4D,aAAavF,SAASI,EAAGJ,YACzBe,KAAK,aAAa,SAASC,GAAI,MAAO,aAAaA,EAAEC,EAAE,IAAID,EAAEE,EAAE,OAC/DsE,OAAO,QAAQzE,KAAK,IAAII,GAAIJ,KAAK,IAAIK,GAAIL,KAAK,QAAQM,GAAIN,KAAK,SAASO,IAE1ElB,EAAGwF,SAAW,SAAS5E,GACtB,IAAI0E,EAAUtF,EAAGK,OAEjBX,EAAEa,UAAU,aAAagF,QAAO,SAASd,GAAI,OAAOA,EAAEd,OAAO/C,EAAE+C,MAAQc,EAAE5C,MAAQjB,EAAEiB,OAClFuD,OAAO,QAAQjE,MAAM,iBAAkB,GAExCzB,EAAEa,UAAU,YAAYf,KAAK8F,EAAQ9E,SACpC2E,aAAavF,SAASI,EAAGJ,YACzBe,KAAK,aAAa,SAASC,GAAI,MAAO,aAAaA,EAAEC,EAAE,IAAID,EAAEE,EAAE,OAC/DsE,OAAO,QAAQzE,KAAK,IAAII,GAAIJ,KAAK,IAAIK,GAAIL,KAAK,QAAQM,GAAIN,KAAK,SAASO,GAEzExB,EAAEa,UAAU,UAAUf,KAAK8F,EAAQjE,OAClC8D,aAAavF,SAASI,EAAGJ,YACzBuB,MAAM,eAAenB,EAAGL,eACxBwB,MAAM,aAAc,WACpBR,KAAK,KAAI,SAASC,GAAI,OAAOA,EAAEU,QAEhC5B,EAAEa,UAAU,aAAaf,KAAK8F,EAAQ/D,UACrC4D,aAAavF,SAASI,EAAGJ,YACzBe,KAAK,aAAa,SAASC,GAAI,MAAO,aAAaA,EAAEC,EAAE,IAAID,EAAEE,EAAE,OAC/DsE,OAAO,QAAQzE,KAAK,IAAII,GAAIJ,KAAK,IAAIK,GAAIL,KAAK,QAAQM,GAAIN,KAAK,SAASO,IAOnElB,IAGOnB,I,uCC9VT4G,EAAiB,CACtBC,cAAe,CACdC,UAAW,EACXC,qBAAqB,EACrBC,eAAgB,KAChBC,kBAAkB,GAEnBC,WAAY,CACXJ,UAAW,GACXC,qBAAqB,EACrBC,eAAgB,KAChBC,kBAAkB,GAEnBE,QAAS,CACRL,UAAW,IACXC,qBAAqB,EACrBC,eAAgB,EAChBC,kBAAkB,EAClBG,iBAAkB,EAClBC,oBAAqB,IAEtBC,aAAc,CACbR,UAAW,IACXC,qBAAqB,EACrBC,eAAgB,EAChBC,kBAAkB,GAEnBM,QAAS,CACRT,UAAW,GACXC,qBAAqB,EACrBC,eAAgB,EAChBC,kBAAkB,EAClBG,iBAAkB,EAClBC,oBAAqB,KAIjBG,EAAmB,IAAIC,IAAI,CAChC,cACA,qBAGKC,EAAmB,IAAID,IAAI,CAChC,aACA,SACA,aACA,UACA,UACA,iBAMKE,EAAY,kBAAM,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,OASpDE,EAAS,uCAAG,WAAOpH,GAAP,+BAAAgF,EAAA,sDACXnD,EAAQ,GACVwF,EAAO,EACPC,EAAOC,YAAYC,MAEdC,EAAK,EALG,YAKAA,EAAKzH,EAAK0H,WAAWzF,QALrB,oBAMZ0F,EAAS3H,EAAK0H,WAAWD,GAAIzH,KAC7B4H,EAAY,IAEZD,EATY,iBAUNhD,EAAI,EAVE,YAUCA,EAAIgD,EAAO1F,QAVZ,iBAWL4F,EAAI,EAXC,aAWEA,EAAIF,EAAOhD,GAAG1C,QAXhB,qBAYTxC,EAAQkI,EAAOhD,GAAGkD,IAEV,GACXD,EAAUhD,KAAK,CAAC5E,EAAK8H,QAAQ,GAAGnD,GAAI3E,EAAK8H,QAAQ,GAAGD,GAAIpI,MAGnD4H,EAAO,MAAS,EAlBT,sBAmBFE,YAAYC,MACZF,EAAO,KApBL,kCAqBLN,IArBK,QAsBXM,EAAOC,YAAYC,MAtBR,UAW0BK,EAX1B,0BAUsBlD,EAVtB,uBA4Bf9C,EAAM7B,EAAK0H,WAAWD,GAAIM,IAAMH,EA5BjB,QAK6BH,IAL7B,gDAgCV5F,GAhCU,4CAAH,sDA2CTmG,EAAe,SAAChD,EAAGK,GAAJ,OACnBL,EAAEiD,OAAS5C,EAAE4C,MACd,YAAIjD,GAAGkD,OAAO,SAAAzI,GAAK,OAAI4F,EAAE8C,IAAI1I,OAOxB2I,E,WAgFL,WAAYC,GAAU,IAAD,gCAhErBxG,MAAQ,GAgEa,KA1DrBiG,QAAU,GA0DW,KArDrBQ,OAAS,GAqDY,KAhDrBC,aAAe,GAgDM,KA3CrBC,YAAc,GA2CO,KAtCrBC,WAAa,GAsCQ,KAjCrBC,kBAAoB,GAiCC,KA5BrBC,oBAAsB,GA4BD,KAvBrBC,kBAAoB,GAuBC,KAlBrBC,oBAAsB,GAkBD,KAbrBC,iBAAmB,GAaE,KAPrBC,eAAiB,GAOI,KAFrBC,WAAY,EAES,KAIrBC,gBAAkBC,wBAAc,GAAI,IAAL,sBAAU,kDAAAlE,EAAA,yDAClCmE,EAAQ,EAAKd,QACZe,EAAyBD,EAAzBC,QAASC,EAAgBF,EAAhBE,cAEZD,EAJoC,wBAKjCd,EAAS,EAAKA,OALmB,EAWnCc,EAAQE,OAJXlD,EAPsC,EAOtCA,oBACAD,EARsC,EAQtCA,UARsC,EAUtCM,iBAVsC,EAUpBC,oBAVoB,EAUCJ,iBAVD,EAUmBD,eAVnB,SAajC,IAAIY,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAAS,QAbV,cAcjCqC,EAAW,IAAIzC,IAAIuC,EAAaxG,KAAI,SAAAxB,GAAC,OAAIA,EAAE0G,OAC3CyB,EAAWpD,EACd,SAAA/E,GAAC,OAAIkI,EAASpB,IAAI9G,EAAE,KAAOkI,EAASpB,IAAI9G,EAAE,KAAOA,EAAE,IAAM8E,GACzD,SAAA9E,GAAC,OAAKkI,EAASpB,IAAI9G,EAAE,KAAOkI,EAASpB,IAAI9G,EAAE,MAAQA,EAAE,IAAM8E,GAjBvB,UAkBnB,EAAKsD,SAASF,GAlBK,eAkBjC1H,EAlBiC,OAmBjC6H,EAAW7H,EAAMkE,OAAOyD,GACxBG,EAAS,EAAKC,WAAWF,GAC7B7G,KAAI,SAAAxB,GAAC,MAAI,CACTiH,EAAOjH,EAAE,IAAIwI,KAAO,IAAMvB,EAAOjH,EAAE,IAAIyI,SACvCxB,EAAOjH,EAAE,IAAIwI,KAAO,IAAMvB,EAAOjH,EAAE,IAAIyI,SACvCzI,EAAE,OAxBmC,kBA2BhCsI,GA3BgC,iCA6BhC,IA7BgC,6CAJpB,KAicrBI,WAAa,iBAAO,CAAEC,SAAU,EAAGC,UAAW,IAjczB,KAilBrBC,KAAOC,eAAI,UAAC,SAAS,EAAGnK,GAAZ,yEAGE,OAFbY,KAAKwJ,KAAOpK,EAAKqK,GAAG,GACpBzJ,KAAKkJ,SAAW9J,EAAKsK,KAAK,GAFf,SAGQlD,EAAUpH,GAHlB,OAMX,IAASqC,KAHTzB,KAAKiB,MAHM,OAKXjB,KAAK2H,aAAe,GACJvI,EAAKsI,OAChBiC,OAAOC,UAAUC,eAAeC,KAAK1K,EAAKsI,OAAQjG,KACjDsI,EAAQ3K,EAAKsI,OAAOjG,GACxBzB,KAAK2H,aAAaoC,EAAMd,KAAO,IAAMc,EAAMb,UAAYa,GAIzD/J,KAAKyH,QAAQuC,eACZ5K,EAAK0H,WAAW7E,KAAI,SAAAxB,GAAC,MAAK,CACzB0G,GAAI1G,EAAE0G,GACN8C,KAAMxJ,EAAEwJ,KACRC,KAAMzJ,EAAEyJ,KACRxB,OAAQrD,EAAe5E,EAAEyJ,OAAS,CACjC3E,UAAW,GACXC,qBAAqB,EACrBC,eAAgB,KAChBC,kBAAkB,OAIrB1F,KAAKkH,QAAU9H,EAAK8H,QACpBlH,KAAK0H,OAAStI,EAAKsI,OACnB1H,KAAK4H,YAAcxI,EAAK+K,UAAUC,UAClCpK,KAAK6H,WAAazI,EAAK+K,UAAUE,SACjCrK,KAAK8H,kBAAoB1I,EAAK+K,UAAUG,eACxCtK,KAAK+H,oBAAsB3I,EAAK+K,UAAUI,aAC1CvK,KAAKgI,kBAAoB5I,EAAK+K,UAAUK,eACxCxK,KAAKiI,oBAAsB7I,EAAK+K,UAAUM,aAG1CzK,KAAKyH,QAAQiD,qBAAqB,KAAM,MACxC1K,KAAKyH,QAAQe,QAAU,KACvBxI,KAAKyH,QAAQgB,aAAe,GAtCjB,iDAhlBXzI,KAAKyH,QAAUA,E,8FAkJDkB,G,wFACPH,EAAWxI,KAAKyH,QAAhBe,QACAE,EAAUF,EAAVE,OACDiC,EAAa3K,KAAKmI,eAAeK,EAAQrB,KAAO,GAGjC,YAAjBqB,EAAQ0B,MAAuBlK,KAAKiB,MAAMuH,EAAQrB,I,iBACjDyD,GAAY,E,MAEA,CAAC,mBAAoB,uB,4CAA5BnJ,E,KACJkJ,EAAWlJ,KAASiH,EAAOjH,G,wBAC9BmJ,GAAY,E,2DAKTA,IACJA,GAAaxD,EAAauD,EAAU,SAAchC,KAG/CiC,E,kCACW5K,KAAK6K,aAAalC,G,QAAhC1H,E,OACAjB,KAAKiB,MAAMuH,EAAQrB,IAAMlG,E,wBAEzBA,EAAQjB,KAAKiB,MAAMuH,EAAQrB,I,gCAG5BlG,EAAQjB,KAAKiB,MAAMuH,EAAQrB,I,eAG5BnH,KAAKmI,eAAeK,EAAQrB,IAA5B,eAAsCuB,GACtC1I,KAAKmI,eAAeK,EAAQrB,IAA5B,SAA8CwB,E,kBAEvC1H,G,oLAcW0H,G,2FACZ1H,EAAQ,GAWRiG,EAAU,CACflH,KAAKkH,QAAQ,GAAG/B,QAAO,SAAA1E,GAAC,OAAKkI,EAASpB,IAAI9G,MAC1CT,KAAKkH,QAAQ,I,cAIMyB,G,4DAAXmC,E,QAGiB,KAFnBf,EAAQ/J,KAAK0H,OAAOoD,IAEhBC,IAAI1J,O,wDAQd,GAJIa,O,EACAuE,EAAO,EACPC,EAAOC,YAAYC,MAEA,OAAnBmD,EAAMb,SACT,IAASnF,EAAI,EAAGA,EAAImD,EAAQ,GAAG7F,SAAU0C,EACxC7B,EAAQgF,EAAQ,GAAGnD,GACnB9C,EAAM+C,KAAK,CAAC+F,EAAMiB,IAAK9I,EAAOlC,KAAKiL,sBAAsBlB,EAAO/J,KAAK0H,OAAOxF,QAC1EuE,OAGH,IAAS1C,EAAI,EAAGA,EAAImD,EAAQ,GAAG7F,SAAU0C,EACxC7B,EAAQgF,EAAQ,GAAGnD,GACnB9C,EAAM+C,KAAK,CAAC9B,EAAO6H,EAAMiB,IAAKhL,KAAKiL,sBAAsBjL,KAAK0H,OAAOxF,GAAQ6H,OAC3EtD,E,KAIEA,EAAO,MAAU,E,sBACZE,YAAYC,MACZF,EAAO,K,kCACVN,I,QACNM,EAAOC,YAAYC,M,sJAItB5G,KAAKkI,iBAAmB,G,kBACjBjH,EAAMkE,QAAO,SAAA1E,GAAC,OAAIA,EAAE,GAAK,M,mKAYXyK,EAAUC,GAAU,IAAD,OACjCzC,EAAU1I,KAAKyH,QAAQe,QAAvBE,OAuBP,OArBK1I,KAAKkI,iBAAiBgD,EAASF,OACnChL,KAAKkI,iBAAiBgD,EAASF,KAC9BE,EAASH,IACP9I,KAAI,SAAAxB,GAAC,OAAI,EAAKqH,kBAAkBrH,EAAEuK,QAClC7F,QAAO,SAAA1E,GAAC,OAAIA,KACZ2K,SAAQ,SAAA3K,GAAC,OAAIA,EAAE4K,MAAM,EAAG3C,EAAO7C,qBAC/BV,QAAO,SAAA1E,GAAC,OAAIA,EAAE,IAAMiI,EAAO5C,wBAG1B9F,KAAKkI,iBAAiBiD,EAAQH,OAClChL,KAAKkI,iBAAiBiD,EAAQH,KAAO,IAAI9E,IACxCiF,EAAQJ,IACNK,SAAQ,SAAA3K,GAAC,OAAI,EAAKqH,kBAAkBrH,EAAEuK,QACtC7F,QAAO,SAAA1E,GAAC,OAAIA,KACZwB,KAAI,SAAAxB,GAAC,OAAIA,EAAE,QAICT,KAAKkI,iBAAiBgD,EAASF,KAC5C7F,QAAO,SAAA1E,GAAC,OAAIA,GAAK,EAAKyH,iBAAiBiD,EAAQH,KAAKzD,IAAI9G,EAAE,OAE9CY,OAAS6J,EAASH,IAAI1J,S,uCAYrC,IAAMiK,EAAQtL,KAAKuL,WACbC,EAAQxL,KAAKyL,qBAAqBH,EAAOtL,KAAK4H,aAC9C8D,EAAQF,EAAME,MAAMvG,QAAO,SAAAwG,GAAC,OAAIA,EAAEC,OAAOC,iBAgB/C,OAdAP,EAAMtH,KAAN,MAAAsH,EAAK,YAASE,EAAMF,MAAMnG,QAAO,SAAA2G,GAAC,OAAIA,EAAED,mBACxCH,EAAMvG,QAAO,SAAAwG,GAAC,MAAsB,UAAlBA,EAAEI,OAAO7B,QAAkBpI,SAAQ,SAAA6J,GACpD,IAAIK,EAAOL,EAAEI,OACbJ,EAAEI,OAASJ,EAAEC,OACbD,EAAEC,OAASI,KAEZV,EAAMxJ,SAAQ,SAAAgK,GAAC,OAAIA,EAAEG,gBAA6B,SAAXH,EAAE5B,QACzCwB,EACEvG,QAAO,SAAAwG,GAAC,MAAuB,SAAlBA,EAAEI,OAAO7B,MAAmByB,EAAEC,OAAOM,kBAClDpK,SAAQ,SAAA6J,GACRA,EAAEI,OAAOI,gBAAiB,KAE5BnM,KAAKoM,eAAeV,GAEb,CAAEJ,QAAOI,W,oCAchB,IAAMxB,EAAOlK,KAAKyH,QAAQe,QAAQ0B,KAC5BoB,EAAQtL,KAAKuL,WACbC,EAAQxL,KAAKyL,qBAAqBH,EAAOtL,KAAK4H,aAC9C8D,EAAQF,EAAME,MAEpBJ,EAAMtH,KAAN,MAAAsH,EAAK,YAASE,EAAMF,QACpB,IAAMe,EAAyB,WAATnC,EAAoB,SAAA4B,GAAC,OAAIA,EAAED,eAAgB,SAAAC,GAAC,OAAIA,EAAEQ,gBAOxE,OANAhB,EAAMxJ,SAAQ,SAAAgK,GACbA,EAAEG,gBAAkBI,EAAcP,GAClCA,EAAEK,eAAiBL,EAAEI,kBAEtBlM,KAAKoM,eAAeV,GAEb,CAAEJ,QAAOI,W,oCAYF,IAAD,OACPJ,EAAQtL,KAAKuL,WACbC,EAAQxL,KAAKyL,qBAAqBH,EAAOtL,KAAK8H,mBAAmB,SAAArH,GAAC,OAAI,EAAKsH,oBAAoBtH,MAC/FiL,EAAQF,EAAME,MAAMvG,QAAO,SAAAwG,GAAC,OAAIA,EAAEC,OAAOC,iBAc/C,OAZAP,EAAMtH,KAAN,MAAAsH,EAAK,YAASE,EAAMF,MAAMnG,QAAO,SAAA2G,GAAC,OAAIA,EAAED,mBACxCH,EAAMvG,QAAO,SAAAwG,GAAC,MAAsB,UAAlBA,EAAEI,OAAO7B,QAAkBpI,SAAQ,SAAA6J,GACpD,IAAIK,EAAOL,EAAEI,OACbJ,EAAEI,OAASJ,EAAEC,OACbD,EAAEC,OAASI,KAEZV,EAAMxJ,SAAQ,SAAAgK,GAAC,OAAIA,EAAEG,gBAA6B,SAAXH,EAAE5B,QACzCwB,EACEvG,QAAO,SAAAwG,GAAC,MAAuB,SAAlBA,EAAEI,OAAO7B,MAAmByB,EAAEC,OAAOM,kBAClDpK,SAAQ,SAAA6J,GAAC,OAAIA,EAAEI,OAAOI,gBAAiB,KACzCnM,KAAKoM,eAAeV,GAEb,CAAEJ,QAAOI,W,oCAYF,IAAD,OACba,QAAQC,IAAI,UADC,IAEN9D,EAAU1I,KAAKyH,QAAQe,QAAvBE,OAED4C,EAAQtL,KAAKuL,WAEnBD,EAAMxJ,SAAQ,SAAArB,GAAC,OAAIA,EAAEwL,iBAAkB,KACvC,IAPa,EAOPQ,EAAOnB,EAAMnG,QAAO,SAAA1E,GAAC,MAAe,SAAXA,EAAEyJ,QAC3BwC,EAAQpB,EAAMnG,QAAO,SAAA1E,GAAC,MAAe,UAAXA,EAAEyJ,QAE5BwB,EAAQ,GAVD,cAYCe,GAZD,IAYb,2BAAoB,CAAC,IAAD,EAAXrI,EAAW,QACbuI,GACJ3M,KAAKgI,kBAAkB5D,EAAE4G,MAAQ,IAChCK,MAAM,EAAG3C,EAAO7C,kBAChBV,QAAO,SAAAhB,GAAC,OAAKyI,MAAMC,QAAQ1I,IAAMA,EAAE,GAAKuE,EAAO5C,uBAC/C7D,KAAI,SAAAkC,GAAC,OAAI,EAAK8D,oBAAoB2E,MAAMC,QAAQ1I,GAAKA,EAAE,GAAKA,MAC5DgB,QAAO,SAAAhB,GAAC,OAAIA,KANI,cAQLuI,GARK,IAQnB,2BAAqB,CAAC,IAAbjI,EAAY,QAChB0C,EAAK1C,EAAEuG,IAAI8B,QAAQ,eAAgB,IACnCH,EAAaI,QAAQ5F,IAAO,IAC/BuE,EAAM1H,KAAK,CAAE+H,OAAQ3H,EAAGwH,OAAQnH,IAChCL,EAAE+H,gBAAiB,EACnB1H,EAAE0H,gBAAiB,IAbF,gCAZP,8BA8Bb,MAAO,CAAEb,QAAOI,W,wCAYhB,IAAMJ,EAAQtL,KAAKuL,SAAS,OAAO,SAAA9K,GAAC,OAAIA,EAAEwI,QACpCyC,EAAQ,GAEdJ,EAAMxJ,SAAQ,SAAArB,GAAC,OAAIA,EAAEwL,iBAAkB,KACvC,IALiB,EAKXQ,EAAOnB,EAAMnG,QAAO,SAAA1E,GAAC,MAAe,SAAXA,EAAEyJ,QAC3BwC,EAAQpB,EAAMnG,QAAO,SAAA1E,GAAC,MAAe,UAAXA,EAAEyJ,QANjB,cAQHuC,GARG,IAQjB,2BAAoB,CAAC,IAAD,EAAXrI,EAAW,sBACLsI,GADK,IACnB,2BAAqB,CAAC,IAAbjI,EAAY,QAChBL,EAAE8F,OAASzF,EAAEyF,MAAQ9F,EAAE6E,OAASxE,EAAEwE,OACrCyC,EAAM1H,KAAK,CAAE+H,OAAQ3H,EAAGwH,OAAQnH,IAChCL,EAAE+H,gBAAiB,EACnB1H,EAAE0H,gBAAiB,IALF,gCARH,8BAkBjB,MAAO,CAAEb,QAAOI,W,iCAsByC,IAAD,OAAhDsB,EAAgD,uDAApC,MAAOC,EAA6B,uDAAhB,SAAAxM,GAAC,OAAIA,EAAC,MACvCyM,EAAkBlN,KAAKyH,QAAvByF,eAEP,OAAIA,EAAe,IAAMA,EAAe,GAChClN,KAAK0H,OAAOwF,EAAe,IAAIF,GACpC/K,KAAI,SAAAxB,GAAC,4CACLyJ,KAAM,QACH,EAAKf,cACS,kBAAN1I,EAAiBA,EAAI,MAH3B,IAIL,KAAQwM,EAAWxM,QAEnBuB,OACAhC,KAAK0H,OAAOwF,EAAe,IAAIF,GAC9B/K,KAAI,SAAAxB,GAAC,4CACLyJ,KAAM,SACH,EAAKf,cACS,kBAAN1I,EAAiBA,EAAI,MAH3B,IAIL,KAAQwM,EAAWxM,SAIf,K,2CAkBY0M,EAASC,GAA+B,IAAD,OAAjBH,EAAiB,uDAAN,SAAAxM,GAAC,OAAEA,GACjDiI,EAAU1I,KAAKyH,QAAQe,QAAvBE,OAEDgD,EAAQyB,EACZ/B,SAAQ,SAAAlL,GAAC,OACRkN,EAAYlN,EAAE8K,MAAQ,IACrBK,MAAM,EAAG3C,EAAO7C,kBAChBV,QAAO,SAAAhB,GAAC,OAAKyI,MAAMC,QAAQ1I,IAAMA,EAAE,GAAKuE,EAAO5C,uBAC/C7D,KAAI,SAAAkC,GAAC,MAAK,CACV4H,OAAQ7L,EACR0L,OAAQgB,MAAMC,QAAQ1I,GAAKA,EAAE,GAAKA,EAClCkJ,YAAY,SAIVC,EAAkB,GAClBhC,EAAQ,YAAI,IAAIpF,IAAIwF,EAAMzJ,KAAI,SAAA0J,GAAC,OAAIA,EAAEC,YACxC3J,KAAI,SAAAkC,GACJ,IAAMoJ,EAAI,yBACTrD,KAAM,gBACH,EAAKf,cAFC,IAGT,KAAQ8D,EAAW9I,KAGpB,OADAmJ,EAAgBnJ,GAAKoJ,EACdA,KASV,OANA7B,EAAM5J,SAAQ,SAAA6J,GACbA,EAAEC,OAAS0B,EAAgB3B,EAAEC,QAC7BD,EAAEC,OAAyB,SAAlBD,EAAEI,OAAO7B,KAAkB,gBAAkB,mBAAoB,KAE3EoB,EAAMxJ,SAAQ,SAAAgK,GAAC,OAAIA,EAAEI,eAAiBJ,EAAED,eAAiBC,EAAEQ,kBAEpD,CAAEhB,QAAOI,W,qCAUFA,GACdA,EAAM5J,SAAQ,SAAA6J,KACXA,EAAEI,OAAO1C,YACTsC,EAAEC,OAAOxC,c,iCAcFnI,GAAQ,IACXyH,EAAU1I,KAAKyH,QAAQe,QAAvBE,OAEP,IAAKA,EAAOhD,iBACX,OAAOzE,EAERA,EAAMuM,MAAK,SAACpJ,EAAGK,GACd,OAAIL,EAAE,GAAKK,EAAE,IACJ,EACEL,EAAE,GAAKK,EAAE,GACZ,EAEAL,EAAE,GAAKK,EAAE,IAAM,EAAIL,EAAE,GAAKK,EAAE,GAAK,EAAI,KAI9C,IAAMgJ,EAAS,GAIf,OAFAxM,EAAMa,SAAQ,SAAArB,GAAC,OAAIgN,EAAOhN,EAAE,IAAM,KAE3BQ,EAAMkE,QAAO,SAAA1E,GAEnB,QADEgN,EAAOhN,EAAE,IACJgN,EAAOhN,EAAE,KAAOiI,EAAOjD,oB,iCAxhB/B,OAAOzF,KAAKqI,gBAAgBjG,Q,wCAO5B,OAAOpC,KAAKqI,gBAAgBqF,O,qCAUP,IAAD,OACpB,OAAO1N,KAAKkH,QAAQjF,KAAI,SAAA8B,GAAC,OAAIA,EAAEoB,QAAO,SAAAwI,GAAC,OAAI,EAAKjG,OAAOiG,GAAG5C,IAAI1J,OAAS,U,mCAcpD,IAAD,OACXmH,EAAWxI,KAAKyH,QAAhBe,QACDoF,EAAU5N,KAAKkH,QACnB2G,OACA5L,KAAI,SAAAxB,GAAC,MAAK,CACV0G,GAAI1G,EACJqN,MAAO,EAAKpG,OAAOjH,GAAGwI,KAAO,IAAM,EAAKvB,OAAOjH,GAAGyI,SAClD6E,UAAU,MAEVP,MAAK,SAACpJ,EAAGK,GAAJ,OAAWL,EAAE0J,MAAQrJ,EAAEqJ,OAAU,EAAK1J,EAAE0J,MAAQrJ,EAAEqJ,MAAS,EAAI,KAEtE,OAAKtF,EAGDvC,EAAiBsB,IAAIiB,EAAQ0B,MACzB0D,EAAQ3L,KAAI,SAAAxB,GAAC,kCAAUA,GAAV,IAAasN,SAA2C,IAAjC,EAAKrG,OAAOjH,EAAE0G,IAAI6G,IAAI3M,YAE9D8E,EAAiBoB,IAAIiB,EAAQ0B,MACzB0D,EAAQ3L,KAAI,SAAAxB,GAAC,kCAAUA,GAAV,IAAasN,SAA2C,IAAjC,EAAKrG,OAAOjH,EAAE0G,IAAI4D,IAAI1J,YAE3DuM,EARCA,EAAQ3L,KAAI,SAAAxB,GAAC,kCAAUA,GAAV,IAAasN,UAAU,S,gCAuB5B,IACTvF,EAAWxI,KAAKyH,QAAhBe,QAEP,IAAKA,EACJ,MAAO,CAAE8C,MAAO,GAAII,MAAO,IAE5B,OAAOlD,EAAQ0B,MACd,IAAK,aACJ,OAAOlK,KAAKiO,iBACb,IAAK,SACL,IAAK,aACJ,OAAOjO,KAAKkO,cACb,IAAK,UACJ,OAAOlO,KAAKmO,cACb,IAAK,UACJ,OAAOnO,KAAKoO,cACb,IAAK,cACJ,OAAOpO,KAAKqO,kBACb,QACC,MAAO,CAAE/C,MAAO,GAAII,MAAO,S,KAwf/B4C,mBAAS9G,EAAgB,CACxBgC,KAAM+E,aACNrF,SAAUqF,aACVrH,QAASqH,aACT7G,OAAQ6G,aACR3G,YAAa2G,aACb1G,WAAY0G,aACZzG,kBAAmByG,aACnBxG,oBAAqBwG,aACrBvG,kBAAmBuG,aACnBtG,oBAAqBsG,aACrBnG,UAAWmG,aACXC,eAAgBC,WAChBC,WAAYD,WACZE,kBAAmBF,WACnBG,aAAcH,aAGAjH,QCt0Bf,IAAMqH,EAAiBC,YAAO,OAUxBC,EAAM,UAAG,oFACRA,EAAS,CACd,UACA,UACA,UACA,UACA,UACA,WAEG7M,EAAQ,EATE,OAYb,OAZa,SAYP6M,EAAO7M,GAZA,OAabA,IAAUA,EAAQ6M,EAAO1N,OAbZ,yDA0RA2N,EAlQAC,YAAQ,kDAgBrB,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IAGDC,IAAM,KAEX,EAAKC,UAAY,KAEjB,EAAKxP,GAAK,KAEV,EAAKyP,IAAM,KAEX,EAAKtQ,OAAS,KACd,EAAKD,MAAQ,KAbK,EAhBE,gEAuCpBkB,KAAKsP,iBAvCe,2CAiDpBtP,KAAKsP,iBAjDe,kCA6DTC,GACPvP,KAAKoP,WAAapP,KAAKoP,UAAU3N,MAAQ8N,EAAI9N,KAChDzB,KAAKwP,OAAOxP,KAAKoP,WACjBpP,KAAKoP,UAAY,OAEbpP,KAAKoP,WACRpP,KAAKwP,OAAOxP,KAAKoP,WAElBpP,KAAKoP,UAAYG,EACjBvP,KAAKyP,OAAOF,MAtEO,kCAkFTG,GAAO,IAAD,EACY1P,KAAKkP,MAA3BS,EADU,EACVA,MAAOC,EADG,EACHA,YAEdA,EACCD,EAAMhI,aAAa+H,EAAKnO,SACxBoO,EAAMhI,aAAa+H,EAAKlO,cAvFL,6BAoGd+L,GACN,IAAM3E,EACS,YAAd2E,EAAKhK,KACD,SAAA/C,GAAC,OAAI+M,EAAK9L,MAAQjB,EAAEe,SACpB,SAAAf,GAAC,OAAI+M,EAAK9L,MAAQjB,EAAEgB,WAEzBxB,KAAKJ,GAAGqF,UAAUsI,GAClBvN,KAAKqP,IAAIlP,UAAU,UACjBgF,OAAOyD,GACPiH,MAAK,SAAArP,GAAC,OAAIqO,EAAerO,EAAE3B,YA7GT,6BAwHd0O,GACNvN,KAAKJ,GAAGwF,SAASmI,GACjBvN,KAAKqP,IAAIlP,UAAU,UAAU0P,KAAK,MA1Hd,qCAqIL,IAAD,EACPF,EAAS3P,KAAKkP,MAAdS,MACHG,EAAMH,EAAMjB,WAAW,GAFb,cAIGiB,EAAMjB,YAJT,IAId,2BAAmC,CAAC,IAA3BgB,EAA0B,QAC9BA,EAAK,GAAGrO,OAASyO,EAAIzO,SACxByO,EAAMJ,EAAK,IAERA,EAAK,GAAGrO,OAASyO,EAAIzO,SACxByO,EAAMJ,EAAK,KATC,8BAad,OC1LH,SAA6BG,EAAME,GAA4B,IAAlBC,EAAiB,uDAAN,KACjDC,EAASC,SAASC,cAAc,UAChCC,EAAUH,EAAOI,WAAW,MAQlC,OALCD,EAAQE,KADLN,EACH,UAAkBD,EAAlB,cAAgCC,GAEjBI,EAAQE,KAAKxD,QAAQ,QAArB,UAAiCiD,EAAjC,OAGTK,EAAQG,YAAYV,GAAM/Q,MDgLxB0R,CAAoBV,EAAK,MAlJZ,oCA4JN,IACPH,EAAS3P,KAAKkP,MAAdS,MACDc,EAAW1B,IAEjB,OAAO,YAAI,IAAI7I,IAAIyJ,EAAMjB,WAAWzM,KAAI,SAAAxB,GAAC,OAAIA,EAAE,QAC7CiQ,QAAO,SAACC,EAAKC,GAEb,OADAD,EAAIC,GAAWH,EAASI,OAAOhS,MACxB8R,IACL,MApKgB,qCAiLL,IAAD,OACPhB,EAAS3P,KAAKkP,MAAdS,MACDmB,EAAY9Q,KAAK+Q,eACjBC,EAAWhR,KAAKiR,cAChB9B,EAAMnK,YAAOhF,KAAKmP,KAExBA,EAAInK,OAAO,KAAKkM,SAChB/B,EAAI5O,KAAK,QAASP,KAAKlB,OAAOyB,KAAK,SAAUP,KAAKjB,QAGlD,IAAMA,EAASoS,KAAKrB,IAAI9P,KAAKjB,OAAS,IAAK,KACrCqS,EAAUD,KAAKrB,KAAK9P,KAAKjB,OAASA,GAAU,EAAG,GAC/CD,EAAQqS,KAAKjS,IAAI,IAAKiS,KAAKrB,IAAI9P,KAAKlB,MAAS,EAAIgS,EAAa,IAAK,MACnEO,EAAUF,KAAKrB,KAAK9P,KAAKlB,MAAQA,GAAS,EAAG,GAE7CQ,EAAI6P,EAAI7O,OAAO,KAAKC,KAAK,YAArB,oBAA+C8Q,EAA/C,aAA2DD,EAA3D,MAGVpR,KAAKJ,GACJnB,EAAImB,KACFR,KAAKuQ,EAAMjB,YACXxP,IAAI,IACJC,IAAI,GACJJ,OAAOA,GACPD,MAAMA,GACNO,MAAK,SAAAmB,GAAC,OAAIwQ,EAASxQ,EAAEe,YAExBvB,KAAKqP,IAAM/P,EAAEwK,KAAK9J,KAAKJ,IAGvBI,KAAKqP,IAAIlP,UAAU,aACjBmR,GAAG,SAAS,SAAA9Q,GAAC,OAAI,EAAK+Q,YAAY/Q,MAEpCR,KAAKqP,IAAIlP,UAAU,UACjBmR,GAAG,SAAS,SAAA9Q,GAAC,OAAI,EAAKoP,YAAYpP,MAGpCR,KAAKqP,IAAIlP,UAAU,YACjBgF,QAAO,SAAA3E,GAAC,MAAe,cAAXA,EAAE+C,QACdjD,OAAO,QACNC,KAAK,QAAS,SACdA,KAAK,KAAM,IACXA,KAAK,IAAK,GAGbP,KAAKqP,IAAIlP,UAAU,aACjBG,OAAO,QACNC,KAAK,QAAQ,SACbA,KAAK,KAAK,SAAAC,GAAC,MAAgB,YAAXA,EAAE+C,MAAsB,GAAK,MAC7ChD,KAAK,KAAK,kBAAM,KAChBsP,MAAK,SAAArP,GAAC,OAAIA,EAAEiB,OACZlB,KAAK,eAAe,SAAAC,GAAC,MAAgB,YAAXA,EAAE+C,KAAqB,MAAO,aApOvC,+BAuOX,IAAD,SACiBvD,KAAKkP,MAAvBS,EADC,EACDA,MAAOlI,EADN,EACMA,QACRrI,EAAOuQ,EAAMjB,WAInB,OAHA1O,KAAKjB,OAAS0I,EAAQ1I,OACtBiB,KAAKlB,MAAQ2I,EAAQ3I,MAGpB,yBAAK0S,UAAU,0BAA0BzQ,MAAO,CAAE0Q,SAAUhK,EAAQ3I,QAElEM,EAAKiC,OAAS,EACZ,yBAAKqQ,IAAK,SAAAnE,GAAI,OAAI,EAAK4B,IAAM5B,KAC7B,wBAAIiE,UAAU,gBAAd,oBAEF7B,EAAMhB,mBACN,yBAAK6C,UAAU,mBACd,yBAAKA,UAAU,eACd,2CACA,kBAAC,IAAD,CAAazS,OAAO,OAAO4S,MAAO,mBAxPnB,GACDC,IAAMC,Y,iBE3CtBhD,G,OAAiBC,YAAO,QAgRfgD,E,kDAtPd,aAAe,IAAD,8BACb,gBACKC,KAAO,KACZ,EAAKrG,MAAQ,KACb,EAAKJ,MAAQ,KAJA,E,gEAcbtL,KAAKgS,gB,2CAULhS,KAAKgS,gB,kCAWMC,GACX,IAAIC,EACA1P,EAAKyP,EAAMlG,OAAOtL,EAClBgC,EAAKwP,EAAMlG,OAAOrL,EAAKuR,EAAMlG,OAAOhN,OAAO,EAC3C2D,EAAKuP,EAAMrG,OAAOnL,EAClBkC,EAAKsP,EAAMrG,OAAOlL,EAAKuR,EAAMrG,OAAO7M,OAAO,EAErB,SAAtBkT,EAAMlG,OAAO7B,MAChB1H,GAAMyP,EAAMlG,OAAOjN,MAAQ,GAC3B4D,GAAMuP,EAAMrG,OAAO9M,MAAM,EAAI,GAC7BoT,EAAY,GACoB,iBAAtBD,EAAMlG,OAAO7B,MACvB1H,GAAOyP,EAAMlG,OAAOjN,MAAM,EAAK,GAC/B4D,GAAMuP,EAAMrG,OAAO9M,MAAQ,GAC3BoT,EAAY,IAEZ1P,GAAMyP,EAAMlG,OAAOjN,MAAQ,GAC3B4D,GAAOuP,EAAMrG,OAAO9M,MAAM,EAAK,GAC/BoT,GAAa,GAGd,IACMC,GAAShB,KAAKiB,IAAI5P,EAAKE,GAAI,IAAU,KAE3C,MAAM,aAAN,OACKF,EADL,4BAC2BC,EAD3B,qBAEKD,EAAK,EAAE0P,EAFZ,cAE2BzP,EAF3B,qBAGKD,EAAG2P,EAAMD,EAHd,YAG2BzP,EAH3B,aAGkCC,EAAGyP,EAAMD,EAH3C,YAGwDvP,EAHxD,aAG+DD,EANhD,IAM2DwP,EAH1E,YAGuFvP,EAHvF,qBAIKD,EAJL,4BAI2BC,EAJ3B,Y,oCAgBavD,GAAO,IAAD,EAC0BY,KAAKkP,MAA1CmD,EADW,EACXA,UAAWtT,EADA,EACAA,OAAQD,EADR,EACQA,MAAOwT,EADf,EACeA,OAC5BnD,EAAMnK,YAAOhF,KAAK+R,MAAM/M,OAAO,OAC/BuN,EAAWnT,EAAKkM,MAAMnG,QAAO,SAAA3E,GAAC,OAAIA,EAAE2L,kBAAgB9K,OACpDmR,EAAYpT,EAAKkM,MAAMnG,QAAO,SAAA3E,GAAC,OAAIA,EAAEyL,kBAAoBzL,EAAE2L,kBAAgB9K,OAEjF,GAAIgR,EAAU,IAAMA,EAAU,GAAI,CACjC,IAAM3F,EAAQ2F,EAAU,GAClB5F,EAAO4F,EAAU,GAEvBlD,EAAInK,OAAO,UACVzE,KAAK,IAAK+R,GACV/R,KAAK,IAAKxB,EAAOuT,EAAO,GACxB/R,KAAK,QAAS,cACdsP,KAJD,kBAIiBnD,EAAMzD,KAJvB,aAIgCyD,EAAM1B,IAJtC,cAI+CyB,EAAKxD,KAJpD,aAI6DwD,EAAKzB,IAJlE,MAMAmE,EAAInK,OAAO,UACTzE,KAAK,IAAKzB,EAAMwT,GAChB/R,KAAK,IAAKxB,EAAOuT,EAAO,GACxB/R,KAAK,QAAS,0BACdkS,KAJF,uEAMyBF,EANzB,iFASyBA,EATzB,qEAW6BC,EAX7B,8CAaM3D,EAAe0D,GAAUA,EAAWC,S,oCAc7B,IAAD,SACmBxS,KAAKkP,MAA7B9P,EADK,EACLA,KAAML,EADD,EACCA,OAAQD,EADT,EACSA,MAChBqQ,EAAMnK,YAAOhF,KAAK+R,MAAM/M,OAAO,OAErCmK,EACE5O,KAAK,SAAUxB,GACfwB,KAAK,QAASzB,GAEhBkB,KAAKsL,MAAQ6D,EAAInK,OAAO,UACtB7E,UAAU,QACVf,KAAKA,EAAKkM,OACVtI,KAAK,QACJ6M,MAAK,SAAArP,GAAC,OAAIA,EAAEyI,QACZnJ,MAAK,SAASU,GACd,IAAMkS,EAAO1S,KAAK2S,UAClBnS,EAAE1B,MAAQ4T,EAAK5T,MACf0B,EAAEzB,OAAS2T,EAAK3T,OAAS,KAEzBwB,KAAK,KAAK,SAAAC,GAAC,OAAIA,EAAEC,KACjBF,KAAK,KAAK,SAAAC,GAAC,OAAIA,EAAEE,KACjBH,KAAK,eAAe,SAAAC,GAAC,MAAe,SAAXA,EAAE0J,KAAkB,QAAqB,UAAX1J,EAAE0J,KAAmB,MAAQ,YACpF3J,KAAK,SAAS,SAAAC,GACd,IAAIyI,EAAO,OAMX,OALIzI,EAAE2L,eACLlD,GAAQ,SACEzI,EAAEyL,kBACZhD,GAAQ,QAEFA,KAEP1I,KAAK,UAAW,KAChB+Q,GAAG,aAAa,SAAA9Q,GAAC,OAAI,EAAKoS,gBAAgBpS,MAC1C8Q,GAAG,YAAY,SAAA9Q,GAAC,OAAI,EAAKqS,eAAerS,MAE3CR,KAAK0L,MAAQyD,EAAInK,OAAO,UACtB7E,UAAU,QACVf,KAAKA,EAAKsM,OACV1I,KAAK,QACJzC,KAAK,IAAKP,KAAK8S,aACfvS,KAAK,cAAc,SAAAC,GAAC,OAAIA,EAAE6M,WAAa,kBAAoB,QAC3D9M,KAAK,SAAU,QACfA,KAAK,eAAgB,GACrBA,KAAK,UAAW,IAEnBP,KAAK+S,cAAc3T,K,sCAYJ6S,GACf,IAAMe,EAAS,IAAI9M,IAEnBlG,KAAK0L,MACHvG,QAAO,SAAA3E,GAAC,OAAIA,EAAEuL,SAAWkG,GAASzR,EAAEoL,SAAWqG,KAC/CnS,MAAK,SAAAU,GACLwS,EAAOC,IAAIzS,EAAEuL,QACbiH,EAAOC,IAAIzS,EAAEoL,WAEbrL,KAAK,UAAW,GAElBP,KAAKsL,MAAMnG,QAAO,SAAA3E,GAAC,OAAIwS,EAAOzL,IAAI/G,MAChCO,MAAM,cAAe,QACrBR,KAAK,UAAW,GAEdP,KAAKkP,MAAM0D,iBACd5S,KAAKkP,MAAM0D,gBAAgBX,EAAOjS,KAAKsL,MAAOtL,KAAK0L,S,uCAYpD1L,KAAK0L,MAAMnL,KAAK,UAAW,IAC3BP,KAAKsL,MACHvK,MAAM,cAAe,UACrBR,KAAK,UAAW,KAElByE,YAAO,mBAAmBjE,MAAM,UAAW,QAEvCf,KAAKkP,MAAM2D,gBACd7S,KAAKkP,MAAM2D,mB,+BAGH,IAAD,SACc7S,KAAKkP,MAApB9P,EADC,EACDA,KAAMN,EADL,EACKA,MAEb,OACC,yBACC0S,UAAU,0BACVzQ,MAAO,CAAE0Q,SAAU3S,GACnB4S,IAAK,SAAAnE,GAAI,OAAI,EAAKwE,KAAOxE,IAGxBnO,EAAKkM,MAAMjK,OAAS,EAEnB,6BACC,8BACC,4BAAQ8F,GAAG,YACV+L,YAAY,KAAKC,aAAa,IAC9BC,KAAK,IAAIC,KAAK,MAAMrU,OAAO,QAC3B,6BAASsU,OAAO,mBAAmBjU,KAAK,WAG1C,uBAAG8H,GAAG,UACN,uBAAGA,GAAG,UACN,0BAAMA,GAAG,UACT,0BAAMA,GAAG,WAET,wBAAIqK,UAAU,gBAAd,yB,GAnQqBI,IAAMC,WCyGnB0B,EA1GStE,YAAQ,iLA8BV,IAAD,EACSjP,KAAKkP,MAAxBS,EADU,EACVA,MAAOlI,EADG,EACHA,QACTrI,EAAOuQ,EAAM6D,UAEbzU,EAAS0I,EAAQ1I,OAAO,GACxBD,EAAQqS,KAAKrB,IAAIrI,EAAQ3I,MAAO,KAGhC2B,EACLgT,cACEC,OAAO,CAAC,OAAQ,eAAgB,UAChCC,MAAM,CAAC,EAAG7U,IACV8U,QAAQ,IAELC,EAAOJ,cACXC,OAAOtU,EAAKkM,MACXnG,QAAO,SAAA3E,GAAC,MAAe,SAAXA,EAAE0J,QACdsD,MAAK,SAACpJ,EAAGK,GAAJ,OAAUA,EAAE4E,UAAYjF,EAAEiF,aAC/BpH,KAAI,SAAAzB,GAAC,OAAIA,EAAEyI,SACZ0K,MAAM,CAACrB,IAAUvT,EAAQuT,MAErBwB,EAAOL,cACXC,OAAOtU,EAAKkM,MACVnG,QAAO,SAAA3E,GAAC,MAAe,UAAXA,EAAE0J,QACdsD,MAAK,SAACpJ,EAAEK,GAAH,OAASA,EAAE4E,UAAYjF,EAAEiF,aAC9BpH,KAAI,SAAAzB,GAAC,OAAIA,EAAEyI,SACb0K,MAAM,CAACrB,IAAUvT,EAAQuT,MAErByB,EAASN,cACbC,OAAOtU,EAAKkM,MACXnG,QAAO,SAAA3E,GAAC,MAAe,iBAAXA,EAAE0J,QACdsD,MAAK,SAACpJ,EAAGK,GAAJ,OAAUA,EAAE2E,SAAWhF,EAAEgF,YAC9BnH,KAAI,SAAAzB,GAAC,OAAIA,EAAEyI,SACZ0K,MAAM,CA3BO,GA2BE5U,EA3BF,KA6BTiV,EAAUvT,EAAE,QACZwT,EAAUxT,EAAE,SACZyT,EAASzT,EAAE,gBAejB,OAbArB,EAAKkM,MAAMxJ,SAAQ,SAAAtB,GACH,SAAXA,EAAE0J,MACL1J,EAAEC,EAAIuT,EACNxT,EAAEE,EAAImT,EAAKrT,EAAEyI,OACQ,UAAXzI,EAAE0J,MACZ1J,EAAEC,EAAIwT,EACNzT,EAAEE,EAAIoT,EAAKtT,EAAEyI,QAEbzI,EAAEC,EAAIyT,EACN1T,EAAEE,EAAIqT,EAAOvT,EAAEyI,UAIV,CACNqC,MAAOlM,EAAKkM,MACZI,MAAOtM,EAAKsM,SApFgB,+BAwFpB,IACFjE,EAAWzH,KAAKkP,MAAhBzH,QAEP,OACC,kBAAC,EAAD,CACCrI,KAAMY,KAAKmU,mBACX9B,UAAWrS,KAAKkP,MAAMmD,UACtBtT,OAAQ0I,EAAQ1I,OAChBD,MAAO2I,EAAQ3I,MACfwT,OAAQ,GACRM,gBAAiB5S,KAAKkP,MAAM0D,gBAC5BC,eAAgB7S,KAAKkP,MAAM2D,qBAnGA,GACDjB,IAAMC,YCsHtBuC,EApHKnF,YAAQ,4MAS1BoF,SAAW,eATe,EAkC1BzB,gBAAkB,SAACX,EAAO3G,EAAOI,GAChC,GAAmB,iBAAfuG,EAAM/H,KAAV,CAD0C,IAInCyF,EAAS,EAAKT,MAAdS,MACD2E,EAAS3E,EAAM9H,WAAWoK,EAAMhJ,MAChCC,EAAWyG,EAAMzG,SACjBqL,EAAc,IAAIrO,IAExBwF,EAAM5L,MAAK,SAAAU,GACV+T,EAAYtB,IAAIzS,EAAEuL,OAAO9C,KAAK6D,QAAQ,EAAKuH,SAAU,KACrDE,EAAYtB,IAAIzS,EAAEoL,OAAO3C,KAAK6D,QAAQ,EAAKuH,SAAU,QAItDrP,YAAO,gBAAgByN,KAAKR,EAAMhJ,MAClCjE,YAAO,gBAAgByN,KAAK6B,EAAOE,YACnCxP,YAAO,sBACLyN,KAAK6B,EAAM,GAAOrS,KAAI,SAAA0J,GAAC,OAAI,EAAK8I,UAAU9I,EAAG4I,EAAYhN,IAAIoE,OAAK3I,KAAK,OACzEgC,YAAO,oBAAoByN,KAA3B,UAAmCvJ,EAAnC,MACAlE,YAAO,qBACLyN,KAAK6B,EAAOpL,GAAUjH,KAAI,SAAA0J,GAAC,OAAI,EAAK8I,UAAU9I,EAAG4I,EAAYhN,IAAIoE,OAAK3I,KAAK,OAG7E,IAAM0R,EAAU1P,YAAO,mBACvB0P,EAAQ3T,MAAM,UAAW,SACzB,IAAM2R,EAAOgC,EAAQnH,OAAOoH,wBACxBC,EAAM3C,EAAMvR,EAAIuR,EAAMlT,OAAO,EAGhC6V,EADG3C,EAAMvR,EAAIgS,EAAK3T,OAAS8V,OAAOC,YAC5B7C,EAAMvR,EAAIuR,EAAMlT,OAAS2T,EAAK3T,OAE9BkT,EAAMvR,EAAIuR,EAAMlT,OAAO,EAG9B2V,EACE3T,MAAM,MADR,UACkB6T,EADlB,OAEE7T,MAAM,OAFR,UAEmBkR,EAAMxR,EAAE,GAF3B,SArEyB,wDAoBhBsU,EAAOC,GAChB,OAAGA,EACI,0CAAN,OAAiDD,EAAjD,WAEA,qCAAqCA,EAArC,aAxBwB,uCAiFzB/P,YAAO,mBAAmBjE,MAAM,UAAW,UAjFlB,+BAoFhB,IAAD,SAC4Bf,KAAKkP,MAAlCS,EADC,EACDA,MAAOlI,EADN,EACMA,QAAS4K,EADf,EACeA,UAEvB,OACC,yBACCb,UAAU,0BACVzQ,MAAO,CAAE0Q,SAAUhK,EAAQ3I,OAC3B4S,IAAK,SAAAnE,GAAI,OAAI,EAAKwE,KAAOxE,IAEzB,yBAAKpG,GAAG,wBACP,yBAAKA,GAAG,kBACP,yBAAKqK,UAAU,0BAA0BrK,GAAG,gBAC5C,yBAAKA,GAAG,gBACR,yBAAKqK,UAAU,qBAAf,QACA,yBAAKrK,GAAG,sBACR,yBAAKqK,UAAU,oBAAoBrK,GAAG,oBACtC,yBAAKA,GAAG,sBAET,kBAAC,EAAD,CACCwI,MAAOA,EACPlI,QAASA,EACT4K,UAAWA,EACXO,gBAAiB5S,KAAK4S,gBACtBC,eAAgB7S,KAAK6S,uBA3GA,GACDjB,IAAMC,YC4FlBxD,EAhGSY,YAAQ,iLA8BV,IAAD,EACOjP,KAAKkP,MAAvBS,EADW,EACXA,MAAOlI,EADI,EACJA,QACRrI,EAAOuQ,EAAM6D,UAEbzU,EAAS0I,EAAQ1I,OAAO,GACxBD,EAAQqS,KAAKrB,IAAIrI,EAAQ3I,MAAO,KAGhC2B,EACLgT,cACEC,OAAO,CAAC,OAAQ,UAChBC,MAAM,CAAC,EAAG7U,IACV8U,QAAQ,IAELqB,EAAQxB,cACZC,OAAOtU,EAAKkM,MACXnG,QAAO,SAAA3E,GAAC,MAAe,SAAXA,EAAE0J,QACdsD,MAAK,SAACpJ,EAAGK,GAAJ,OAAUA,EAAE4E,UAAYjF,EAAEiF,aAC/BpH,KAAI,SAAAzB,GAAC,OAAIA,EAAEyI,SACZ0K,MAAM,CAACrB,IAAUvT,EAAQuT,MAErB4C,EAASzB,cACbC,OAAOtU,EAAKkM,MACVnG,QAAO,SAAA3E,GAAC,MAAe,UAAXA,EAAE0J,QACdsD,MAAK,SAACpJ,EAAEK,GAAH,OAASA,EAAE4E,UAAYjF,EAAEiF,aAC9BpH,KAAI,SAAAzB,GAAC,OAAIA,EAAEyI,SACb0K,MAAM,CAACrB,IAAUvT,EAAQuT,MAErB6C,EAAQ1U,EAAE,QACV2U,EAAS3U,EAAE,SAYjB,OAVArB,EAAKkM,MAAMxJ,SAAQ,SAAAtB,GACH,SAAXA,EAAE0J,MACL1J,EAAEC,EAAI0U,EACN3U,EAAEE,EAAIuU,EAAMzU,EAAEyI,QAEdzI,EAAEC,EAAI2U,EACN5U,EAAEE,EAAIwU,EAAO1U,EAAEyI,UAIV,CACNqC,MAAOlM,EAAKkM,MACZI,MAAOtM,EAAKsM,SAzEgB,+BA6EpB,IACFjE,EAAWzH,KAAKkP,MAAhBzH,QAEP,OACC,kBAAC,EAAD,CACCrI,KAAMY,KAAKmU,mBACX9B,UAAWrS,KAAKkP,MAAMmD,UACtBtT,OAAQ0I,EAAQ1I,OAChBD,MAAO2I,EAAQ3I,MACfwT,OAAQ,GACRM,gBAAiB5S,KAAKkP,MAAM2D,eAC5BA,eAAgB7S,KAAKkP,MAAM2D,qBAxFA,GACDjB,IAAMC,YCP/BwD,E,4DAKLC,eAAgB,E,KAMhBC,0BAA2B,E,KAK3B/M,QAAU,K,KAKVwB,eAAiB,G,KAKjBvB,aAAe,G,KAKfyE,eAAiB,CAAC,KAAM,M,KAExBnO,OAAS,K,KAETD,MAAQ,K,KAgCR4L,qBAAuB8K,kBAAO,SAACzJ,EAAQH,GACtC,EAAKsB,eAAe,GAAKnB,EACzB,EAAKmB,eAAe,GAAKtB,K,uDAdfzE,GACVnH,KAAKwI,QAAUxI,KAAKgK,eAAeyL,MAAK,SAAAhV,GAAC,OAAIA,EAAE0G,KAAOA,O,2CAXtD,OAAOnH,KAAKgK,eAAe/H,KAAI,SAAAxB,GAAC,MAAK,CAAE5B,MAAO4B,EAAE0G,GAAI2G,MAAOrN,EAAEwJ,a,KA6B/DqE,mBAAS+G,EAAS,CACjBC,cAAe/G,aACfgH,yBAA0BhH,aAC1B/F,QAAS+F,aACTvE,eAAgBuE,aAChB9F,aAAc8F,aACdrB,eAAgBqB,aAChBxP,OAAQwP,aACRzP,MAAOyP,aACPmH,qBAAsBjH,aAGR4G,QCmCAM,EA5GI1G,YAAQ,kDAazB,aAAe,IAAD,8BACb,gBACK2G,gBAAkB,CACtB,aACA,SACA,aACA,UACA,cACA,WARY,EAbW,0DAgCxB5V,KAAKkP,MAAMzH,QAAQ8N,0BAA2B,IAhCtB,kCA2CbxJ,EAAQH,GAAS,IACrBnE,EAAWzH,KAAKkP,MAAhBzH,QAEHzH,KAAK4V,gBAAgB7I,QAAQtF,EAAQe,QAAQ0B,OAAS,IACzDzC,EAAQ8N,0BAA2B,EACnC9N,EAAQiD,qBAAqBqB,EAAOf,IAAKY,EAAOZ,QAhDzB,4CA4DF,IAAD,EACIhL,KAAKkP,MAAvBS,EADc,EACdA,MAAOlI,EADO,EACPA,QAEd,GAAIA,EAAQe,QAAS,CACpB,IAAM6J,EAAY5K,EAAQyF,eAAejL,KAAI,SAAAxB,GAAC,OAAIkP,EAAMjI,OAAOjH,MAE/D,OAAOgH,EAAQe,QAAQ0B,MACtB,IAAK,UACL,IAAK,UACJ,OAAO,kBAAC,EAAD,CAAiByF,MAAOA,EAAOlI,QAASA,EAAS4K,UAAWA,IACpE,IAAK,cACJ,OAAO,kBAAC,EAAD,CAAiB1C,MAAOA,EAAOlI,QAASA,EAAS4K,UAAWA,IACpE,QACC,OAAO,kBAAC,EAAD,CAAa1C,MAAOA,EAAOlI,QAASA,EAAS4K,UAAWA,QAzE1C,+BA8Ef,IAAD,SACiBrS,KAAKkP,MAAvBS,EADC,EACDA,MAAOlI,EADN,EACMA,QACV+J,EAAY,GAKhB,OAFAA,GAAa/J,EAAQ8N,yBAA2B,QAAU,WAGzD,yBACCpO,GAAG,wBACHqK,UAAWA,GAGV/J,EAAQ8N,0BACR,yBAAKpO,GAAG,wBAAwB0O,QAAS,kBAAM,EAAKC,gBACnD,kBAAC,IAAD,CAAazO,KAAK,YAGpB,kBAAC,EAAD,CACCsI,MAAOA,EACPlI,QAASA,EACTmI,YAAa,SAAC1P,EAAGiE,GAAJ,OAAU,EAAKyL,YAAY1P,EAAGiE,MAE3CnE,KAAK+V,2BArGgB,GACDnE,IAAMC,Y,0CCTXmE,I,qLAkBV,IAAD,EAC2ChW,KAAKkP,MAAhD/H,EADA,EACAA,GAAI8O,EADJ,EACIA,QAASlI,EADb,EACaA,SAAUD,EADvB,EACuBA,MAAOoI,EAD9B,EAC8BA,SAEtC,OACC,yBAAK1E,UAAU,+BACd,2BAAOrK,GAAIA,EAAI+C,KAAK,WAAW+L,QAASA,IAAW,EAAOC,SAAU,SAAAlV,GAAC,OAAIkV,EAASlV,EAAE4K,OAAOqK,UAAUlI,SAAUA,IAC/G,2BAAOoI,QAAShP,EAAIpG,MAAO,CAAEqV,WAAY,IAAMtI,Q,GAxBb8D,IAAMC,YCAvBwE,I,4LAQV,IAAD,EACkBrW,KAAKkP,MAAxBoH,EADC,EACDA,SAAUvV,EADT,EACSA,MAEjB,OACC,yBAAKyQ,UAAU,aAAazQ,MAAOA,GACjCuV,O,GAbkC1E,IAAMC,YCCxB0E,G,4KA6CL,IACPzI,EAAS9N,KAAKkP,MAAdpB,MAEP,GAAIA,EACH,OAAO,kBAAC,GAAD,KAAYA,K,+BAIX,IAAD,EACgE9N,KAAKkP,MAAtEhQ,EADC,EACDA,IAAK4Q,EADJ,EACIA,IAAK0G,EADT,EACSA,KAAMC,EADf,EACeA,YAAa5X,EAD5B,EAC4BA,MAAOkP,EADnC,EACmCA,SAAUmI,EAD7C,EAC6CA,SAAUnV,EADvD,EACuDA,MAE/D,OACC,oCACEf,KAAK0W,cACN,2BACCxM,KAAK,SACLhL,IAAKA,EACL4Q,IAAKA,EACL0G,KAAMA,EACNC,YAAaA,EACb5X,MAAOA,GAAS,GAChBkP,SAAUA,EACVmI,SAAU,SAAAlV,GAAC,OAAIkV,EAASS,OAAO3V,EAAE4K,OAAO/M,SACxCkC,MAAOA,EACPyQ,UAAU,+B,GArE2BI,IAAMC,WCG3B+E,G,uKAoCV,IAAD,EAUJ5W,KAAKkP,MARR+G,EAFO,EAEPA,QACApX,EAHO,EAGPA,MACAiP,EAJO,EAIPA,MACA2I,EALO,EAKPA,YACAvX,EANO,EAMPA,IACA6O,EAPO,EAOPA,SACA8I,EARO,EAQPA,gBACAC,EATO,EASPA,cAGD,OACC,yBAAKtF,UAAU,iCACd,kBAAC,GAAD,CACCrK,GAAG,wBACH8O,QAASA,EACTC,SAAUW,EACV/I,MAAOA,EACPC,SAAUA,IAEX,yBAAKyD,UAAU,wCACd,kBAAC,GAAD,CACCtS,IAAKA,EACLuX,YAAaA,EACb5X,MAAOA,EACPkP,SAAUA,IAAakI,EACvBC,SAAUY,U,GA/DkClF,IAAMC,W,kBCPlDkF,GAAS,IAAIC,O,QAAOC,GAwEXC,G,4MAvCdC,aAAe,SAAAC,GACd,IAAMC,EAAOD,EAAMxL,OAAO0L,MAAM,GAE5BD,IACH,EAAKnI,MAAMiI,aAAaE,GAExBN,GAAOQ,YAAYF,GACnBN,GAAOS,UAAY,SAACC,GACfA,EAAQrY,gBAAgBsY,OAC3B,EAAKC,SAAS,CAAEC,OAAO,IAGxB,EAAK1I,MAAM2I,YAAYJ,EAAQrY,S,4DAcjC,OADgBY,KAAKkP,MAAd0I,MACQ,uBAAGpG,UAAU,gBAAb,6BAA4D,O,+BAI3E,OACC,oCACC,2BAAOtH,KAAK,OAAOgM,SAAUlW,KAAKmX,eACjCnX,KAAK8X,mB,GA3DkBlG,IAAMC,WC8CnBkG,I,OA/CA9I,YAAQ,uKAeZ,IAAD,EACoCjP,KAAKkP,MAAzCrQ,EADA,EACAA,MAAOkP,EADP,EACOA,SAAUmI,EADjB,EACiBA,SAAUpI,EAD3B,EAC2BA,MAElC,OACC,yBAAK0D,UAAU,oBACd,kBAAC,GAAD,KAAY1D,GACZ,yBAAK0D,UAAU,0BACd,2BACCtH,KAAK,QACLhL,IAAK,EACL4Q,IAAK,EACL0G,KAAM,KACN3X,MAAOA,GAAS,GAChBkP,SAAUA,EACVmI,SAAU,SAAAlV,GAAC,OAAIkV,EAASlV,EAAE4K,OAAO/M,QACjC2S,UAAU,WACX,2BACCtH,KAAK,SACLhL,IAAK,EACL4Q,IAAK,EACL0G,KAAK,MACL3X,MAAOA,GAAS,GAChBkP,SAAUA,EACVmI,SAAU,SAAAlV,GAAC,OAAIkV,EAASlV,EAAE4K,OAAO/M,QACjC2S,UAAU,sBAvCM,GACDI,IAAMC,aCoQbmG,GAvPC/I,YAAQ,4MAqBtBkI,aAAe,SAAA/X,GAAI,OAAI,EAAK8P,MAAMS,MAAMvH,WAAY,GArB9B,EA+BtByP,YAAc,SAAAzY,GACPA,aAAgBsY,OACrB,EAAKxI,MAAMS,MAAMrG,KAAKlK,GAGvB,EAAK8P,MAAMS,MAAMvH,WAAY,GApCR,EA+CtB6P,gBAAkB,SAAAC,GAAM,OAAI,EAAKhJ,MAAMzH,QAAQ0Q,WAAWD,EAAOrZ,QA/C3C,EAwDtBuZ,uBAAyB,SAAAC,GAAQ,OAAI,EAAKnJ,MAAMzH,QAAQgB,aAAe4P,GAxDjD,EAmEtBC,YAAc,SAACC,EAAO1Z,GAAW,IACzB4I,EAAW,EAAKyH,MAAhBzH,QACHA,EAAQe,UACXf,EAAQe,QAAQE,OAAO6P,GAAS1Z,IAtEZ,EAiFtB2Z,kBAAoB,SAAA3Z,GAAK,OAAI,EAAKyZ,YAAY,YAAazZ,IAjFrC,EA0FtB4Z,yBAA2B,SAAAxC,GAAO,OAAI,EAAKqC,YAAY,mBAAoBrC,IA1FrD,EAmGtByC,uBAAyB,SAAA7Z,GAAK,OAAI,EAAKyZ,YAAY,iBAAkBzZ,IAnG/C,EA4GtB8Z,4BAA8B,SAAA1C,GAAO,OAAI,EAAKqC,YAAY,sBAAuBrC,IA5G3D,EAqHtB2C,yBAA2B,SAAA/Z,GAAK,OAAI,EAAKyZ,YAAY,mBAAoBzZ,IArHnD,EA8HtBga,4BAA8B,SAAAha,GAAK,OAAI,EAAKyZ,YAAY,sBAAuBzZ,IA9HzD,mEAwIA,IACd4I,EAAWzH,KAAKkP,MAAhBzH,QAEP,GAAIA,EAAQe,SAAoC,YAAzBf,EAAQe,QAAQ0B,KAAoB,CAAC,IACpDxB,EAAUjB,EAAQe,QAAlBE,OAEP,OACC,yBAAK8I,UAAU,eACd,yBAAKA,UAAU,gBACd,kBAAC,GAAD,CACCtS,IAAK,EACLsX,KAAM,EACN3X,MAAO6J,EAAO7C,iBACdqQ,SAAUlW,KAAK4Y,yBACf9K,MAAM,8BAGR,yBAAK0D,UAAU,gBACd,kBAAC,GAAD,CACC1D,MAAM,8BACNjP,MAAO6J,EAAO5C,oBACdoQ,SAAUlW,KAAK6Y,mCA7JC,+BAqKZ,IAAD,EACiB7Y,KAAKkP,MAAvBS,EADC,EACDA,MAAOlI,EADN,EACMA,QACRqR,EAAe,CAAEha,MAAM,QAAD,OAAU2I,EAAQ6N,cAAgB,QAAU,OAA5C,aACtByD,EAAiB,CAAEC,QAASvR,EAAQ6N,cAAgB,QAAU,QAC9D5M,EAASjB,EAAQe,QAAUf,EAAQe,QAAQE,OAAS,GAE1D,OACC,yBAAK8I,UAAU,oBAAoBzQ,MAAO+X,GACzC,yBAAKtH,UAAU,0BACd,yBACCqE,QAAS,kBAAMpO,EAAQ6N,eAAiB7N,EAAQ6N,eAChD9D,UAAU,+BAEV,kBAAC,IAAD,CAAQnK,KAAK,SAASsK,MAAM,cAG9B,yBAAK5Q,MAAOgY,GACX,kBAAC,GAAD,CAAWhY,MAAO,CAAEkY,UAAW,IAA/B,kBACA,yBAAKzH,UAAU,eACd,kBAAC,GAAD,CAAe2F,aAAcnX,KAAKmX,aAAcU,YAAa7X,KAAK6X,cACjElI,EAAMvH,WACN,kBAAC,IAAD,CAAYf,KAAM,GAAIsK,MAAO,UAAWuH,IAAK,wBAG/C,yBAAK1H,UAAU,eACd,yBAAKA,UAAU,gBACd,kBAAC,GAAD,0BACA,kBAAC,IAAD,CACC5D,QAASnG,EAAQiO,qBACjBQ,SAAUlW,KAAKiY,gBACflK,SAAU4B,EAAMvH,aAGlB,yBAAKoJ,UAAU,gBACd,kBAAC,GAAD,CACC3S,MAAO6J,EAAOnD,UACdwI,SAAU4B,EAAMvH,YAAcX,EAAQe,QACtC0N,SAAUlW,KAAKwY,kBACf1K,MAAM,sBAIR9N,KAAKmZ,qBACN,yBAAK3H,UAAU,eACd,yBAAKA,UAAU,gBACd,kBAAC,GAAD,CACCyE,QAASvN,EAAOhD,iBAChB7G,MAAO6J,EAAOjD,eACdsI,SAAU4B,EAAMvH,YAAcX,EAAQe,QACtCqO,gBAAiB7W,KAAKyY,yBACtB3B,cAAe9W,KAAK0Y,uBACpBxZ,IAAK,EACL4O,MAAM,gDACN2I,YAAY,8BAGd,yBAAKjF,UAAU,gBACd,kBAAC,GAAD,CACCrK,GAAG,qBACH8O,QAASvN,EAAOlD,oBAChBuI,SAAU4B,EAAMvH,YAAcX,EAAQe,QACtC0N,SAAUlW,KAAK2Y,4BACf7K,MAAM,gCAIT,kBAAC,GAAD,wBACA,kBAAC,IAAD,CACCsL,MAAOzJ,EAAMf,aACbyK,cAAe5R,EAAQgB,aACvByN,SAAUlW,KAAKoY,uBACfkB,iBAAiB,QACjBC,WAAY,GACZC,iBAAiB,+BA9OA,GACD5H,IAAMC,YCjBvBpK,GAAU,IAAI4N,EACd1F,GAAQ,IAAInI,EAAeC,IAEjC,SAASgS,GAAU3a,EAAOC,GACzB0I,GAAQ3I,MAAQA,EAChB2I,GAAQ1I,OAASA,EAeH2a,OAZf,WACC,OACC,yBAAKlI,UAAU,OACd,kBAAC,GAAD,CAAS7B,MAAOA,GAAOlI,QAASA,KAChC,yBAAK+J,UAAU,YACd,kBAAC,EAAD,CAAY7B,MAAOA,GAAOlI,QAASA,KACnC,kBAAC,IAAD,CAAqBkS,aAAW,EAACC,cAAY,EAACH,SAAUA,QCbxCI,QACW,cAA7BhF,OAAOiF,SAASC,UAEe,UAA7BlF,OAAOiF,SAASC,UAEhBlF,OAAOiF,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAAShK,SAASiK,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5T,MAAK,SAAA6T,GACjCA,EAAaC,iB,iBEnInB,IAkBIC,EAlBe,WAElBC,KAAKlD,UAAY,SAASC,GACzB,IAAMkD,EAAS,IAAIC,WAEnBD,EAAOE,iBAAiB,QAAQ,SAAAvR,GAC/B,IACC,IAAMlK,EAAO0b,KAAKC,MAAMzR,EAAKsC,OAAOoP,QACpCzD,YAAYnY,GACX,MAAO6b,GACR1D,YAAY0D,OAIdN,EAAOO,mBAAmBzD,EAAQrY,QAId+b,WACtBV,EAAOA,EAAKW,UAAUX,EAAK1N,QAAQ,KAAK,EAAG0N,EAAKY,YAAY,MAE5D,IAAMC,EAAO,IAAIC,KAAK,CAACd,GAAO,CAACvQ,KAAM,2BAC/BsR,EAAeC,IAAIC,gBAAgBJ,GAEzCK,EAAOC,QAAUJ,G","file":"static/js/main.d0f5abca.chunk.js","sourcesContent":["import * as d3 from 'd3';\n\nvar viz = { version: \"1.1.8\" };\n\nviz.bP = function(){\n\tvar keyPrimary, keySecondary, value\n\t,width, height, orient, barSize, min, pad\n\t,data, fill, g, edgeOpacity, duration\n\t,sortPrimary, sortSecondary, edgeMode\n\t;\n\tfunction bP(_){\n\tg=_;\n\t\t\t_.each(function() {\n\t\t\t\tvar g = d3.select(this);\n\t\tvar bars = bP.bars();\n\t\n\t\tvar s = g.selectAll(\".subBars\")\n\t\t\t\t.data(bars.subBars)\n\t\t\t\t.enter()\n\t\t.append(\"g\")\n\t\t.attr(\"transform\", function(d){ return \"translate(\"+d.x+\",\"+d.y+\")\";})\n\t\t\t\t.attr(\"class\",\"subBars\")\n\t\t\t\t.append(\"rect\")\n\t\t\t\t.attr(\"x\",fx).attr(\"y\",fy).attr(\"width\",fw).attr(\"height\",fh);\n\t\t\n\t\t\t\tif(typeof fill !==\"undefined\") s.style(\"fill\", function(d){ return fill(d); });\n\t\t\t\n\t\t\t\tvar e = g.selectAll(\".edges\")\n\t\t\t\t.data(bars.edges)\n\t\t\t\t.enter()\n\t\t\t\t.append(\"path\")\n\t\t\t\t.attr(\"class\",\"edges\")\n\t\t\t\t.attr(\"d\",function(d){ return d.path; })\n\t\t.style(\"fill-opacity\",bP.edgeOpacity());\n\t\t\t\t\n\t\t\t\tif(typeof fill !==\"undefined\") e.style(\"fill\", function(d){ return fill(d); });\n\t\t\n\t\t\t\tg.selectAll(\".mainBars\")\n\t\t\t\t.data(bars.mainBars)\n\t\t\t\t.enter()\n\t\t.append(\"g\")\n\t\t.attr(\"transform\", function(d){ return \"translate(\"+d.x+\",\"+d.y+\")\";})\n\t\t\t\t.attr(\"class\",\"mainBars\")\n\t\t\t\t.append(\"rect\")\n\t\t\t\t.attr(\"x\",fx).attr(\"y\",fy).attr(\"width\",fw).attr(\"height\",fh)\n\t\t.style(\"fill-opacity\",0)\n\t\t// .on(\"mouseover\",bP.mouseover)\n\t\t// .on(\"mouseout\",bP.mouseout);\n\t});\n\t}\n\tbP.data = function(_){\n\tif(!arguments.length) return data;\n\tdata = _;\n\treturn bP;\n\t}\n\tbP.fill = function(_){\n\tif(!arguments.length) return fill;\n\tfill = _;\n\treturn bP;\n\t}\n\tbP.keyPrimary = function(_){ \n\tif(!arguments.length) return typeof keyPrimary !== \"undefined\" ? keyPrimary : function(d){ return d[0]; } ;\n\tkeyPrimary = _;\n\treturn bP;\t\t\n\t}\n\tbP.sortPrimary = function(_){ \n\tif(!arguments.length) return typeof sortPrimary !== \"undefined\" ? sortPrimary : d3.ascending ;\n\tsortPrimary = _;\n\treturn bP;\t\t\n\t}\n\tbP.keySecondary = function(_){ \n\tif(!arguments.length) return typeof keySecondary !== \"undefined\" ? keySecondary : function(d){ return d[1]; };\n\tkeySecondary = _;\n\treturn bP;\t\t\n\t}\n\tbP.sortSecondary = function(_){ \n\tif(!arguments.length) return typeof sortSecondary !== \"undefined\" ? sortSecondary : d3.ascending;\n\tsortSecondary = _;\n\treturn bP;\t\t\n\t}\t  \n\tbP.value = function(_){ \n\tif(!arguments.length) return typeof value !== \"undefined\" ? value : function(d){ return d[2]; };\n\tvalue = _;\n\treturn bP;\t\t\n\t}\t  \n\tbP.width = function(_){\n\tif(!arguments.length) return typeof width !== \"undefined\" ? width : 400;\n\twidth = _;\n\treturn bP;\n\t}\n\tbP.height = function(_){\n\tif(!arguments.length) return typeof height !== \"undefined\" ? height : 600;\n\theight = _;\n\treturn bP;\n\t}\n\tbP.barSize = function(_){\n\tif(!arguments.length) return typeof barSize !== \"undefined\" ? barSize : 35;\n\tbarSize = _;\n\treturn bP;\n\t}\n\tbP.min = function(_){\n\tif(!arguments.length) return typeof min !== \"undefined\" ? min : 0;\n\tmin = _;\n\treturn bP;\n\t}\n\tbP.orient = function(_){\n\tif(!arguments.length) return typeof orient !== \"undefined\" ? orient : \"vertical\";\n\torient = _;\n\treturn bP;\n\t}\n\tbP.pad = function(_){\n\tif(!arguments.length) return typeof pad !== \"undefined\" ? pad : 0;\n\tpad = _;\n\treturn bP;\n\t}\n\tbP.duration = function(_){\n\tif(!arguments.length) return typeof duration !== \"undefined\" ? duration : 500;\n\tduration = _;\n\treturn bP;\n\t}\n\tbP.edgeOpacity = function(_){\n\tif(!arguments.length) return typeof edgeOpacity !== \"undefined\" ? edgeOpacity : .4;\n\tedgeOpacity = _;\n\treturn bP;\n\t}\n\tbP.edgeMode = function(_){\n\tif(!arguments.length) return typeof edgeMode !== \"undefined\" ? edgeMode : \"curved\";\n\tedgeMode = _;\n\treturn bP;\n\t}\n\tbP.bars = function(mb){\n\tvar mainBars={primary:[], secondary:[]};\n\tvar subBars= {primary:[], secondary:[]};\n\tvar key ={primary:bP.keyPrimary(), secondary:bP.keySecondary() };\n\tvar _or = bP.orient();\n\t\n\tcalculateMainBars(\"primary\");\n\tcalculateMainBars(\"secondary\");\t\n\tcalculateSubBars(\"primary\");\t\n\tcalculateSubBars(\"secondary\");\n\tfloorMainBars(); // ensure that main bars is atleast of size mi.n\n\t\n\treturn {\n\t\t\tmainBars:mainBars.primary.concat(mainBars.secondary)\n\t\t,subBars:subBars.primary.concat(subBars.secondary)\n\t\t,edges:calculateEdges()\n\t};\n\n\tfunction isSelKey(d, part){ \n\t\treturn (typeof mb === \"undefined\" || mb.part === part) || (key[mb.part](d) === mb.key);\n\t}\n\tfunction floorMainBars(){\n\t\tvar m =bP.min()/2;\n\t\t\n\t\tmainBars.primary.forEach(function(d){\n\t\t\tif(d.height<m) d.height=m;\n\t\t});\n\t\tmainBars.secondary.forEach(function(d){\n\t\t\tif(d.height<m) d.height=m;\n\t\t});\n\t}\n\tfunction calculateMainBars(part){\n\t\t\t;\n\t\tfunction v(d){ return isSelKey(d, part) ? bP.value()(d): 0;};\n\n\t\tvar ps = d3.nest()\n\t\t\t.key(part===\"primary\"? bP.keyPrimary():bP.keySecondary())\n\t\t\t.sortKeys(part===\"primary\"? bP.sortPrimary():bP.sortSecondary())\n\t\t\t.rollup(function(d){ return d3.sum(d,v); })\n\t\t\t.entries(bP.data())\n\t\t;\n\t\t\n\t\tvar bars = bpmap(ps, bP.pad(), bP.min(), 0, _or===\"vertical\" ? bP.height() : bP.width());\n\t\tvar bsize = bP.barSize();\n\t\tps.forEach(function(d,i){ \n\t\t\tmainBars[part].push({\n\t\t\t\t\tx:_or===\"horizontal\"? (bars[i].s+bars[i].e)/2 : (part===\"primary\" ? bsize/2 : bP.width()-bsize/2)\n\t\t\t\t,y:_or===\"vertical\"? (bars[i].s+bars[i].e)/2 : (part===\"primary\" ? bsize/2 : bP.height()-bsize/2)\n\t\t\t\t,height:_or===\"vertical\"? (bars[i].e - bars[i].s)/2 : bsize/2\n\t\t\t\t,width: _or===\"horizontal\"? (bars[i].e - bars[i].s)/2 : bsize/2\n\t\t\t\t,part:part\n\t\t\t\t,key:d.key\n\t\t\t\t,value:d.value\n\t\t\t\t,percent:bars[i].p\n\t\t\t});\n\t\t});\n\t}\n\tfunction calculateSubBars(part){\n\t\tfunction v(d){ return isSelKey(d, part) ? bP.value()(d): 0;};\n\t\t\t\t\n\t\tvar map = d3.map(mainBars[part], function(d){ return d.key});\n\t\t\n\t\tvar ps = d3.nest()\n\t\t\t.key(part===\"primary\"? bP.keyPrimary():bP.keySecondary())\n\t\t\t.sortKeys(part===\"primary\"? bP.sortPrimary():bP.sortSecondary())\n\t\t\t.key(part===\"secondary\"? bP.keyPrimary():bP.keySecondary())\n\t\t\t.sortKeys(part===\"secondary\"? bP.sortPrimary():bP.sortSecondary())\n\t\t\t.rollup(function(d){ return d3.sum(d,v); })\n\t\t\t.entries(bP.data());\n\n\t\tps.forEach(function(d){ \n\t\t\tvar g= map.get(d.key); \n\t\t\tvar bars = bpmap(d.values, 0, 0\n\t\t\t\t\t,_or===\"vertical\" ? g.y-g.height : g.x-g.width\n\t\t\t\t\t,_or===\"vertical\" ? g.y+g.height : g.x+g.width);\n\n\t\t\tvar bsize = bP.barSize();\t\t\t\n\t\t\td.values.forEach(function(t,i){ \n\t\t\t\tsubBars[part].push({\n\t\t\t\t\t\tx:_or===\"vertical\"? part===\"primary\" ? bsize/2 : bP.width()-bsize/2 : (bars[i].s+bars[i].e)/2\n\t\t\t\t\t,y:_or===\"horizontal\"? part===\"primary\" ? bsize/2 : bP.height()-bsize/2 : (bars[i].s+bars[i].e)/2\n\t\t\t\t\t,height:(_or===\"vertical\"? bars[i].e - bars[i].s : bsize)/2\n\t\t\t\t\t,width: (_or===\"horizontal\"? bars[i].e - bars[i].s : bsize)/2\n\t\t\t\t\t,part:part\n\t\t\t\t\t,primary:part===\"primary\"? d.key : t.key\n\t\t\t\t\t,secondary:part===\"primary\"? t.key : d.key\t\n\t\t\t\t\t,value:t.value\n\t\t\t\t\t,percent:bars[i].p*g.percent\n\t\t\t\t\t,index: part===\"primary\"? d.key+\"|\"+t.key : t.key+\"|\"+d.key //index \n\t\t\t\t});\n\t\t\t});\t\t  \n\t\t});\n\t}\n\tfunction calculateEdges(){\t\n\t\tvar map=d3.map(subBars.secondary,function(d){ return d.index;});\n\t\tvar eMode= bP.edgeMode();\n\t\t\n\t\treturn subBars.primary.map(function(d){\n\t\t\tvar g=map.get(d.index);\n\t\t\treturn {\n\t\t\t\t\tpath:_or === \"vertical\" \n\t\t\t\t\t? edgeVert(d.x+d.width,d.y+d.height,g.x-g.width,g.y+g.height,g.x-g.width,g.y-g.height,d.x+d.width,d.y-d.height)\n\t\t\t\t\t: edgeHoriz(d.x-d.width,d.y+d.height,g.x-g.width,g.y-g.height,g.x+g.width,g.y-g.height,d.x+d.width,d.y+d.height)\n\t\t\t\t,primary:d.primary\n\t\t\t\t,secondary:d.secondary\n\t\t\t\t,value:d.value\n\t\t\t\t,percent:d.percent\n\t\t\t}\n\t\t});\n\t\tfunction edgeVert(x1,y1,x2,y2,x3,y3,x4,y4){\n\t\t\tif(eMode===\"straight\") return [\"M\",x1,\",\",y1,\"L\",x2,\",\",y2,\"L\",x3,\",\",y3,\"L\",x4,\",\",y4,\"z\"].join(\"\")\n\t\t\tvar mx1=(x1+x2)/2,mx3=(x3+x4)/2;\n\t\t\treturn [\"M\",x1,\",\",y1,\"C\",mx1,\",\",y1,\" \",mx1,\",\",y2,\",\",x2,\",\",y2,\"L\"\n\t\t\t\t\t,x3,\",\",y3,\"C\",mx3,\",\",y3,\" \",mx3,\",\",y4,\",\",x4,\",\",y4,\"z\"].join(\"\");\n\t\t}\n\t\tfunction edgeHoriz(x1,y1,x2,y2,x3,y3,x4,y4){\n\t\t\tif(eMode===\"straight\") return [\"M\",x1,\",\",y1,\"L\",x2,\",\",y2,\"L\",x3,\",\",y3,\"L\",x4,\",\",y4,\"z\"].join(\"\")\n\t\t\tvar my1=(y1+y2)/2,my3=(y3+y4)/2;\n\t\t\treturn [\"M\",x1,\",\",y1,\"C\",x1,\",\",my1,\" \",x2,\",\",my1,\",\",x2,\",\",y2,\"L\"\n\t\t\t\t\t,x3,\",\",y3,\"C\",x3,\",\",my3,\" \",x4,\",\",my3,\",\",x4,\",\",y4,\"z\"].join(\"\");\n\t\t}\n\t}\n\tfunction bpmap(a/*array*/, p/*pad*/, m/*min*/, s/*start*/, e/*end*/){\n\t\tvar r = m/(e-s-2*a.length*p); // cut-off for ratios\n\t\tvar ln =0, lp=0, t=d3.sum(a,function(d){ return d.value;}); // left over count and percent.\n\t\ta.forEach(function(d){ if(d.value < r*t ){ ln+=1; lp+=d.value; }})\n\t\tvar o= t < 1e-5 ? 0:(e-s-2*a.length*p-ln*m)/(t-lp); // scaling factor for percent.\n\t\tvar b=s, ret=[];\n\t\ta.forEach(function(d){ \n\t\t\tvar v =d.value*o; \n\t\t\tret.push({\n\t\t\t\t\ts:b+p+(v<m?.5*(m-v): 0)\n\t\t\t\t,e:b+p+(v<m? .5*(m+v):v)\n\t\t\t\t,p:t < 1e-5? 0:d.value/t\n\t\t\t}); \n\t\t\tb+=2*p+(v<m? m:v); \n\t\t});\n\t\t\n\t\treturn ret;\n\t}\t  \n\t}\t  \n\tbP.update = function(_data){\n\t\tdata = _data;\n\tvar b1 = bP.bars();\n\tvar dur = bP.duration();\n\t\n\tg.selectAll(\".subBars\").data(b1.subBars).transition().duration(dur)\n\t\t.attr(\"transform\", function(d){ return \"translate(\"+d.x+\",\"+d.y+\")\";})\n\t\t\t\t.select(\"rect\")\n\t\t\t\t.attr(\"x\",fx).attr(\"y\",fy).attr(\"width\",fw).attr(\"height\",fh);\n\t\t\t\t\t\t\n\t\t\tg.selectAll(\".edges\").data(b1.edges).transition().duration(dur)\n\t\t\t\t.attr(\"d\",function(d){ return d.path; })\n\t\t.style(\"fill-opacity\",bP.edgeOpacity())\n\t\t.style(\"visibility\", \"visible\")\n\t\t\t\t\t\n\t\t\tg.selectAll(\".mainBars\").data(b1.mainBars).transition().duration(dur)\n\t\t.attr(\"transform\", function(d){ return \"translate(\"+d.x+\",\"+d.y+\")\";})\n\t\t\t\t.select(\"rect\")\n\t\t\t\t.attr(\"x\",fx).attr(\"y\",fy).attr(\"width\",fw).attr(\"height\",fh)\n\t\t// .style(\"fill-opacity\",0)\n\t\t.style(\"visibility\", \"hidden\")\n\t}\n\tbP.mouseover = function(d){\n\t\tvar newbars = bP.bars(d);\n\t\tg.selectAll(\".mainBars\").filter(function(r){ return r.part===d.part && r.key === d.key})\n\t\t.select(\"rect\").style(\"stroke-opacity\", 1);\n\t\t\n\t\tg.selectAll(\".subBars\").data(newbars.subBars)\n\t\t.transition().duration(bP.duration())\n\t\t.attr(\"transform\", function(d){ return \"translate(\"+d.x+\",\"+d.y+\")\";})\n\t\t.select(\"rect\").attr(\"x\",fx).attr(\"y\",fy).attr(\"width\",fw).attr(\"height\",fh);\n\t\t\n\t\tvar e = g.selectAll(\".edges\")\n\t\t.data(newbars.edges);\n\t\t\n\t\te.filter(function(t){ return t[d.part] === d.key;})\n\t\t.transition().duration(bP.duration())\n\t\t.style(\"fill-opacity\",bP.edgeOpacity())\n\t\t.style(\"visibility\", \"visible\")\n\n\t\t.attr(\"d\",function(d){ return d.path});\t\n\t\t\n\t\te.filter(function(t){ return t[d.part] !== d.key;})\n\t\t.transition().duration(bP.duration())\n\t\t// .style(\"fill-opacity\",0)\n\t\t.style(\"visibility\", \"hidden\")\n\t\t.attr(\"d\",function(d){ return d.path});\t\n\t\t\n\t\tg.selectAll(\".mainBars\").data(newbars.mainBars)\n\t\t.transition().duration(bP.duration())\n\t\t.attr(\"transform\", function(d){ return \"translate(\"+d.x+\",\"+d.y+\")\";})\n\t\t.select(\"rect\").attr(\"x\",fx).attr(\"y\",fy).attr(\"width\",fw).attr(\"height\",fh)\n\t}\n\tbP.mouseout = function(d){\n\t\tvar newbars = bP.bars();\n\t\t\t\t\t\n\t\tg.selectAll(\".mainBars\").filter(function(r){ return r.part===d.part && r.key === d.key})\n\t\t.select(\"rect\").style(\"stroke-opacity\", 0);\n\t\t\n\t\tg.selectAll(\".subBars\").data(newbars.subBars)\n\t\t.transition().duration(bP.duration())\n\t\t.attr(\"transform\", function(d){ return \"translate(\"+d.x+\",\"+d.y+\")\";})\n\t\t.select(\"rect\").attr(\"x\",fx).attr(\"y\",fy).attr(\"width\",fw).attr(\"height\",fh);\n\t\t\n\t\tg.selectAll(\".edges\").data(newbars.edges)\n\t\t.transition().duration(bP.duration())\n\t\t.style(\"fill-opacity\",bP.edgeOpacity())\n\t\t.style(\"visibility\", \"visible\")\n\t\t.attr(\"d\",function(d){ return d.path});\t\n\t\t\n\t\tg.selectAll(\".mainBars\").data(newbars.mainBars)\n\t\t.transition().duration(bP.duration())\n\t\t.attr(\"transform\", function(d){ return \"translate(\"+d.x+\",\"+d.y+\")\";})\n\t\t.select(\"rect\").attr(\"x\",fx).attr(\"y\",fy).attr(\"width\",fw).attr(\"height\",fh);\n\t}\n\tfunction fx(d){ return -d.width}\n\tfunction fy(d){ return -d.height}\n\t\tfunction fw(d){ return 2*d.width}\n\t\tfunction fh(d){ return 2*d.height}\n\t\n\treturn bP;\n}\t\n\nexport default viz;\n","import { computed, decorate, flow, observable } from 'mobx';\nimport { asyncComputed } from 'computed-async-mobx';\n\n// Default params of some scoring types\nconst DEFAULT_PARAMS = {\n\tattr_matching: {\n\t\tthreshold: 0,\n\t\tdisplayOnlyFrameSet: true,\n\t\tsankeyMaxEdges: null,\n\t\tlimitSankeyEdges: false,\n\t},\n\tlu_wordnet: {\n\t\tthreshold: 0.4,\n\t\tdisplayOnlyFrameSet: false,\n\t\tsankeyMaxEdges: null,\n\t\tlimitSankeyEdges: false,\n\t},\n\tlu_muse: {\n\t\tthreshold: 0.75,\n\t\tdisplayOnlyFrameSet: false,\n\t\tsankeyMaxEdges: 5,\n\t\tlimitSankeyEdges: true,\n\t\tneighborhoodSize: 5,\n\t\tsimilarityThreshold: 0.3,\n\t},\n\tlu_mean_muse: {\n\t\tthreshold: 0.85,\n\t\tdisplayOnlyFrameSet: false,\n\t\tsankeyMaxEdges: 5,\n\t\tlimitSankeyEdges: true,\n\t},\n\tlu_bert: {\n\t\tthreshold: 0.4,\n\t\tdisplayOnlyFrameSet: false,\n\t\tsankeyMaxEdges: 5,\n\t\tlimitSankeyEdges: true,\n\t\tneighborhoodSize: 5,\n\t\tsimilarityThreshold: 0.3,\n\t},\n}\n\nconst FE_SCORING_TYPES = new Set([\n\t\"fe_matching\",\n\t\"muse_fe_matching\",\n])\n\nconst LU_SCORING_TYPES = new Set([\n\t\"lu_wordnet\",\n\t\"synset\",\n\t\"synset_inv\",\n\t\"lu_muse\",\n\t\"lu_bert\",\n\t\"lu_mean_muse\",\n])\n\n/**\n * Awaits until main thread is free again.\n */\nconst oneMoment = () => new Promise(resolve => setTimeout(resolve))\n\n/**\n * Computes the diagram edges based on the alignment scores.\n * \n * @method\n * @param {Object} data input alignment data.\n * @returns {Array} edges of the sankey diagram with source, target and size.\n */\nconst loadEdges = async (data) => {\n\tconst edges = {}\n\tlet iter = 0\n\tlet then = performance.now()\n\n\tfor (let ai = 0; ai < data.alignments.length; ai++ ){\n\t\tlet scores = data.alignments[ai].data\n\t\tlet edgeArray = []\n\t\n\t\tif (scores) {\n\t\t\tfor (let i = 0; i < scores.length; ++i) {\n\t\t\t\tfor (let j = 0; j < scores[i].length; ++j) {\n\t\t\t\t\tlet value = scores[i][j]\n\t\n\t\t\t\t\tif (value > 0) {\n\t\t\t\t\t\tedgeArray.push([data.indices[0][i], data.indices[1][j], value])\n\t\t\t\t\t}\n\n\t\t\t\t\tif (++iter % 1000 === 0) {\n\t\t\t\t\t\tlet now = performance.now()\n\t\t\t\t\t\tif (now - then > 100) {\n\t\t\t\t\t\t\tawait oneMoment()\n\t\t\t\t\t\t\tthen = performance.now()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tedges[data.alignments[ai].id] = edgeArray;\n\t\t}\n\t}\n\n\treturn edges;\n}\n\n/**\n * Check if two sets are equal in the sense that they have a matching set of\n * values.\n *\n * @param {Set} a \n * @param {Set} b\n * @returns {Boolean} \n */\nconst areSetsEqual = (a, b) => (\n\t(a.size === b.size) ? \n\t[...a].every( value => b.has(value) ) : false\n);\n\n/**\n * MobX store for alignment data of a specific FrameNet database against\n * Berkeley FrameNet.\n */\nclass AlignmentStore {\n\n\t/**\n\t * Name of the FrameNet database of loaded alignemnt.\n\t */\n\tfndb\n\n\t/**\n\t * Language of this.fndb, aka, L2.\n\t */\n\tlanguage\n\n\t/**\n\t * Dictionary to hold multiple lists of non-zero alignment score between two\n\t * frames, the key for each list is a string representing a scoring technique.\n\t */\n\tedges = {}\n\n\t/**\n\t * String indices of the scoring matrix of shape (M, N) where M is the number\n\t * of english frames e N the number of L2 frames.\n\t */\n\tindices = []\n\n\t/**\n\t * Frame data dictionary with global ids as keys.\n\t */\n\tframes = {}\n\n\t/**\n\t * Frame data dictionary with frame names + language as keys.\n\t */\n\tframesByName = {}\n\n\t/**\n\t * Mapping of LU names to a list of relevant synsets.\n\t */\n\tsynsetsByLU = {}\n\n\t/**\n\t * Synset data dictionary with synset ids as keys.\n\t */\n\tsynsetData = {}\n\n\t/**\n\t * Mapping of english LU names to MUSE word vectors ids in L2 space.\n\t */\n\tmuseVectorIdsByLU = []\n\n\t/**\n\t * Dictionary of words with MUSE vector ids as keys.\n\t */\n\tmuseWordsByVectorId = []\n\n\t/**\n\t * Mapping of english LU names to BERT word vectors ids in L2 space.\n\t */\n\tbertVectorIdsByLU = []\n\n\t/**\n\t * Dictionary of words with BERT vector ids as keys.\n\t */\n\tbertWordsByVectorId = []\n\n\t/**\n\t * Dictionary used for caching the vectors of frames.\n\t */\n\tframeVectorCache = {}\n\n\t/**\n\t * Object used to store the values of the parameters used in the most recent\n\t * visualization.\n\t */\n\tpreviousParams = {}\n\n\t/**\n\t * Indicates whether the user needs to wait for some heavy operation.\n\t */\n\tisLoading = false\n\n\tconstructor(uiState) {\n\t\tthis.uiState = uiState;\n\t}\n\n\tasyncSankeyData = asyncComputed([], 200, async () => {\n\t\tconst state = this.uiState;\n\t\tconst {scoring, sankeyFrames} = state;\n\t\t\n\t\tif (scoring) {\n\t\t\tconst frames = this.frames;\n\t\t\tconst {\n\t\t\t\tdisplayOnlyFrameSet,\n\t\t\t\tthreshold,\n\t\t\t\t// eslint-disable-next-line no-unused-vars\n\t\t\t\tneighborhoodSize, similarityThreshold, limitSankeyEdges, sankeyMaxEdges\n\t\t\t} = scoring.params;\n\n\t\t\tawait new Promise(resolve => setTimeout(resolve, 1000))\n\t\t\tconst frameSet = new Set(sankeyFrames.map(x => x.id));\n\t\t\tconst filterFn = displayOnlyFrameSet\n\t\t\t\t? x => frameSet.has(x[0]) && frameSet.has(x[1]) && x[2] >= threshold\n\t\t\t\t: x => (frameSet.has(x[0]) || frameSet.has(x[1])) && x[2] >= threshold;\n\t\t\tconst edges = await this.getEdges(frameSet);\n\t\t\tconst filtered = edges.filter(filterFn);\n\t\t\tconst pruned = this.pruneEdges(filtered)\n\t\t\t\t.map(x => [\n\t\t\t\t\tframes[x[0]].name + '.' + frames[x[0]].language,\n\t\t\t\t\tframes[x[1]].name + '.' + frames[x[1]].language,\n\t\t\t\t\tx[2],\n\t\t\t\t]);\n\n\t\t\treturn pruned\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t})\n\n\t/**\n\t * Returns the edges of a sankey diagram of the stored alignment respecting\n\t * UI params. \n\t * \n\t * @public\n\t * @method\n\t * @returns {Array} edges of the sankey diagram with source, target and size.\n\t */\n\tget sankeyData () {\n\t\treturn this.asyncSankeyData.get();\n\t}\n\n\t/**\n\t * Indicates whether some heavy edge computation is happening.\n\t */\n\tget isComputingSankey() {\n\t\treturn this.asyncSankeyData.busy;\n\t}\n\n\t/**\n\t * Returns indices of lexical frames derived from this.indices.\n\t * \n\t * @public\n\t * @method\n\t * @returns {Array[Array[string]]} 2-dimension array of index ids.\n\t */\n\tget lexicalIndices() {\n\t\treturn this.indices.map(i => i.filter(f => this.frames[f].LUs.length > 0));\n\t}\n\n\t/**\n\t * Returns a sorted list of frames present in this alignment indicating if\n\t * they can be selected for visualization. This method sets the \"disabled\"\n\t * attribute for all options based on the selected scoring technique. For\n\t * example: If the selected scoring depends on LUs but the Frame has none, it\n\t * will be disabled in the selection widget.\n\t * \n\t * @public\n\t * @method\n\t * @returns {Array} english + L2 frames in \"Select\" components option format.\n\t */\n\tget frameOptions() {\n\t\tconst {scoring} = this.uiState;\n\t\tconst options = this.indices\n\t\t\t.flat()\n\t\t\t.map(x => ({\n\t\t\t\tid: x,\n\t\t\t\tlabel: this.frames[x].name + '.' + this.frames[x].language,\n\t\t\t\tdisabled: false,\n\t\t\t}))\n\t\t\t.sort((a, b) => (a.label < b.label) ? -1 : (a.label > b.label) ? 1 : 0);\n\n\t\tif (!scoring)\n\t\t\treturn options.map(x => ({ ...x, disabled: true }));\n\t\t\n\t\tif (FE_SCORING_TYPES.has(scoring.type))\n\t\t\treturn options.map(x => ({ ...x, disabled: this.frames[x.id].FEs.length === 0 }))\n\n\t\tif (LU_SCORING_TYPES.has(scoring.type))\n\t\t\treturn options.map(x => ({ ...x, disabled: this.frames[x.id].LUs.length === 0 }))\n\n\t\treturn options;\n\t}\n\n\t/**\n\t * Returns the LU matching graph definition of the selected alignemnt. When\n\t * no alignment is selected, i.e., the UI state doesn't have a pair of\n\t * selected frames, this method should return an empty list for both node and\n\t * link definitions. The same applies with the method has no mapping between\n\t * LUs (e.g. The alignment is score is the similarity of the average LU\n\t * vector of each frame).\n\t * \n\t * @public\n\t * @method\n\t * @returns {Object} Graph definition with a node list and a link list.\n\t */\n\tget graphData() {\n\t\tconst {scoring} = this.uiState;\n\t\t\n\t\tif (!scoring)\n\t\t\treturn { nodes: [], links: [] };\n\n\t\tswitch(scoring.type) {\n\t\t\tcase 'lu_wordnet':\n\t\t\t\treturn this.LUWordNetGraph();\n\t\t\tcase 'synset':\n\t\t\tcase 'synset_inv':\n\t\t\t\treturn this.synsetGraph();\n\t\t\tcase 'lu_muse':\n\t\t\t\treturn this.LUMuseGraph();\n\t\t\tcase 'lu_bert':\n\t\t\t\treturn this.LUBertGraph();\n\t\t\tcase 'fe_matching':\n\t\t\t\treturn this.FEMatchingGraph();\n\t\t\tdefault:\n\t\t\t\treturn { nodes: [], links: [] };\n\t\t}\n\t}\n\n\t/**\n\t * Gets the edges of the Sankey diagram for the selected scoring method. This\n\t * function will recomputed edges if necessary, else it will return data from\n\t * this.edges.\n\t * \n\t * @public\n\t * @method\n\t * @param {Set} frameSet set of frames of interest.\n\t * @returns {Array[Array]} edges of the sankey diagram in the format\n\t * \t[source id, target id, score value].\n\t */\n\tasync getEdges(frameSet) {\n\t\tconst {scoring} = this.uiState;\n\t\tconst {params} = scoring;\n\t\tconst prevParams = this.previousParams[scoring.id] || {};\n\t\tlet edges;\n\n\t\tif (scoring.type === 'lu_muse' || !this.edges[scoring.id]) {\n\t\t\tlet recompute = false;\n\n\t\t\tfor (let key of ['neighborhoodSize', 'similarityThreshold']) {\n\t\t\t\tif (prevParams[key] !== params[key]) {\n\t\t\t\t\trecompute = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!recompute) {\n\t\t\t\trecompute = !areSetsEqual(prevParams['frameSet'], frameSet);\n\t\t\t}\n\n\t\t\tif (recompute) {\n\t\t\t\tedges = await this.computeEdges(frameSet);\n\t\t\t\tthis.edges[scoring.id] = edges;\n\t\t\t} else {\n\t\t\t\tedges = this.edges[scoring.id];\n\t\t\t}\n\t\t} else {\n\t\t\tedges = this.edges[scoring.id];\n\t\t}\n\n\t\tthis.previousParams[scoring.id] = {...params};\n\t\tthis.previousParams[scoring.id]['frameSet'] = frameSet;\n\n\t\treturn edges;\n\t}\n\n\t/**\n\t * Computes Sankey diagram edges of the given frame set. Each frame in this\n\t * set will have its alignment score with all frames in the other language\n\t * computed.\n\t * \n\t * @public\n\t * @method\n\t * @param {Set} frameSet set of frames that edges will be computed.\n\t * @returns {Array[Array]} edges of the sankey diagram in the format\n\t * \t[source id, target id, score value].\n\t */\n\tasync computeEdges(frameSet) {\n\t\tconst edges = [];\n\t\t/**\n\t\t * Indices are filtered to prevent duplicate edges when \"frameSet\" has\n\t\t * english and L2 frames. For example, if \"A\" is an english frame and \"B\"\n\t\t * is a L2 frame, \"A\" would first be scored against all L2 frames\n\t\t * (including \"B\"). Later, \"B\" would be scored against all english frames;\n\t\t * the alignment of the pair (\"A\", \"B\") would end up being calculated\n\t\t * twice. Of course, we could always check if the other frame is in the\n\t\t * frame set before calculating the pair score, but filtering the indices\n\t\t * yields the same results with less checks.\n\t\t */\n\t\tconst indices = [\n\t\t\tthis.indices[0].filter(x => !frameSet.has(x)),\n\t\t\tthis.indices[1],\n\t\t];\n\t\n\t\n\t\tfor (let frameId of frameSet) {\n\t\t\tconst frame = this.frames[frameId];\n\t\n\t\t\tif (frame.LUs.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet index\n\t\t\tlet iter = 0\n\t\t\tlet then = performance.now()\n\n\t\t\tif (frame.language === 'en') {\n\t\t\t\tfor (let i = 0; i < indices[1].length; ++i) {\n\t\t\t\t\tindex = indices[1][i]\n\t\t\t\t\tedges.push([frame.gid, index, this.LUVectorMatchingScore(frame, this.frames[index])])\n\t\t\t\t\t++iter\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (let i = 0; i < indices[0].length; ++i) {\n\t\t\t\t\tindex = indices[0][i]\n\t\t\t\t\tedges.push([index, frame.gid, this.LUVectorMatchingScore(this.frames[index], frame)])\n\t\t\t\t\t++iter\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (++iter % 10000 === 0) {\n\t\t\t\tlet now = performance.now()\n\t\t\t\tif (now - then > 100) {\n\t\t\t\t\tawait oneMoment()\n\t\t\t\t\tthen = performance.now()\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.frameVectorCache = {};\n\t\treturn edges.filter(x => x[2] > 0);\n\t}\n\n\t/**\n\t * Computes the alignment score between the given frames using multilingual\n\t * space vectors to match LUs.\n\t * \n\t * @public\n\t * @method\n\t * @param {Object} bfnFrame the english frame data object.\n\t * @param {Object} l2Frame the L2 frame data object.\n\t */\n\tLUVectorMatchingScore(bfnFrame, l2Frame) {\n\t\tconst {params} = this.uiState.scoring;\n\n\t\tif (!this.frameVectorCache[bfnFrame.gid]) {\n\t\t\tthis.frameVectorCache[bfnFrame.gid] = \n\t\t\t\tbfnFrame.LUs\n\t\t\t\t\t.map(x => this.museVectorIdsByLU[x.gid])\n\t\t\t\t\t.filter(x => x)\n\t\t\t\t\t.flatMap(x => x.slice(0, params.neighborhoodSize))\n\t\t\t\t\t.filter(x => x[0] >= params.similarityThreshold);\n\t\t}\n\n\t\tif (!this.frameVectorCache[l2Frame.gid]) {\n\t\t\tthis.frameVectorCache[l2Frame.gid] = new Set(\n\t\t\t\tl2Frame.LUs\n\t\t\t\t\t.flatMap(x => this.museVectorIdsByLU[x.gid])\n\t\t\t\t\t.filter(x => x)\n\t\t\t\t\t.map(x => x[1])\n\t\t\t);\n\t\t}\n\t\n\t\tconst matches = this.frameVectorCache[bfnFrame.gid]\n\t\t\t\t.filter(x => x && this.frameVectorCache[l2Frame.gid].has(x[1]));\n\t\t\n\t\treturn matches.length / bfnFrame.LUs.length;\n\t}\n\n\t/**\n\t * Returns the LU matching graph definition for lu_wordnet scoring, where\n\t * two LUs are matched when both are in the same synset.\n\t * \n\t * @public\n\t * @method\n\t * @returns {Object} Graph definition with a node list and a link list.\n\t */\n\tLUWordNetGraph() {\n\t\tconst nodes = this.getNodes();\n\t\tconst inter = this.getConnectionObjects(nodes, this.synsetsByLU);\n\t\tconst links = inter.links.filter(l => l.target.hasLeftSource);\n\n\t\tnodes.push(...inter.nodes.filter(n => n.hasLeftSource));\n\t\tlinks.filter(l => l.source.type === 'right').forEach(l => {\n\t\t\tlet swap = l.source;\n\t\t\tl.source = l.target;\n\t\t\tl.target = swap;\n\t\t})\n\t\tnodes.forEach(n => n.isReferenceNode = n.type === 'left');\n\t\tlinks\n\t\t\t.filter(l => (l.source.type === 'left' && l.target.isIntersection))\n\t\t\t.forEach(l => {\n\t\t\t\tl.source.isMatchingNode = true;\n\t\t\t});\n\t\tthis.computeDegrees(links);\n\n\t\treturn { nodes, links };\n\t}\n\n\t/**\n\t * Returns the LU matching graph definition for synset/synset_inv scoring,\n\t * where a set of synsets is defined for each frame (based on their LUs) and\n\t * the intersection between two sets is the base of the alignment between two\n\t * frames.\n\t * \n\t * @public\n\t * @method\n\t * @returns {Object} Graph definition with a node list and a link list.\n\t */\n\tsynsetGraph() {\n\t\tconst type = this.uiState.scoring.type;\n\t\tconst nodes = this.getNodes();\n\t\tconst inter = this.getConnectionObjects(nodes, this.synsetsByLU);\n\t\tconst links = inter.links;\n\n\t\tnodes.push(...inter.nodes);\n\t\tconst isReferenceFn = type === 'synset' ? n => n.hasLeftSource : n => n.hasRightSource;\n\t\tnodes.forEach(n => {\n\t\t\tn.isReferenceNode = isReferenceFn(n);\n\t\t\tn.isMatchingNode = n.isIntersection;\n\t\t})\n\t\tthis.computeDegrees(links);\n\n\t\treturn { nodes, links };\n\t}\n\n\t/**\n\t * Returns the LU matching graph definition for lu_muse scoring, where a\n\t * match between two LUs happen when the cosine similarity of their vectors\n\t * is more than a given threshold.\n\t * \n\t * @public\n\t * @method\n\t * @returns {Object} Graph definition with a node list and a link list.\n\t */\n\tLUMuseGraph() {\n\t\tconst nodes = this.getNodes();\n\t\tconst inter = this.getConnectionObjects(nodes, this.museVectorIdsByLU, x => this.museWordsByVectorId[x]);\n\t\tconst links = inter.links.filter(l => l.target.hasLeftSource);\n\n\t\tnodes.push(...inter.nodes.filter(n => n.hasLeftSource));\n\t\tlinks.filter(l => l.source.type === 'right').forEach(l => {\n\t\t\tlet swap = l.source;\n\t\t\tl.source = l.target;\n\t\t\tl.target = swap;\n\t\t})\n\t\tnodes.forEach(n => n.isReferenceNode = n.type === 'left');\n\t\tlinks\n\t\t\t.filter(l => (l.source.type === 'left' && l.target.isIntersection))\n\t\t\t.forEach(l => l.source.isMatchingNode = true);\n\t\tthis.computeDegrees(links);\n\n\t\treturn { nodes, links };\n\t}\n\n\t/**\n\t * Returns the LU matching graph definition where a match between two LUs\n\t * happens when both their average annotation vectors have cosine similarity\n\t * of more than .3.\n\t * \n\t * @public\n\t * @method\n\t * @returns {Object} Graph definition with a node list and a link list.\n\t */\n\tLUBertGraph() {\n\t\tconsole.log('pimbou')\n\t\tconst {params} = this.uiState.scoring;\n\n\t\tconst nodes = this.getNodes();\n\n\t\tnodes.forEach(x => x.isReferenceNode = true);\n\t\tconst left = nodes.filter(x => x.type === \"left\");\n\t\tconst right = nodes.filter(x => x.type === \"right\");\n\n\t\tconst links = [];\n\n\t\tfor (let a of left) {\n\t\t\tconst neighborhood = \n\t\t\t\t(this.bertVectorIdsByLU[a.gid] || [])\n\t\t\t\t\t.slice(0, params.neighborhoodSize)\n\t\t\t\t\t.filter(t => !Array.isArray(t) || t[0] > params.similarityThreshold)\n\t\t\t\t\t.map(t => this.bertWordsByVectorId[Array.isArray(t) ? t[1] : t])\n\t\t\t\t\t.filter(t => t);\n\n\t\t\tfor (let b of right) {\n\t\t\t\tlet id = b.gid.replace(/\\d+\\.\\w{2}\\./, '')\n\t\t\t\tif (neighborhood.indexOf(id) > -1) {\n\t\t\t\t\tlinks.push({ source: a, target: b });\n\t\t\t\t\ta.isMatchingNode = true;\n\t\t\t\t\tb.isMatchingNode = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { nodes, links };\n\t}\n\n\t/**\n\t * Returns the FE matching graph definition where a match between two FEs\n\t * happens when both have the same name.\n\t * \n\t * @public\n\t * @method\n\t * @returns {Object} Graph definition with a node list and a link list.\n\t */\n\tFEMatchingGraph() {\n\t\tconst nodes = this.getNodes(\"FEs\", x => x.name);\n\t\tconst links = [];\n\n\t\tnodes.forEach(x => x.isReferenceNode = true);\n\t\tconst left = nodes.filter(x => x.type === \"left\");\n\t\tconst right = nodes.filter(x => x.type === \"right\");\n\n\t\tfor (let a of left) {\n\t\t\tfor (let b of right) {\n\t\t\t\tif (a.type !== b.type && a.name === b.name) {\n\t\t\t\t\tlinks.push({ source: a, target: b })\n\t\t\t\t\ta.isMatchingNode = true;\n\t\t\t\t\tb.isMatchingNode = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { nodes, links };\n\t}\n\n\t/**\n\t * Creates an object containing default information of a graph node.\n\t * \n\t * @public\n\t * @method\n\t * @returns {Object} graph node object.\n\t */\n\tcreateNode = () => ({ inDegree: 0, outDegree: 0, });\n\n\t/**\n\t * Returns the list of nodes of the selected frames distinguishing the source\n\t * frame of the node between \"left\" and \"right\".\n\t * \n\t * @public\n\t * @method\n\t * @param {string} frameAttr frame attribute that holds nodes base objects.\n\t * @param {Func} nodeNameFn name getter for a graph node.\n\t * @returns {Array} list of LU nodes.\n\t */\n\tgetNodes(frameAttr = \"LUs\", nodeNameFn = x => x['name']) {\n\t\tconst {selectedFrames} = this.uiState;\n\n\t\tif (selectedFrames[0] && selectedFrames[1]) {\n\t\t\treturn this.frames[selectedFrames[0]][frameAttr]\n\t\t\t\t.map(x => ({\n\t\t\t\t\ttype: 'left',\n\t\t\t\t\t...this.createNode(),\n\t\t\t\t\t...(typeof x === \"object\" ? x : null),\n\t\t\t\t\t'name': nodeNameFn(x),\n\t\t\t\t}))\n\t\t\t\t.concat(\n\t\t\t\t\tthis.frames[selectedFrames[1]][frameAttr]\n\t\t\t\t\t.map(x => ({\n\t\t\t\t\t\ttype: 'right',\n\t\t\t\t\t\t...this.createNode(),\n\t\t\t\t\t\t...(typeof x === \"object\" ? x : null),\n\t\t\t\t\t\t'name': nodeNameFn(x),\n\t\t\t\t\t}))\n\t\t\t\t);\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Generates intermediate node objects for a graph based on the mapping of\n\t * LUs to these nodes. An intermediate node can be, for example, a synset\n\t * node that was used as  \"translator\". The method returns those nodes and\n\t * their links to LU nodes.\n\t * \n\t * @public\n\t * @method\n\t * @param {Array} LUNodes list of LU nodes.\n\t * @param {Object} relationMap mapping of LUs to intermediate node ids.\n\t * @param {function} nodeNameFn function to get the name of a node using id.\n\t * @returns {Object} A object containing the intermediate nodes of the graph\n\t * and their links to LU nodes.\n\t */\n\tgetConnectionObjects(LUNodes, relationMap, nodeNameFn=x=>x) {\n\t\tconst {params} = this.uiState.scoring;\n\n\t\tconst links = LUNodes\n\t\t\t.flatMap(s =>\n\t\t\t\t(relationMap[s.gid] || [])\n\t\t\t\t\t.slice(0, params.neighborhoodSize)\n\t\t\t\t\t.filter(t => !Array.isArray(t) || t[0] > params.similarityThreshold)\n\t\t\t\t\t.map(t => ({\n\t\t\t\t\t\tsource: s,\n\t\t\t\t\t\ttarget: Array.isArray(t) ? t[1] : t,\n\t\t\t\t\t\tisDirected: true,\n\t\t\t\t\t}))\n\t\t\t)\n\t\t// Creating node objects for intermediate Nodes\n\t\tconst intermediateMap = {}\n\t\tconst nodes = [...new Set(links.map(l => l.target))]\n\t\t\t\t.map(t => {\n\t\t\t\t\tconst node = {\n\t\t\t\t\t\ttype: 'intermediate',\n\t\t\t\t\t\t...this.createNode(),\n\t\t\t\t\t\t'name': nodeNameFn(t),\n\t\t\t\t\t};\n\t\t\t\t\tintermediateMap[t] = node;\n\t\t\t\t\treturn node;\n\t\t\t\t});\n\t\t// Including references to objects in links\n\t\tlinks.forEach(l => {\n\t\t\tl.target = intermediateMap[l.target];\n\t\t\tl.target[l.source.type === 'left' ? 'hasLeftSource' : 'hasRightSource'] = true;\n\t\t});\n\t\tnodes.forEach(n => n.isIntersection = n.hasLeftSource && n.hasRightSource);\n\n\t\treturn { nodes, links };\n\t}\n\n\t/**\n\t * Computes the degrees of each node in a graph based on its link Array.\n\t * \n\t * @public\n\t * @method\n\t * @param {Array} links link list of a graph.\n\t */\n\tcomputeDegrees(links) {\n\t\tlinks.forEach(l => {\n\t\t\t++l.source.outDegree;\n\t\t\t++l.target.inDegree;\n\t\t});\n\t}\n\n\t/**\n\t * Filters the Sankey diagram edge list based on the UI visualization params.\n\t * The list is returned unchanged when limitation of edges on the Sankey\n\t * diagram is disabled.\n\t * \n\t * @public\n\t * @method\n\t * @param {Array} edges Sankey diagram edges.\n\t * @returns {Array} filtered array of edges.\n\t */\n\tpruneEdges(edges) {\n\t\tconst {params} = this.uiState.scoring;\n\n\t\tif (!params.limitSankeyEdges)\n\t\t\treturn edges;\n\n\t\tedges.sort((a, b) => {\n\t\t\tif (a[0] > b[0]) {\n\t\t\t\treturn -1;\n\t\t\t} else if (a[0] < b[0]) {\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\treturn a[2] > b[2] ? -1 : a[2] < b[2] ? 1 : 0;\n\t\t\t}\n\t\t});\n\n\t\tconst counts = {};\n\n\t\tedges.forEach(x => counts[x[0]] = 0);\n\n\t\treturn edges.filter(x => {\n\t\t\t++counts[x[0]];\n\t\t\treturn counts[x[0]] <= params.sankeyMaxEdges;\n\t\t});\n\t}\n\n\t/**\n\t * Loads a JSON alignment file into the store.\n\t * \n\t * @public\n\t * @method\n\t * @param {Object} data parsed alignment JSON file.\n\t */\n\tload = flow(function * (data) {\n\t\tthis.fndb = data.db[1];\n\t\tthis.language = data.lang[1];\n\t\tthis.edges = yield loadEdges(data)\n\n\t\tthis.framesByName = {};\n\t\tfor (let key in data.frames) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(data.frames, key)) {\n\t\t\t\tlet frame = data.frames[key];\n\t\t\t\tthis.framesByName[frame.name + '.' + frame.language] = frame;\n\t\t\t}\n\t\t}\n\n\t\tthis.uiState.scoringOptions =\n\t\t\tdata.alignments.map(x => ({\n\t\t\t\tid: x.id,\n\t\t\t\tdesc: x.desc,\n\t\t\t\ttype: x.type,\n\t\t\t\tparams: DEFAULT_PARAMS[x.type] || {\n\t\t\t\t\tthreshold: 0.1,\n\t\t\t\t\tdisplayOnlyFrameSet: false,\n\t\t\t\t\tsankeyMaxEdges: null,\n\t\t\t\t\tlimitSankeyEdges: false,\n\t\t\t\t}\n\t\t\t}));\n\n\t\tthis.indices = data.indices;\n\t\tthis.frames = data.frames;\n\t\tthis.synsetsByLU = data.resources.lu_to_syn;\n\t\tthis.synsetData = data.resources.syn_data;\n\t\tthis.museVectorIdsByLU = data.resources.lu_vec_nn_muse;\n\t\tthis.museWordsByVectorId = data.resources.id2word_muse;\n\t\tthis.bertVectorIdsByLU = data.resources.lu_vec_nn_bert;\n\t\tthis.bertWordsByVectorId = data.resources.id2word_bert;\n\n\t\t// Resets\n\t\tthis.uiState.setSelectedFramePair(null, null);\n\t\tthis.uiState.scoring = null;\n\t\tthis.uiState.sankeyFrames = [];\n\t})\n\n}\n\ndecorate(AlignmentStore, {\n\tfndb: observable,\n\tlanguage: observable,\n\tindices: observable,\n\tframes: observable,\n\tsynsetsByLU: observable,\n\tsynsetData: observable,\n\tmuseVectorIdsByLU: observable,\n\tmuseWordsByVectorId: observable,\n\tbertVectorIdsByLU: observable,\n\tbertWordsByVectorId: observable,\n\tisLoading: observable,\n\tlexicalIndices: computed,\n\tsankeyData: computed,\n\tisComputingSankey: computed,\n\tframeOptions: computed,\n});\n\nexport default AlignmentStore;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\nimport { format } from 'd3-format';\nimport { select } from 'd3-selection';\nimport { observer } from 'mobx-react';\n// TODO: Should redo this d3 layout\nimport viz from '../layouts/viz.js';\n\nimport './Sankey.css';\n\nimport AlignmentStore from '../stores/AlignmentStore';\nimport { getRenderedTextSize } from '../utils';\n\n// A 3-decimal precision formatter.\nconst scoreFormatter = format(\".3f\");\n\n/**\n * Infinitely yields hex colors strings. Since the amount of hex color strings\n * is finite, the same list is yielded through a circular iteration.\n * \n * @generator\n * @function colors\n * @yields {string} a hex color string\n */\nconst colors = function*() {\n\tconst colors = [\n\t\t\"#3366CC\",\n\t\t\"#DC3912\",\n\t\t\"#FF9900\",\n\t\t\"#109618\",\n\t\t\"#990099\",\n\t\t\"#0099C6\"\n\t];\n\tlet index = 0;\n\n\twhile(true) {\n\t\tyield colors[index];\n\t\tindex = ++index % colors.length;\n\t}\n};\n\n/**\n * \n * A Sankey diagram component that uses D3.js to render the visualization as a\n * svg image. This diagram supports click events on Sankey labels and flow\n * connections.\n *\n */\nconst Sankey = observer(\n\tclass Sankey extends React.Component {\n\n\t\tstatic propTypes = {\n\t\t\t/**\n\t\t\t * A mobx store of frame alignments.\n\t\t\t */\n\t\t\tstore: PropTypes.instanceOf(AlignmentStore),\n\t\t\t/**\n\t\t\t * A callback called a edge of the diagram is clicked.\n\t\t\t * \n\t\t\t * @param {Array} edge A 2-position array containing the source and target of the edge.\n\t\t\t */\n\t\t\tonEdgeClick: PropTypes.func,\n\t\t}\n\n\t\tconstructor(props) {\n\t\t\tsuper(props);\n\n\t\t\t// Reference to svg element\n\t\t\tthis.svg = null;\n\t\t\t// Expanded diagram node\n\t\t\tthis.selection = null;\n\t\t\t// Reference to D3.js layout of the diagram\n\t\t\tthis.bP = null;\n\t\t\t// Reference to diagram root \"g\" svg element\n\t\t\tthis.bPg = null;\n\t\t\t// Container dimensions for next render\n\t\t\tthis.height = null;\n\t\t\tthis.width = null;\n\t\t}\n\n\t\t/**\n\t\t * Manually invokes D3.js rendering function when the component is mounted.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t */\n\t\tcomponentDidMount() {\n\t\t\tthis.renderSankey();\n\t\t}\n\n\t\t/**\n\t\t * Manually invokes D3.js rendering function when the component is updated.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t */\n\t\tcomponentDidUpdate() {\n\t\t\tthis.renderSankey();\n\t\t}\n\n\t\t/**\n\t\t * Handles click on a bar/node/label of the Sankey diagram. The clicked\n\t\t * item will be expanded or shrink depending of the current state of the\n\t\t * digram.\n\t\t * \n\t\t * @public\n\t\t * @model\n\t\t * @param {Object} bar data object of the clicked bar/label.\n\t\t */\n\t\tonNodeClick(bar) {\n\t\t\tif (this.selection && this.selection.key === bar.key) {\n\t\t\t\tthis.shrink(this.selection);\n\t\t\t\tthis.selection = null;\n\t\t\t} else {\n\t\t\t\tif (this.selection) {\n\t\t\t\t\tthis.shrink(this.selection);\n\t\t\t\t}\n\t\t\t\tthis.selection = bar;\n\t\t\t\tthis.expand(bar);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Handles click on a edge/connection of the diagram calling parent\n\t\t * component's handler.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {Object} edge data object of the clicked edge.\n\t\t */\n\t\tonEdgeClick(edge) {\n\t\t\tconst {store, onEdgeClick} = this.props;\n\t\t\t\n\t\t\tonEdgeClick(\n\t\t\t\tstore.framesByName[edge.primary],\n\t\t\t\tstore.framesByName[edge.secondary],\n\t\t\t);\n\t\t}\n\n\t\t/**\n\t\t * Expands one of the diagram nodes. This will hide all diagram connections\n\t\t * except the ones where the parameter node is source or target. The score\n\t\t * of these connections is also displayed.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {Object} node data object of the node being expanded.\n\t\t */\n\t\texpand(node) {\n\t\t\tconst filterFn =\n\t\t\t\tnode.part === \"primary\"\n\t\t\t\t\t? (d => node.key === d.primary)\n\t\t\t\t\t: (d => node.key === d.secondary);\n\n\t\t\tthis.bP.mouseover(node);\n\t\t\tthis.bPg.selectAll(\".score\")\n\t\t\t\t.filter(filterFn)\n\t\t\t\t.text(d => scoreFormatter(d.value))\n\t\t}\n\n\t\t/**\n\t\t * Shrinks all diagram node expansions, showing all edges and hiding score\n\t\t * numbers.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {Object} node data object of the node being shrinked.\n\t\t */\n\t\tshrink(node) {\n\t\t\tthis.bP.mouseout(node);\n\t\t\tthis.bPg.selectAll(\".score\").text(\"\");\n\t\t}\n\n\t\t/**\n\t\t * Gets the width of the text boxes for the diagram frame labels. The size\n\t\t * is always defined based on the length of longest frame name.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @returns {number} width to be used for text boxes\n\t\t */\n\t\tgetLabelSize() {\n\t\t\tconst {store} = this.props;\n\t\t\tlet max = store.sankeyData[0];\n\n\t\t\tfor (let edge of store.sankeyData) {\n\t\t\t\tif (edge[0].length > max.length) {\n\t\t\t\t\tmax = edge[0];\n\t\t\t\t}\n\t\t\t\tif (edge[1].length > max.length) {\n\t\t\t\t\tmax = edge[1];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn getRenderedTextSize(max, 14);\n\t\t}\n\n\t\t/**\n\t\t * Returns a mapping of each left side frame name to a color.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @returns {Object}\n\t\t */\n\t\tgetColorMap() {\n\t\t\tconst {store} = this.props;\n\t\t\tconst colorGen = colors();\n\n\t\t\treturn [...new Set(store.sankeyData.map(x => x[0]))]\n\t\t\t\t.reduce((res, current) => {\n\t\t\t\t\tres[current] = colorGen.next().value;\n\t\t\t\t\treturn res;\n\t\t\t\t}, {});\n\t\t}\n\n\t\t/**\n\t\t * Renders the svg Sankey diagram using D3.js and sets up DOM events for its\n\t\t * elements. This rendering should be controlled by D3.js and not ReactJS.\n\t\t * This guarantees that the diagram will not be part of React's virtual\n\t\t * DOM, thus preventing the framework from interfering with elements\n\t\t * created by the library (D3.js).\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t */\n\t\trenderSankey() {\n\t\t\tconst {store} = this.props;\n\t\t\tconst labelSize = this.getLabelSize();\n\t\t\tconst colorMap = this.getColorMap();\n\t\t\tconst svg = select(this.svg);\n\n\t\t\tsvg.select(\"*\").remove();\n\t\t\tsvg.attr(\"width\", this.width).attr(\"height\", this.height);\n\n\t\t\t// Sankey dimensions\n\t\t\tconst height = Math.max(this.height - 160, 400);\n\t\t\tconst vMargin = Math.max((this.height - height) / 2, 0);\n\t\t\tconst width = Math.min(600, Math.max(this.width - (2 * labelSize) - 160, 200));\n\t\t\tconst hMargin = Math.max((this.width - width) / 2, 0);\n\n\t\t\tconst g = svg.append(\"g\").attr(\"transform\", `translate(${hMargin}, ${vMargin})`);\n\t\t\t\n\t\t\t// Create layout for sankey (AKA bipartite graph)\n\t\t\tthis.bP =\n\t\t\t\tviz.bP()\n\t\t\t\t\t.data(store.sankeyData)\n\t\t\t\t\t.min(12)\n\t\t\t\t\t.pad(1)\n\t\t\t\t\t.height(height)\n\t\t\t\t\t.width(width)\n\t\t\t\t\t.fill(d => colorMap[d.primary])\n\t\t\t\n\t\t\tthis.bPg = g.call(this.bP);\n\n\t\t\t// Setting up events\n\t\t\tthis.bPg.selectAll(\".mainBars\")\n\t\t\t\t.on(\"click\", d => this.onNodeClick(d));\n\t\t\t\n\t\t\tthis.bPg.selectAll(\".edges\")\n\t\t\t\t.on(\"click\", d => this.onEdgeClick(d));\n\n\t\t\t// Appending score text elements\n\t\t\tthis.bPg.selectAll(\".subBars\")\n\t\t\t\t.filter(d => d.part === \"secondary\")\n\t\t\t\t.append(\"text\")\n\t\t\t\t\t.attr(\"class\", \"score\")\n\t\t\t\t\t.attr(\"x\", -58)\n\t\t\t\t\t.attr(\"y\", 6)\n\t\t\t\n\t\t\t// Appending node name text elements\n\t\t\tthis.bPg.selectAll(\".mainBars\")\n\t\t\t\t.append(\"text\")\n\t\t\t\t\t.attr(\"class\",\"label\")\n\t\t\t\t\t.attr(\"x\", d => (d.part === \"primary\" ? -30 : 30))\n\t\t\t\t\t.attr(\"y\", () => 6)\n\t\t\t\t\t.text(d => d.key)\n\t\t\t\t\t.attr(\"text-anchor\", d => (d.part === \"primary\" ? \"end\": \"start\"));\n\t\t}\n\n\t\trender() {\n\t\t\tconst {store, uiState} = this.props;\n\t\t\tconst data = store.sankeyData;\n\t\t\tthis.height = uiState.height;\n\t\t\tthis.width = uiState.width;\n\n\t\t\treturn (\n\t\t\t\t<div className=\"visualization-container\" style={{ minWidth: uiState.width }}>\n\t\t\t\t\t{\n\t\t\t\t\t\tdata.length > 0\n\t\t\t\t\t\t? <svg ref={node => this.svg = node}></svg>\n\t\t\t\t\t\t: <h3 className=\"no-data-text\">No data to show.</h3>\n\t\t\t\t\t}\n\t\t\t\t\t{store.isComputingSankey &&\n\t\t\t\t\t\t<div className=\"loading-overlay\">\n\t\t\t\t\t\t\t<div className=\"loading-box\">\n\t\t\t\t\t\t\t\t<span>Computing</span>\n\t\t\t\t\t\t\t\t<ScaleLoader height=\"24px\" color={'#3F51B5'} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t}\n);\n\nexport default Sankey;","/**\n * Measures the rendered width of arbitrary text given the font size and font\n * face.\n * \n * @param {string} text The text to measure.\n * @param {number} fontSize The font size in pixels.\n * @param {string} fontFace The font face (\"Arial\", \"Helvetica\", etc.).\n * @returns {number} The width of the text.\n */\nfunction getRenderedTextSize(text, fontSize, fontFace = null) {\n\tconst canvas = document.createElement('canvas');\n\tconst context = canvas.getContext('2d');\n\n\tif (fontFace) {\n\t\tcontext.font = `${fontSize}px ${fontFace}`;\n\t} else {\n\t\tcontext.font = context.font.replace(/\\d+px/, `${fontSize}px`);\n\t}\n\n\treturn context.measureText(text).width;\n}\n\nexport {\n\tgetRenderedTextSize,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {format} from 'd3-format';\nimport {select} from 'd3-selection';\n\nimport './MatchingGraph.css';\n\nconst scoreFormatter = format(\".3f\");\n\n/**\n * A component for lexical unit matching graphs.\n */\nclass MatchingGraph extends React.Component {\n\tstatic propTypes = {\n\t\t/**\n\t\t * An object containing the graph definition: an array of nodes under\n\t\t * \"nodes\" and an array of edges under \"links\".s\n\t\t */\n\t\tdata: PropTypes.object,\n\t\t/**\n\t\t * The frame pair of the FEs/LUs used for rendering the graph.\n\t\t */\n\t\tframePair: PropTypes.array,\n\t\t/**\n\t\t * A callback called when mouse is placed over of the nodes.\n\t\t */\n\t\tonMouseOverNode: PropTypes.func,\n\t\t/**\n\t\t * A callback called when mouse is leaves of the nodes.\n\t\t */\n\t\tonMouseOutNode: PropTypes.func,\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.root = null;\n\t\tthis.links = null;\n\t\tthis.nodes = null;\n\t}\n\n\t/**\n\t * Manually invokes D3.js rendering function when the component is mounted.\n\t * \n\t * @public\n\t * @method\n\t */\n\tcomponentDidMount() {\n\t\tthis.renderGraph();\n\t}\n\n\t/**\n\t * Manually invokes D3.js rendering function when the component is updated.\n\t * \n\t * @public\n\t * @method\n\t */\n\tcomponentDidUpdate() {\n\t\tthis.renderGraph();\n\t}\n\n\t/**\n\t * Computes the path string for the path element of the given link data.\n\t * \n\t * @public\n\t * @method\n\t * @param {Object} datum Link data object.\n\t * @returns {string} A string of path commands.\n\t */\n\tcomputePath(datum) {\n\t\tlet direction;\n\t\tlet x1 = datum.source.x;\n\t\tlet y1 = datum.source.y - (datum.source.height/4);\n\t\tlet x2 = datum.target.x;\n\t\tlet y2 = datum.target.y - (datum.target.height/4);\n\n\t\tif (datum.source.type === 'left') {\n\t\t\tx1 += datum.source.width + 12;\n\t\t\tx2 -= datum.target.width/2 + 16;\n\t\t\tdirection = 1;\n\t\t} else if (datum.source.type === 'intermediate') {\n\t\t\tx1 += (datum.source.width/2) + 12;\n\t\t\tx2 -= datum.target.width + 16;\n\t\t\tdirection = 1;\n\t\t} else {\n\t\t\tx1 -= datum.source.width + 12;\n\t\t\tx2 += (datum.target.width/2) + 18;\n\t\t\tdirection = -1;\n\t\t}\n\n\t\tconst offset = 15;\n\t\tconst ccoef = (Math.abs(x1 - x2)-2*offset)/2.25;\n\n\t\treturn `\n\t\t\tM ${x1}                 ${y1}\n\t\t\tL ${x1 + 3*direction}   ${y1}\n\t\t\tC ${x1+ccoef*direction} ${y1}, ${x2-ccoef*direction} ${y2}, ${x2+offset*-direction} ${y2}\n\t\t\tL ${x2}                 ${y2}\n\t\t`;\n\t}\n\n\t/**\n\t * Renders the graph footer that shows the frame names and the alignment\n\t * score of the pair.\n\t * \n\t * @public\n\t * @method\n\t * @param {Object} data Graph data object as returned by getRenderingData.\n\t */\n\tincludeFooter(data) {\n\t\tconst { framePair, height, width, margin } = this.props;\n\t\tconst svg = select(this.root).select(\"svg\");\n\t\tconst matching = data.nodes.filter(d => d.isMatchingNode).length;\n\t\tconst reference = data.nodes.filter(d => d.isReferenceNode && !d.isMatchingNode).length;\n\t\t\n\t\tif (framePair[0] && framePair[1]) {\n\t\t\tconst right = framePair[0];\n\t\t\tconst left = framePair[1];\n\n\t\t\tsvg.select(\"#title\")\n\t\t\t.attr(\"x\", margin)\n\t\t\t.attr(\"y\", height-margin/2)\n\t\t\t.attr(\"class\", \"graph-info\")\n\t\t\t.text(`Frames: ${right.name} (${right.gid}), ${left.name} (${left.gid})`)\n\n\t\t\tsvg.select(\"#stats\")\n\t\t\t\t.attr(\"x\", width-margin)\n\t\t\t\t.attr(\"y\", height-margin/2)\n\t\t\t\t.attr(\"class\", \"graph-info graph-score\")\n\t\t\t\t.html(`\n\t\t\t\t\tAlignment score:\n\t\t\t\t\t<tspan class=\"match\">${matching}</tspan>\n\t\t\t\t\t÷\n\t\t\t\t\t(\n\t\t\t\t\t<tspan class=\"match\">${matching}</tspan>\n\t\t\t\t\t+\n\t\t\t\t\t<tspan class=\"reference\">${reference}</tspan>\n\t\t\t\t\t)\n\t\t\t\t\t= ${scoreFormatter(matching/(matching + reference))}`)\n\t\t}\n\t}\n\n\t/**\n\t * Renders the matching graph using D3.js and sets up DOM events for its\n\t * elements. This rendering should be controlled by D3.js and not ReactJS.\n\t * This guarantees that the diagram will not be part of React's virtual\n\t * DOM, thus preventing the framework from interfering with elements\n\t * created by the library (D3.js).\n\t * \n\t * @public\n\t * @method\n\t */\n\trenderGraph() {\n\t\tconst { data, height, width } = this.props;\n\t\tconst svg = select(this.root).select(\"svg\");\n\n\t\tsvg\n\t\t\t.attr(\"height\", height)\n\t\t\t.attr(\"width\", width);\n\n\t\tthis.nodes = svg.select(\"#nodes\")\n\t\t\t.selectAll(\"text\")\n\t\t\t.data(data.nodes)\n\t\t\t.join(\"text\")\n\t\t\t\t.text(d => d.name)\n\t\t\t\t.each(function(d) {\n\t\t\t\t\tconst bbox = this.getBBox();\n\t\t\t\t\td.width = bbox.width;\n\t\t\t\t\td.height = bbox.height + 2;\n\t\t\t\t})\n\t\t\t\t.attr(\"x\", d => d.x)\n\t\t\t\t.attr(\"y\", d => d.y)\n\t\t\t\t.attr(\"text-anchor\", d => d.type === 'left' ? 'start' : d.type === 'right' ? 'end' : 'middle')\n\t\t\t\t.attr(\"class\", d => {\n\t\t\t\t\tlet name = \"node\";\n\t\t\t\t\tif (d.isMatchingNode) {\n\t\t\t\t\t\tname += \" match\";\n\t\t\t\t\t} else if (d.isReferenceNode) {\n\t\t\t\t\t\tname += \" ref\";\n\t\t\t\t\t}\n\t\t\t\t\treturn name;\n\t\t\t\t})\n\t\t\t\t.attr(\"opacity\", 0.75)\n\t\t\t\t.on(\"mouseover\", d => this.onMouseOverNode(d))\n\t\t\t\t.on(\"mouseout\", d => this.onMouseOutNode(d))\n\n\t\tthis.links = svg.select(\"#links\")\n\t\t\t.selectAll(\"path\")\n\t\t\t.data(data.links)\n\t\t\t.join(\"path\")\n\t\t\t\t.attr(\"d\", this.computePath)\n\t\t\t\t.attr(\"marker-end\", d => d.isDirected ? \"url(#arrowhead)\" : null)\n\t\t\t\t.attr(\"stroke\", \"#555\")\n\t\t\t\t.attr(\"fill-opacity\", 0)\n\t\t\t\t.attr(\"opacity\", 0.1)\n\n\t\tthis.includeFooter(data);\n\t}\n\n\t/**\n\t * Handles mouse over node event highlighting the element and its links. It\n\t * also invokes the handler of the parent component when it is passed via\n\t * props.\n\t * \n\t * @public\n\t * @method\n\t * @param {Object} datum Node data object.\n\t */\n\tonMouseOverNode(datum) {\n\t\tconst linked = new Set();\n\n\t\tthis.links\n\t\t\t.filter(d => d.source === datum || d.target === datum)\n\t\t\t.each(d => {\n\t\t\t\tlinked.add(d.source);\n\t\t\t\tlinked.add(d.target);\n\t\t\t})\n\t\t\t.attr(\"opacity\", 1);\n\n\t\tthis.nodes.filter(d => linked.has(d))\n\t\t\t.style(\"font-weight\", \"bold\")\n\t\t\t.attr(\"opacity\", 1);\n\n\t\tif (this.props.onMouseOverNode)\n\t\t\tthis.props.onMouseOverNode(datum, this.nodes, this.links);\n\t}\n\n\t/**\n\t * Handles mouse out of node event, removing any highlight that was applied\n\t * before and invoking the parent component's handler when it is passed via\n\t * props.\n\t * \n\t * @public\n\t * @method\n\t */\n\tonMouseOutNode() {\n\t\tthis.links.attr(\"opacity\", 0.1);\n\t\tthis.nodes\n\t\t\t.style(\"font-weight\", \"normal\")\n\t\t\t.attr(\"opacity\", 0.75);\n\n\t\tselect(\"#synset-tooltip\").style(\"display\", \"none\");\n\n\t\tif (this.props.onMouseOutNode)\n\t\t\tthis.props.onMouseOutNode();\n\t}\n\n\trender() {\n\t\tconst {data, width} = this.props;\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName=\"visualization-container\"\n\t\t\t\tstyle={{ minWidth: width }}\n\t\t\t\tref={node => this.root = node}\n\t\t\t>\n\t\t\t\t{\n\t\t\t\t\tdata.nodes.length > 0\n\t\t\t\t\t?\n\t\t\t\t\t\t<svg>\n\t\t\t\t\t\t\t<defs>\n\t\t\t\t\t\t\t\t<marker id=\"arrowhead\"\n\t\t\t\t\t\t\t\t\tmarkerWidth=\"10\" markerHeight=\"7\" \n\t\t\t\t\t\t\t\t\trefX=\"0\" refY=\"3.5\" orient=\"auto\">\n\t\t\t\t\t\t\t\t\t<polygon points=\"0 0, 10 3.5, 0 7\" fill=\"#555\" />\n\t\t\t\t\t\t\t\t</marker>\n\t\t\t\t\t\t\t</defs>\n\t\t\t\t\t\t\t<g id=\"nodes\" />\n\t\t\t\t\t\t\t<g id=\"links\" />\n\t\t\t\t\t\t\t<text id=\"title\" />\n\t\t\t\t\t\t\t<text id=\"stats\" />\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t: <h3 className=\"no-data-text\">No data to show.</h3>\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n\n}\n\nexport default MatchingGraph;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {observer} from 'mobx-react';\nimport {scalePoint} from 'd3-scale';\n\nimport MatchingGraph from './MatchingGraph';\nimport AlignmentStore from '../stores/AlignmentStore';\n\n/**\n * A component for lexical unit matching graphs.\n */\nconst LUMatchingGraph = observer(\n\tclass LUMatchingGraph extends React.Component {\n\t\tstatic propTypes = {\n\t\t/**\n\t\t * The frame pair of the LUs used for rendering the graph.\n\t\t */\n\t\tframePair: PropTypes.array,\n\t\t\t/**\n\t\t\t * A mobx store of frame alignments.\n\t\t\t */\n\t\t\tstore: PropTypes.instanceOf(AlignmentStore),\n\t\t\t/**\n\t\t\t * A callback called when mouse is placed over of the nodes.\n\t\t\t */\n\t\t\tonMouseOverNode: PropTypes.func,\n\t\t\t/**\n\t\t\t * A callback called when mouse is leaves of the nodes.\n\t\t\t */\n\t\t\tonMouseOutNode: PropTypes.func,\n\t\t}\n\n\t\t/**\n\t\t * Gets all required data for rendering. Basic node and link data comes\n\t\t * from the store received from props, this method computes the coordinates\n\t\t * where each element should be rendered.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @returns {Object} Graph definition with a node list and a link list.\n\t\t */\n\t\tgetRenderingData() {\n\t\t\tconst { store, uiState } = this.props;\n\t\t\tconst data = store.graphData;\n\n\t\t\tconst height = uiState.height-10;\n\t\t\tconst width = Math.max(uiState.width, 400);\n\t\t\tconst margin = 60;\n\t\t\t\n\t\t\tconst x =\n\t\t\t\tscalePoint()\n\t\t\t\t\t.domain(['left', 'intermediate', 'right'])\n\t\t\t\t\t.range([0, width])\n\t\t\t\t\t.padding(.3)\n\n\t\t\tconst yLU1 = scalePoint()\n\t\t\t\t.domain(data.nodes\n\t\t\t\t\t.filter(d => d.type === 'left')\n\t\t\t\t\t.sort((a, b) => b.outDegree - a.outDegree)\n\t\t\t\t\t.map(d => d.name))\n\t\t\t\t.range([margin*2, height-(margin*2)]);\n\n\t\t\tconst yLU2 = scalePoint()\n\t\t\t\t.domain(data.nodes\n\t\t\t\t\t\t.filter(d => d.type === 'right')\n\t\t\t\t\t\t.sort((a,b) => b.outDegree - a.outDegree)\n\t\t\t\t\t\t.map(d => d.name))\n\t\t\t\t.range([margin*2, height-(margin*2)]);\n\n\t\t\tconst yInter = scalePoint()\n\t\t\t\t.domain(data.nodes\n\t\t\t\t\t.filter(d => d.type === 'intermediate')\n\t\t\t\t\t.sort((a, b) => b.inDegree - a.inDegree)\n\t\t\t\t\t.map(d => d.name))\n\t\t\t\t.range([margin, height-margin]);\n\n\t\t\tconst frm1LUX = x('left');\n\t\t\tconst frm2LUX = x('right');\n\t\t\tconst interX = x('intermediate');\n\n\t\t\tdata.nodes.forEach(d => {\n\t\t\t\tif (d.type === 'left') {\n\t\t\t\t\td.x = frm1LUX;\n\t\t\t\t\td.y = yLU1(d.name);\n\t\t\t\t} else if (d.type === 'right') {\n\t\t\t\t\td.x = frm2LUX;\n\t\t\t\t\td.y = yLU2(d.name);\n\t\t\t\t} else {\n\t\t\t\t\td.x = interX;\n\t\t\t\t\td.y = yInter(d.name);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\treturn {\n\t\t\t\tnodes: data.nodes,\n\t\t\t\tlinks: data.links\n\t\t\t}\n\t\t}\n\n\t\trender() {\n\t\t\tconst {uiState} = this.props;\n\n\t\t\treturn (\n\t\t\t\t<MatchingGraph\n\t\t\t\t\tdata={this.getRenderingData()}\n\t\t\t\t\tframePair={this.props.framePair}\n\t\t\t\t\theight={uiState.height}\n\t\t\t\t\twidth={uiState.width}\n\t\t\t\t\tmargin={60}\n\t\t\t\t\tonMouseOverNode={this.props.onMouseOverNode}\n\t\t\t\t\tonMouseOutNode={this.props.onMouseOutNode}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t}\n);\n\nexport default LUMatchingGraph;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {observer} from 'mobx-react';\nimport {select} from 'd3-selection';\n\nimport './SynsetGraph.css';\n\nimport LUMatchingGraph from './LUMatchingGraph';\nimport AlignmentStore from '../stores/AlignmentStore';\n\n/**\n * A component based on LUMatchingGraph with specific functionalities for\n * Synset matching visualization.\n */\nconst SynsetGraph = observer(\n\tclass SynsetGraph extends React.Component {\n\t\tstatic propTypes = {\n\t\t\t/**\n\t\t\t * A mobx store of frame alignments.\n\t\t\t */\n\t\t\tstore: PropTypes.instanceOf(AlignmentStore),\n\t\t}\n\n\t\tposRegex = /\\.\\w{1,4}$/gi\n\n\t\t/**\n\t\t * Returns the HTML string to be used when rendering a lemma.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {string} lemma the lemma strin\n\t\t * @param {boolean} isHighlighted whether the lemma should be highlighted.\n\t\t * @returns {string} HTML string for the lemma.\n\t\t */\n\t\tlemmaHtml(lemma, isHighlighted) {\n\t\t\tif(isHighlighted)\n\t\t\t\treturn `<span class=\"synset-lemma highlighted\">${lemma}</span>`;\n\t\t\telse\n\t\t\t\treturn `<span class=\"synset-lemma\">${lemma}</span>`;\n\t\t}\n\n\t\t/**\n\t\t * Handles mouse over node event. If the hovered node represents a synset\n\t\t * the synset tooltip will be rendered next to it by this method.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t */\n\t\tonMouseOverNode = (datum, nodes, links) => {\n\t\t\tif (datum.type !== 'intermediate')\n\t\t\t\treturn;\n\n\t\t\tconst {store} = this.props;\n\t\t\tconst synset = store.synsetData[datum.name];\n\t\t\tconst language = store.language;\n\t\t\tconst highlighted = new Set();\n\n\t\t\tlinks.each(d => {\n\t\t\t\thighlighted.add(d.source.name.replace(this.posRegex, ''))\n\t\t\t\thighlighted.add(d.target.name.replace(this.posRegex, ''))\n\t\t\t});\n\n\t\t\t// Updating tooltip box\n\t\t\tselect(\"#synset-name\").html(datum.name);\n\t\t\tselect(\"#synset-desc\").html(synset.definition);\n\t\t\tselect(\"#synset-eng-lemmas\")\n\t\t\t\t.html(synset[\"en\"].map(l => this.lemmaHtml(l, highlighted.has(l))).join(\", \"))\n\t\t\tselect(\"#synset-l2-title\").html(`${language}:`)\n\t\t\tselect(\"#synset-l2-lemmas\")\n\t\t\t\t.html(synset[language].map(l => this.lemmaHtml(l, highlighted.has(l))).join(\", \"))\n\n\t\t\t// Rendering tooltip with the right coordinates\n\t\t\tconst tooltip = select(\"#synset-tooltip\");\n\t\t\ttooltip.style(\"display\", \"block\");\n\t\t\tconst bbox = tooltip.node().getBoundingClientRect();\n\t\t\tlet top = datum.y + datum.height/2;\n\n\t\t\tif (datum.y + bbox.height > window.innerHeight) {\n\t\t\t\ttop = datum.y - datum.height - bbox.height;\n\t\t\t} else {\n\t\t\t\ttop = datum.y + datum.height/2;\n\t\t\t}\n\n\t\t\ttooltip\n\t\t\t\t.style(\"top\", `${top}px`)\n\t\t\t\t.style(\"left\", `${datum.x+12}px`)\n\t\t}\n\n\t\t/**\n\t\t * Handles mouse out of node event. The synset tooltip is hidden.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t */\n\t\tonMouseOutNode() {\n\t\t\tselect(\"#synset-tooltip\").style(\"display\", \"none\");\n\t\t}\n\n\t\trender() {\n\t\t\tconst {store, uiState, framePair} = this.props;\n\n\t\t\treturn (\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"visualization-container\"\n\t\t\t\t\tstyle={{ minWidth: uiState.width }}\n\t\t\t\t\tref={node => this.root = node}\n\t\t\t\t>\n\t\t\t\t\t<div id=\"synset-graph-content\">\n\t\t\t\t\t\t<div id=\"synset-tooltip\">\n\t\t\t\t\t\t\t<div className=\"synset-lang-title large\" id=\"synset-name\"></div>\n\t\t\t\t\t\t\t<div id=\"synset-desc\"></div>\n\t\t\t\t\t\t\t<div className=\"synset-lang-title\">eng:</div>\n\t\t\t\t\t\t\t<div id=\"synset-eng-lemmas\"></div>\n\t\t\t\t\t\t\t<div className=\"synset-lang-title\" id=\"synset-l2-title\" />\n\t\t\t\t\t\t\t<div id=\"synset-l2-lemmas\"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<LUMatchingGraph\n\t\t\t\t\t\t\tstore={store}\n\t\t\t\t\t\t\tuiState={uiState}\n\t\t\t\t\t\t\tframePair={framePair}\n\t\t\t\t\t\t\tonMouseOverNode={this.onMouseOverNode}\n\t\t\t\t\t\t\tonMouseOutNode={this.onMouseOutNode}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n)\n\nexport default SynsetGraph;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {observer} from 'mobx-react';\nimport {scalePoint} from 'd3-scale';\n\nimport MatchingGraph from './MatchingGraph';\nimport AlignmentStore from '../stores/AlignmentStore';\n\n/**\n * A component for frame element matching graphs.\n */\nconst FEMatchingGraph = observer(\n\tclass FEMatchingGraph extends React.Component {\n\t\tstatic propTypes = {\n\t\t\t/**\n\t\t\t * The frame pair of the FEs used for rendering the graph.\n\t\t\t */\n\t\t\tframePair: PropTypes.array,\n\t\t\t/**\n\t\t\t * A mobx store of frame alignments.\n\t\t\t */\n\t\t\tstore: PropTypes.instanceOf(AlignmentStore),\n\t\t\t/**\n\t\t\t * A callback called when mouse is placed over of the nodes.\n\t\t\t */\n\t\t\tonMouseOverNode: PropTypes.func,\n\t\t\t/**\n\t\t\t * A callback called when mouse is leaves of the nodes.\n\t\t\t */\n\t\t\tonMouseOutNode: PropTypes.func,\n\t\t}\n\n\t\t/**\n\t\t * Gets all required data for rendering. Basic node and link data comes\n\t\t * from the store received from props, this method computes the coordinates\n\t\t * where each element should be rendered.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @returns {Object} Graph definition with a node list and a link list.\n\t\t */\n\t\tgetRenderingData() {\n\t\t\tconst {store, uiState} = this.props;\n\t\t\tconst data = store.graphData;\n\n\t\t\tconst height = uiState.height-10;\n\t\t\tconst width = Math.max(uiState.width, 400);\n\t\t\tconst margin = 60;\n\t\t\t\n\t\t\tconst x =\n\t\t\t\tscalePoint()\n\t\t\t\t\t.domain(['left', 'right'])\n\t\t\t\t\t.range([0, width])\n\t\t\t\t\t.padding(.3)\n\n\t\t\tconst yLeft = scalePoint()\n\t\t\t\t.domain(data.nodes\n\t\t\t\t\t.filter(d => d.type === 'left')\n\t\t\t\t\t.sort((a, b) => b.outDegree - a.outDegree)\n\t\t\t\t\t.map(d => d.name))\n\t\t\t\t.range([margin*4, height-(margin*4)]);\n\n\t\t\tconst yRight = scalePoint()\n\t\t\t\t.domain(data.nodes\n\t\t\t\t\t\t.filter(d => d.type === 'right')\n\t\t\t\t\t\t.sort((a,b) => b.outDegree - a.outDegree)\n\t\t\t\t\t\t.map(d => d.name))\n\t\t\t\t.range([margin*4, height-(margin*4)]);\n\n\t\t\tconst xLeft = x('left');\n\t\t\tconst xRight = x('right');\n\n\t\t\tdata.nodes.forEach(d => {\n\t\t\t\tif (d.type === 'left') {\n\t\t\t\t\td.x = xLeft;\n\t\t\t\t\td.y = yLeft(d.name);\n\t\t\t\t} else {\n\t\t\t\t\td.x = xRight;\n\t\t\t\t\td.y = yRight(d.name);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\treturn {\n\t\t\t\tnodes: data.nodes,\n\t\t\t\tlinks: data.links\n\t\t\t}\n\t\t}\n\n\t\trender() {\n\t\t\tconst {uiState} = this.props;\n\n\t\t\treturn (\n\t\t\t\t<MatchingGraph\n\t\t\t\t\tdata={this.getRenderingData()}\n\t\t\t\t\tframePair={this.props.framePair}\n\t\t\t\t\theight={uiState.height}\n\t\t\t\t\twidth={uiState.width}\n\t\t\t\t\tmargin={60}\n\t\t\t\t\tonMouseOverNode={this.props.onMouseOutNode}\n\t\t\t\t\tonMouseOutNode={this.props.onMouseOutNode}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t}\n);\n\nexport default FEMatchingGraph;","import { action, computed, \tdecorate, observable } from \"mobx\"\n\n/**\n * MobX store for global UI state.\n */\nclass UiState {\n\n\t/**\n\t * If the application sidebar is open.\n\t */\n\tisSidebarOpen = true\n\n\t/**\n\t * If the selected alignment (this.selectedFrames) visualization must be\n\t * visible.\n\t */\n\tisAlignmentDetailVisible = false\n\n\t/**\n\t * Selected alignment scoring method.\n\t */\n\tscoring = null\n\n\t/**\n\t * Existing alignment scoring options.\n\t */\n\tscoringOptions = []\n\n\t/**\n\t * Selected frames for Sankey diagram.\n\t */\n\tsankeyFrames = []\n\n\t/**\n\t * Selected frame pair for alignment detailed visualization.\n\t */\n\tselectedFrames = [null, null]\n\n\theight = null\n\n\twidth = null\n\n\t/**\n\t * Gets available scoring options.\n\t * \n\t * @public\n\t * @method\n\t * @returns {Array} list of scoring options.\n\t */\n\tget scoringSelectOptions() {\n\t\treturn this.scoringOptions.map(x => ({ value: x.id, label: x.desc }));\n\t}\n\n\t/**\n\t * Sets the active scoring method of the visualizer.\n\t * \n\t * @public\n\t * @method\n\t * @param {string} id scoring option id.\n\t */\n\tsetScoring(id) {\n\t\tthis.scoring = this.scoringOptions.find(x => x.id === id);\n\t}\n\n\t/**\n\t * Sets the selected frame pair.\n\t * \n\t * @public\n\t * @method\n\t * @param {string} source source frame id/\n\t * @param {string} target target frame id.\n\t */\n\tsetSelectedFramePair = action((source, target) => {\n\t\tthis.selectedFrames[0] = source;\n\t\tthis.selectedFrames[1] = target;\n\t})\n\n}\n\ndecorate(UiState, {\n\tisSidebarOpen: observable,\n\tisAlignmentDetailVisible: observable,\n\tscoring: observable,\n\tscoringOptions: observable,\n\tsankeyFrames: observable,\n\tselectedFrames: observable,\n\theight: observable,\n\twidth: observable,\n\tscoringSelectOptions: computed,\n});\n\nexport default UiState;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {observer} from 'mobx-react';\nimport {FaArrowLeft} from 'react-icons/fa';\n\nimport './ChartPanel.css';\n\nimport Sankey from './Sankey';\nimport SynsetGraph from './SynsetGraph';\nimport LUMatchingGraph from './LUMatchingGraph';\nimport FEMatchingGraph from './FEMatchingGraph';\nimport AlignmentStore from '../stores/AlignmentStore';\nimport UiState from '../stores/UiState';\n\n/**\n * A component for the primary viewport of the application. It is responsible\n * for controlling which visualization will be rendered based on the UI state.\n */\nconst ChartPanel = observer(\n\tclass ChartPanel extends React.Component {\n\t\tstatic propTypes = {\n\t\t\t/**\n\t\t\t * A mobx store of frame alignments.\n\t\t\t */\n\t\t\tstore: PropTypes.instanceOf(AlignmentStore),\n\t\t\t/**\n\t\t\t * A mobx store for the application's UI state.\n\t\t\t */\n\t\t\tuiState: PropTypes.instanceOf(UiState),\n\t\t}\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.selectableTypes = [\n\t\t\t\t\"lu_wordnet\",\n\t\t\t\t\"synset\",\n\t\t\t\t\"synset_inv\",\n\t\t\t\t\"lu_muse\",\n\t\t\t\t\"fe_matching\",\n\t\t\t\t\"lu_bert\",\n\t\t\t]\n\t\t}\n\n\t\t/**\n\t\t * Handles click on \"Back\" button/arrow.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t */\n\t\tonBackClick() {\n\t\t\tthis.props.uiState.isAlignmentDetailVisible = false;\n\t\t}\n\n\t\t/**\n\t\t * Handles click on a edge/link of the Sankey diagram.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {Object} source edge's source frame object.\n\t\t * @param {Object} target edge's target frame object.\n\t\t */\n\t\tonEdgeClick(source, target) {\n\t\t\tconst {uiState} = this.props;\n\t\t\t\n\t\t\tif (this.selectableTypes.indexOf(uiState.scoring.type) > -1) {\n\t\t\t\tuiState.isAlignmentDetailVisible = true;\n\t\t\t\tuiState.setSelectedFramePair(source.gid, target.gid);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Renders the appropriate detail/matching graph for the selected frame\n\t\t * pair and scoring technique.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @returns {JSX}\n\t\t */\n\t\trenderMatchingGraph() {\n\t\t\tconst {store, uiState} = this.props;\n\n\t\t\tif (uiState.scoring) {\n\t\t\t\tconst framePair = uiState.selectedFrames.map(x => store.frames[x]);\n\n\t\t\t\tswitch(uiState.scoring.type) {\n\t\t\t\t\tcase 'lu_muse':\n\t\t\t\t\tcase 'lu_bert':\n\t\t\t\t\t\treturn <LUMatchingGraph store={store} uiState={uiState} framePair={framePair} />;\n\t\t\t\t\tcase 'fe_matching':\n\t\t\t\t\t\treturn <FEMatchingGraph store={store} uiState={uiState} framePair={framePair} />;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn <SynsetGraph store={store} uiState={uiState} framePair={framePair} />;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\trender() {\n\t\t\tconst {store, uiState} = this.props;\n\t\t\tlet className = \"\";\n\n\t\t\t// Determining the tranformation that must be done to show the correct chart.\n\t\t\tclassName += uiState.isAlignmentDetailVisible ? \"shift\" : \"no-shift\";\n\t\t\n\t\t\treturn (\n\t\t\t\t<div\n\t\t\t\t\tid=\"chart-panel-container\"\n\t\t\t\t\tclassName={className}\n\t\t\t\t>\n\t\t\t\t\t{\n\t\t\t\t\t\tuiState.isAlignmentDetailVisible &&\n\t\t\t\t\t\t<div id=\"back-button-container\" onClick={() => this.onBackClick()} >\n\t\t\t\t\t\t\t<FaArrowLeft size=\"1.75em\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\t<Sankey\n\t\t\t\t\t\tstore={store}\n\t\t\t\t\t\tuiState={uiState}\n\t\t\t\t\t\tonEdgeClick={(s, t) => this.onEdgeClick(s, t)}\n\t\t\t\t\t/>\n\t\t\t\t\t{this.renderMatchingGraph()}\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t}\n)\n\nexport default ChartPanel;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './CheckBox.css';\n\n/**\n * \n * A checkbox component with label and state change event support.\n * \n */\nexport default class CheckBox extends React.Component {\n\tstatic propTypes = {\n\t\t/**\n\t\t * The checkbox current state (checked or not).\n\t\t */\n\t\tchecked: PropTypes.bool,\n\t\t/**\n\t\t * The checkbox label string.\n\t\t */\n\t\tlabel: PropTypes.string,\n\t\t/**\n\t\t * A callback called when the checkbox state changes.\n\t\t * \n\t\t * @param {boolean} checked the new \"checked\" state.\n\t\t */\n\t\tonChange: PropTypes.func,\n\t}\n\n\trender() {\n\t\tconst { id, checked, disabled, label, onChange } = this.props;\n\n\t\treturn (\n\t\t\t<div className=\"checkbox-wrapper form-label\">\n\t\t\t\t<input id={id} type=\"checkbox\" checked={checked || false} onChange={e => onChange(e.target.checked)} disabled={disabled} />\n\t\t\t\t<label htmlFor={id} style={{ marginLeft: 6 }}>{label}</label>\n\t\t\t</div>\n\t\t);\n\t}\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './FormLabel.css';\n\n/**\n * \n * A component for styled form labels.\n * \n */\nexport default class FormLabel extends React.Component {\n\tstatic propTypes = {\n\t\t/**\n\t\t * The label string.\n\t\t */\n\t\ttext: PropTypes.string,\n\t}\n\n\trender() {\n\t\tconst {children, style} = this.props;\n\n\t\treturn (\n\t\t\t<div className=\"form-label\" style={style}>\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t);\n\t}\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './NumericInput.css';\nimport FormLabel from './FormLabel';\n\n/**\n * \n * A numeric input field component.\n * \n */\nexport default class NumericInput extends React.Component {\n\tstatic propTypes = {\n\t\t/**\n\t\t * Optional label for this field.\n\t\t */\n\t\tlabel: PropTypes.string,\n\t\t/**\n\t\t * The minimum value for the input element. \n\t\t */\n\t\tmin: PropTypes.number,\n\t\t/**\n\t\t * The maximum value for the input element. \n\t\t */\n\t\tmax: PropTypes.number,\n\t\t/**\n\t\t * The step of the input field. Use 1 for integer only.\n\t\t */\n\t\tstep: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\t\t/**\n\t\t * Placeholder string of the input field.\n\t\t */\n\t\tplaceholder: PropTypes.string,\n\t\t/**\n\t\t * The numeric input field value.\n\t\t */\n\t\tvalue: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\t\t/**\n\t\t * Whether the input field is disabled or not.\n\t\t */\n\t\tdisabled: PropTypes.bool,\n\t\t/**\n\t\t * A callback called when the input field value changes.\n\t\t * \n\t\t * @param {number} value the new value of the input field.\n\t\t */\n\t\tonChange: PropTypes.func,\n\t}\n\n\t/**\n\t * Renders the input label if it was passed via props.\n\t * \n\t * @public\n\t * @method\n\t * @returns {JSX} \n\t */\n\trenderLabel() {\n\t\tconst {label} = this.props;\n\n\t\tif (label) {\n\t\t\treturn <FormLabel>{label}</FormLabel>;\n\t\t}\n\t}\n\n\trender() {\n\t\tconst {min, max, step, placeholder, value, disabled, onChange, style} = this.props;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{this.renderLabel()}\n\t\t\t\t<input\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tmin={min}\n\t\t\t\t\tmax={max}\n\t\t\t\t\tstep={step}\n\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\tvalue={value || ''}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tonChange={e => onChange(Number(e.target.value))}\n\t\t\t\t\tstyle={style}\n\t\t\t\t\tclassName=\"numeric-input-wrapper\"\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\t}\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './CheckBoxEnabledInput.css';\n\nimport CheckBox from './CheckBox';\nimport NumericInput from './NumericInput';\n\n/**\n * \n * A component for a numeric input field that can be enabled or disabled\n * depending ina checkbox.\n * \n */\nexport default class CheckBoxEnabledInput extends React.Component {\n\tstatic propTypes = {\n\t\t/**\n\t\t * The checkbox current state (checked or not).\n\t\t */\n\t\tchecked: PropTypes.bool,\n\t\t/**\n\t\t * The numeric input field value.\n\t\t */\n\t\tvalue: PropTypes.number,\n\t\t/**\n\t\t * The checkbox label string.\n\t\t */\n\t\tlabel: PropTypes.string,\n\t\t/**\n\t\t * The input field placeholder string.\n\t\t */\n\t\tplaceholder: PropTypes.string,\n\t\t/**\n\t\t * The minimum value for the input element. \n\t\t */\n\t\tmin: PropTypes.number,\n\t\t/**\n\t\t * A callback called when the checkbox state changes.\n\t\t * \n\t\t * @param {boolean} checked the new \"checked\" state.\n\t\t */\n\t\tonCheckedChange: PropTypes.func,\n\t\t/**\n\t\t * A callback called when the input field value changes.\n\t\t * \n\t\t * @param {number} value the new value of the input field.\n\t\t */\n\t\tonValueChange: PropTypes.func,\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tchecked,\n\t\t\tvalue,\n\t\t\tlabel,\n\t\t\tplaceholder,\n\t\t\tmin,\n\t\t\tdisabled,\n\t\t\tonCheckedChange,\n\t\t\tonValueChange,\n\t\t} = this.props;\n\t\t\t\n\t\treturn (\n\t\t\t<div className=\"checkbox-enable-input-wrapper\">\n\t\t\t\t<CheckBox\n\t\t\t\t\tid=\"restrict-neighborhood\"\n\t\t\t\t\tchecked={checked}\n\t\t\t\t\tonChange={onCheckedChange}\n\t\t\t\t\tlabel={label}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t/>\n\t\t\t\t<div className=\"checkbox-enabled-input-input-wrapper\">\n\t\t\t\t\t<NumericInput\n\t\t\t\t\t\tmin={min}\n\t\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tdisabled={disabled || !checked}\n\t\t\t\t\t\tonChange={onValueChange}\n\t\t\t\t\t\t// style={{ width: '202px' }}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './JsonFileInput.css';\n\nimport parserScript from '../workers/parser'\n\nconst worker = new Worker(parserScript)\n\n/**\n * \n * A file input component used to load local json files.\n * \n */\nclass JsonFileInput extends React.Component {\n\n\tstatic propTypes = {\n\t\t/**\n\t\t * A callback called when the file is changed.\n\t\t * \n\t\t * @param {String} file the file name.\n\t\t */\n\t\tonFileChange: PropTypes.func,\n\n\t\t/**\n\t\t * A callback called when the file is parsed\n\t\t * @param {Object} data the parsed json file.\n\t\t */\n\t\tonFileParse: PropTypes.func,\n\t}\n\n\t/**\n\t * Parses the file of the input field and sends its contents to the parent\n\t * component. When parsing fails, this method will be update this component\n\t * state.\n\t * \n\t * @todo Move parsing to a service worker.\n\t * @public\n\t * @param {Event} event the file change event.\n\t */\n\tonFileChange = event => {\n\t\tconst file = event.target.files[0];\n\n\t\tif (file) {\n\t\t\tthis.props.onFileChange(file)\n\n\t\t\tworker.postMessage(file)\n\t\t\tworker.onmessage = (message) => {\n\t\t\t\tif (message.data instanceof Error) {\n\t\t\t\t\tthis.setState({ error: true });\n\t\t\t\t}\n\n\t\t\t\tthis.props.onFileParse(message.data)\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Renders an error message.\n\t * \n\t * @public\n\t * @method\n\t * @returns {JSX}\n\t */\n\trenderError() {\n\t\tconst {error} = this.props;\n\t\treturn error ? <p className=\"upload-error\">Error reading input file.</p> : null;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<input type=\"file\" onChange={this.onFileChange} />\n\t\t\t\t{this.renderError()}\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default JsonFileInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\n\nimport './Slider.css';\n\nimport FormLabel from './FormLabel';\n\n/**\n * \n * A slider component that also allows textual input in [0,1] interval.\n * \n */\nconst Slider = observer(\n\tclass Slider extends React.Component {\n\t\tstatic propTypes = {\n\t\t\t/**\n\t\t\t * The current value of the slider.\n\t\t\t */\n\t\t\tvalue: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\t\t\t/**\n\t\t\t * A callback called when the slider value changes.\n\t\t\t * \n\t\t\t * @param {string} value the new value.\n\t\t\t */\n\t\t\tonChange: PropTypes.func,\n\t\t}\n\n\t\trender(){\n\t\t\tconst {value, disabled, onChange, label} = this.props;\n\n\t\t\treturn (\n\t\t\t\t<div className=\"slider-container\">\n\t\t\t\t\t<FormLabel>{label}</FormLabel>\n\t\t\t\t\t<div className=\"slider-input-container\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"range\"\n\t\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\t\tmax={1}\n\t\t\t\t\t\t\tstep={0.001}\n\t\t\t\t\t\t\tvalue={value || \"\"}\n\t\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\t\tonChange={e => onChange(e.target.value)}\n\t\t\t\t\t\t\tclassName=\"slider\" />\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\t\tmax={1}\n\t\t\t\t\t\t\tstep=\"any\"\n\t\t\t\t\t\t\tvalue={value || \"\"}\n\t\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\t\tonChange={e => onChange(e.target.value)}\n\t\t\t\t\t\t\tclassName=\"slider-text\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n);\n\nexport default Slider;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Select from 'react-select';\nimport MultiSelect from \"@kenshooui/react-multi-select\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { FaBars } from 'react-icons/fa';\nimport { observer } from 'mobx-react';\n\nimport './Sidebar.css';\n\nimport CheckBox from './CheckBox';\nimport CheckBoxEnabledInput from './CheckBoxEnabledInput';\nimport FormLabel from './FormLabel';\nimport JsonFileInput from './JsonFileInput';\nimport NumericInput from './NumericInput';\nimport Slider from './Slider';\n\nimport AlignmentStore from '../stores/AlignmentStore';\nimport UiState from '../stores/UiState';\n\n/**\n * \n * A Sidebar component for the alignment visualization tool. This sidebar\n * renders the components necessary to input alignment json files and change\n * visualization parameters.\n * \n */\nconst Sidebar = observer(\n\tclass Sidebar extends React.Component {\n\t\tstatic propTypes = {\n\t\t\t/**\n\t\t\t * A mobx store of frame alignments.\n\t\t\t */\n\t\t\tstore: PropTypes.instanceOf(AlignmentStore),\n\t\t\t/**\n\t\t\t * A mobx store for the application's UI state.\n\t\t\t */\n\t\t\tuiState: PropTypes.instanceOf(UiState),\n\t\t}\n\n\t\t/**\n\t\t * Handles an alignment file. All parsed data is loaded to the\n\t\t * AlignmentStore instance.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {Object} data parsed data from an alignment file.\n\t\t */\n\t\tonFileChange = data => this.props.store.isLoading = true\n\n\t\t/**\n\t\t * Handles an alignment file. All parsed data is loaded to the\n\t\t * AlignmentStore instance.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {Object} data parsed data from an alignment file.\n\t\t */\n\t\tonFileParse = data => {\n\t\t\tif (!(data instanceof Error)) {\n\t\t\t\tthis.props.store.load(data)\n\t\t\t}\n\n\t\t\tthis.props.store.isLoading = false\n\t\t}\n\n\n\t\t/**\n\t\t * Handles the selection of a scoring option.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {Object} option the selected scoring option.\n\t\t */\n\t\tonScoringChange = option => this.props.uiState.setScoring(option.value)\n\n\t\t/**\n\t\t * Handles changes in frame selection for the visualization.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {Array} selected list of selected frames.\n\t\t */\n\t\tonFrameSelectionChange = selected => this.props.uiState.sankeyFrames = selected\n\n\t\t/**\n\t\t * Updates a property in the params object of the current scoring of the\n\t\t * UiState instance.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {string} param the parameter propery name\n\t\t * @param {*} value the new value for the parameter.\n\t\t */\n\t\tupdateParam = (param, value) => {\n\t\t\tconst {uiState} = this.props;\n\t\t\tif (uiState.scoring) {\n\t\t\t\tuiState.scoring.params[param] = value;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Handles change in visualization score threshold.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {number} value the new threshold value.\n\t\t */\n\t\tonThresholdChange = value => this.updateParam(\"threshold\", value)\n\n\t\t/**\n\t\t * Handles change in checkbox \"Restrict number of connections of each frame\".\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {boolean} checked whether the checkbox is checked. \n\t\t */\n\t\tonLimitSankeyEdgesChange = checked => this.updateParam(\"limitSankeyEdges\", checked)\n\n\t\t/**\n\t\t * Handles change in maximum number of edges displayed in the Sankey diagram.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {number} value an integer edge limit for each frame.\n\t\t */\n\t\tonSankeyEdgesMaxChange = value => this.updateParam(\"sankeyMaxEdges\", value)\n\n\t\t/**\n\t\t * Handles change on checkbox \"Show ONLY selected frames\".\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {boolean} checked whether the checkbox is checked. \n\t\t */\n\t\tonDisplayOnlyFrameSetChange = checked => this.updateParam(\"displayOnlyFrameSet\", checked)\n\n\t\t/**\n\t\t * Handles change in vector neighborhood size parameter.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {number} value an integer neighborhood size.\n\t\t */\n\t\tonNeighborhoodSizeChange = value => this.updateParam(\"neighborhoodSize\", value)\n\n\t\t/**\n\t\t * Handles change in cosine similarity threshold.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {number} value the new cosine similarity threshold value.\n\t\t */\n\t\tonSimilarityThresholdChange = value => this.updateParam(\"similarityThreshold\", value)\n\n\t\t/**\n\t\t * Renders parameters that are exclusive for scoring matching LUs through\n\t\t * vectors.\n\t\t * \n\t\t * @public \n\t\t * @method\n\t\t * @returns {JSX} \n\t\t */\n\t\trenderVectorFields() {\n\t\t\tconst {uiState} = this.props;\n\n\t\t\tif (uiState.scoring && uiState.scoring.type === 'lu_muse') {\n\t\t\t\tconst {params} = uiState.scoring;\n\n\t\t\t\treturn (\n\t\t\t\t\t<div className=\"sidebar-row\">\n\t\t\t\t\t\t<div className=\"sidebar-cell\">\n\t\t\t\t\t\t\t<NumericInput\n\t\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\t\tstep={1}\n\t\t\t\t\t\t\t\tvalue={params.neighborhoodSize}\n\t\t\t\t\t\t\t\tonChange={this.onNeighborhoodSizeChange}\n\t\t\t\t\t\t\t\tlabel=\"Vector neighborhood size\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"sidebar-cell\">\n\t\t\t\t\t\t\t<Slider\n\t\t\t\t\t\t\t\tlabel=\"Cosine similarity threshold\"\n\t\t\t\t\t\t\t\tvalue={params.similarityThreshold}\n\t\t\t\t\t\t\t\tonChange={this.onSimilarityThresholdChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\t\n\t\trender() {\n\t\t\tconst {store, uiState} = this.props;\n\t\t\tconst sidebarWidth = { width: `calc(${uiState.isSidebarOpen ? '550px' : '60px'} - 32px)` };\n\t\t\tconst contentDisplay = { display: uiState.isSidebarOpen ? 'block' : 'none' };\n\t\t\tconst params = uiState.scoring ? uiState.scoring.params : {};\n\t\t\n\t\t\treturn (\n\t\t\t\t<div className=\"sidebar-container\" style={sidebarWidth} >\n\t\t\t\t\t<div className=\"sidebar-icon-container\">\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tonClick={() => uiState.isSidebarOpen = !uiState.isSidebarOpen}\n\t\t\t\t\t\t\tclassName=\"siderbar-icon-click-wrapper\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<FaBars size=\"1.75em\" color=\"#3F51B5\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style={contentDisplay} >\n\t\t\t\t\t\t<FormLabel style={{ marginTop: 0 }}>Alignment file</FormLabel>\n\t\t\t\t\t\t<div className=\"sidebar-row\">\n\t\t\t\t\t\t\t<JsonFileInput onFileChange={this.onFileChange} onFileParse={this.onFileParse} />\n\t\t\t\t\t\t\t{store.isLoading &&\n\t\t\t\t\t\t\t\t<ClipLoader size={24} color={'#3F51B5'} css={'margin-left: 25px;'} />\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"sidebar-row\">\n\t\t\t\t\t\t\t<div className=\"sidebar-cell\">\n\t\t\t\t\t\t\t\t<FormLabel>Scoring technique</FormLabel>\n\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\toptions={uiState.scoringSelectOptions}\n\t\t\t\t\t\t\t\t\tonChange={this.onScoringChange}\n\t\t\t\t\t\t\t\t\tdisabled={store.isLoading}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"sidebar-cell\">\n\t\t\t\t\t\t\t\t<Slider\n\t\t\t\t\t\t\t\t\tvalue={params.threshold}\n\t\t\t\t\t\t\t\t\tdisabled={store.isLoading || !uiState.scoring}\n\t\t\t\t\t\t\t\t\tonChange={this.onThresholdChange}\n\t\t\t\t\t\t\t\t\tlabel=\"Score threshold\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{this.renderVectorFields()}\n\t\t\t\t\t\t<div className=\"sidebar-row\">\n\t\t\t\t\t\t\t<div className=\"sidebar-cell\">\n\t\t\t\t\t\t\t\t<CheckBoxEnabledInput\n\t\t\t\t\t\t\t\t\tchecked={params.limitSankeyEdges}\n\t\t\t\t\t\t\t\t\tvalue={params.sankeyMaxEdges}\n\t\t\t\t\t\t\t\t\tdisabled={store.isLoading || !uiState.scoring}\n\t\t\t\t\t\t\t\t\tonCheckedChange={this.onLimitSankeyEdgesChange}\n\t\t\t\t\t\t\t\t\tonValueChange={this.onSankeyEdgesMaxChange}\n\t\t\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\t\t\tlabel=\"Restrict number of connections of each frame:\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Max # of edges for frame\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"sidebar-cell\">\n\t\t\t\t\t\t\t\t<CheckBox\n\t\t\t\t\t\t\t\t\tid=\"show-selected-only\"\n\t\t\t\t\t\t\t\t\tchecked={params.displayOnlyFrameSet}\n\t\t\t\t\t\t\t\t\tdisabled={store.isLoading || !uiState.scoring}\n\t\t\t\t\t\t\t\t\tonChange={this.onDisplayOnlyFrameSetChange}\n\t\t\t\t\t\t\t\t\tlabel=\"Show ONLY selected frames\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<FormLabel>Frame selection</FormLabel>\n\t\t\t\t\t\t<MultiSelect\n\t\t\t\t\t\t\titems={store.frameOptions}\t\n\t\t\t\t\t\t\tselectedItems={uiState.sankeyFrames}\n\t\t\t\t\t\t\tonChange={this.onFrameSelectionChange}\n\t\t\t\t\t\t\tresponsiveHeight=\"350px\"\n\t\t\t\t\t\t\titemHeight={30}\n\t\t\t\t\t\t\twrapperClassName=\"multi-select-wrapper\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n);\n\nexport default Sidebar;","import React from 'react';\nimport ReactResizeDetector from 'react-resize-detector';\n\nimport \"@kenshooui/react-multi-select/dist/style.css\";\nimport './App.css';\n\nimport ChartPanel from './components/ChartPanel';\nimport Sidebar from './components/Sidebar';\nimport AlignmentStore from './stores/AlignmentStore';\nimport UiState from './stores/UiState';\n\nconst uiState = new UiState();\nconst store = new AlignmentStore(uiState);\n\nfunction onResize (width, height) {\n\tuiState.width = width;\n\tuiState.height = height;\n}\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Sidebar store={store} uiState={uiState} />\n\t\t\t<div className=\"app-body\">\n\t\t\t\t<ChartPanel store={store} uiState={uiState} />\n\t\t\t\t<ReactResizeDetector handleWidth handleHeight onResize={onResize} />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const workerCode = () => {\n\t// eslint-disable-next-line no-restricted-globals\n\tself.onmessage = function(message) {\n\t\tconst reader = new FileReader();\n\t\n\t\treader.addEventListener('load', load => {\n\t\t\ttry {\n\t\t\t\tconst data = JSON.parse(load.target.result)\n\t\t\t\tpostMessage(data)\n\t\t\t} catch (exception) {\n\t\t\t\tpostMessage(exception)\n\t\t\t}\n\t\t});\n\t\n\t\treader.readAsBinaryString(message.data);\n\t}\n}\n\nlet code = workerCode.toString();\ncode = code.substring(code.indexOf(\"{\")+1, code.lastIndexOf(\"}\"));\n\nconst blob = new Blob([code], {type: \"application/javascript\"});\nconst workerScript = URL.createObjectURL(blob);\n\nmodule.exports = workerScript;"],"sourceRoot":""}